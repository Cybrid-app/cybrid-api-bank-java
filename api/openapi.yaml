openapi: 3.0.3
info:
  contact:
    email: support@cybrid.app
    name: Cybrid Support
  description: "# Cybrid API documentation\n\nWelcome to Cybrid, an all-in-one crypto\
    \ platform that enables you to easily **build** and **launch** white-label crypto\
    \ products or services.\n\nIn these documents, you'll find details on how our\
    \ REST API operates and generally how our platform functions.\n\nIf you're looking\
    \ for our UI SDK Widgets for Web or Mobile (iOS/Android), generated API clients,\
    \ or demo applications, head over to our [Github repo](https://github.com/Cybrid-app).\n\
    \n\U0001f4a1 We recommend bookmarking the [Cybrid LinkTree](https://linktr.ee/cybridtechnologies)\
    \ which contains many helpful links to platform resources.\n\n## Getting Started\n\
    \nThis is Cybrid's public interactive API documentation, which allows you to fully\
    \ test our APIs. If you'd like to use a different tool to exercise our APIs, you\
    \ can download the [Open API 3.0 yaml](https://bank.sandbox.cybrid.app/api/schema/v1/swagger.yaml)\
    \ for import.\n\nIf you're new to our APIs and the Cybrid Platform, follow the\
    \ below guides to get set up and familiar with the platform:\n\n1. [Understanding\
    \ the Platform](https://kb.cybrid.xyz/understanding-the-platform)\n2. [Getting\
    \ Started in the Cybrid Sandbox](https://kb.cybrid.xyz/getting-started-guide)\n\
    3. [Getting Ready for Trading](https://kb.cybrid.xyz/getting-ready-for-trading)\n\
    4. [Running the Web Demo App](https://kb.cybrid.xyz/locally-running-the-web-demo-app)\
    \ (or, alternatively, [Testing with Hosted Web Demo App](https://kb.cybrid.xyz/testing-with-hosted-web-demo-app))\n\
    \nIn [Getting Started in the Cybrid Sandbox](https://kb.cybrid.xyz/getting-started-guide),\
    \ we walk you through how to use the [Cybrid Sandbox](https://id.sandbox.cybrid.app/)\
    \ to create a test bank and generate API keys. In [Getting Ready for Trading](https://kb.cybrid.xyz/getting-ready-for-trading),\
    \ we walk through creating customers, customer identities, accounts, as well as\
    \ executing quotes and trades.\n\nIf you've already run through the first two\
    \ guides, you can follow the [Running the Web Demo App](https://kb.cybrid.xyz/locally-running-the-web-demo-app)\
    \ guide to test our web SDK with your sandbox `bank` and `customer`.\n\n## Working\
    \ with the Cybrid Platform\n\nThere are three primary ways you can interact with\
    \ the Cybrid platform:\n\n1. Directly via our RESTful API (this documentation)\n\
    2. Using our API clients available in a variety of languages ([Angular](https://github.com/Cybrid-app/cybrid-api-bank-angular),\
    \ [Java](https://github.com/Cybrid-app/cybrid-api-bank-java), [Kotlin](https://github.com/Cybrid-app/cybrid-api-bank-kotlin),\
    \ [Python](https://github.com/Cybrid-app/cybrid-api-bank-python), [Ruby](https://github.com/Cybrid-app/cybrid-api-bank-ruby),\
    \ [Swift](https://github.com/Cybrid-app/cybrid-api-bank-swift) or [Typescript](https://github.com/Cybrid-app/cybrid-api-bank-typescript))\n\
    3. Integrating a platform specific SDK ([Web](https://github.com/Cybrid-app/cybrid-sdk-web),\
    \ [Android](https://github.com/Cybrid-app/cybrid-sdk-android), [iOS](https://github.com/Cybrid-app/cybrid-sdk-ios))\n\
    \nOur complete set of APIs allows you to manage resources across three distinct\
    \ areas: your `Organization`, your `Banks` and your `Identities`. For most of\
    \ your testing and interaction you'll be using the `Bank` API, which is where\
    \ the majority of APIs reside.\n\n*The complete set of APIs can be found on the\
    \ following pages:*\n\n| API                                                 \
    \             | Description                                                 |\n\
    |------------------------------------------------------------------|-------------------------------------------------------------|\n\
    | [Organization API](https://organization.sandbox.cybrid.app/api/schema/swagger-ui)\
    \   | APIs to manage organizations                                |\n| [Bank API](https://bank.sandbox.cybrid.app/api/schema/swagger-ui)\
    \                   | APIs to manage banks (and all downstream customer activity)\
    \ |\n| [Identities API](https://id.sandbox.cybrid.app/api/schema/swagger-ui) \
    \                      | APIs to manage organization and bank identities     \
    \        |\n\nFor questions please contact [Support](mailto:support@cybrid.xyz)\
    \ at any time for assistance, or contact the [Product Team](mailto:product@cybrid.xyz)\
    \ for product suggestions.\n\n## Authenticating with the API\n\nThe Cybrid Platform\
    \ uses OAuth 2.0 Bearer Tokens to authenticate requests to the platform. Credentials\
    \ to create `Organization` and `Bank` tokens can be generated via the [Cybrid\
    \ Sandbox](https://id.sandbox.cybrid.app). Access tokens can be generated for\
    \ a `Customer` as well via the [Cybrid IdP](https://id.sandbox.cybrid.app) as\
    \ well.\n\nAn `Organization` access token applies broadly to the whole Organization\
    \ and all of its `Banks`, whereas, a `Bank` access token is specific to an individual\
    \ Bank. `Customer` tokens, similarly, are scoped to a specific customer in a bank.\n\
    \nBoth `Organization` and `Bank` tokens can be created using the OAuth Client\
    \ Credential Grant flow. Each Organization and Bank has its own unique `Client\
    \ ID` and `Secret` that allows for machine-to-machine authentication.\n\nA `Bank`\
    \ can then generate `Customer` access tokens via API using our [Identities API](https://id.sandbox.cybrid.app/api/schema/swagger-ui).\n\
    \n<font color=\"orange\">**⚠️ Never share your Client ID or Secret publicly or\
    \ in your source code repository.**</font>\n\nYour `Client ID` and `Secret` can\
    \ be exchanged for a time-limited `Bearer Token` by interacting with the Cybrid\
    \ Identity Provider or through interacting with the **Authorize** button in this\
    \ document.\n\nThe following curl command can be used to quickly generate a `Bearer\
    \ Token` for use in testing the API or demo applications.\n\n```\n# Example request\
    \ when using Bank credentials\ncurl -X POST https://id.sandbox.cybrid.app/oauth/token\
    \ -d '{\n    \"grant_type\": \"client_credentials\",\n    \"client_id\": \"<Your\
    \ Client ID>\",\n    \"client_secret\": \"<Your Secret>\",\n    \"scope\": \"\
    banks:read banks:write bank_applications:execute accounts:read accounts:execute\
    \ customers:read customers:write customers:execute prices:read quotes:execute\
    \ quotes:read trades:execute trades:read transfers:execute transfers:read external_bank_accounts:read\
    \ external_bank_accounts:write external_bank_accounts:execute external_wallets:read\
    \ external_wallets:execute workflows:read workflows:execute deposit_addresses:read\
    \ deposit_addresses:execute deposit_bank_accounts:read deposit_bank_accounts:execute\
    \ invoices:read invoices:write invoices:execute\"\n  }' -H \"Content-Type: application/json\"\
    \n\n# When using Organization credentials set `scope` to 'organizations:read organizations:write\
    \ organization_applications:execute banks:read banks:write banks:execute bank_applications:execute\
    \ users:read users:execute customers:read accounts:read prices:read quotes:execute\
    \ quotes:read trades:execute trades:read transfers:read transfers:execute external_bank_accounts:read\
    \ external_wallets:read workflows:read deposit_addresses:read deposit_bank_accounts:read\
    \ invoices:read'\n```\n<font color=\"orange\">**⚠️ Note: The above curl will create\
    \ a bearer token with full scope access. Delete scopes if you'd like to restrict\
    \ access.**</font>\n\n## Authentication Scopes\n\nThe Cybrid platform supports\
    \ the use of scopes to control the level of access a token is limited to. Scopes\
    \ do not grant access to resources; instead, they provide limits, in support of\
    \ the least privilege principal.\n\nThe following scopes are available on the\
    \ platform and can be requested when generating either an Organization, Bank or\
    \ Customer token. Generally speaking, the _Read_ scope is required to read and\
    \ list resources, the _Write_ scope is required to update a resource and the _Execute_\
    \ scope is required to create a resource.\n\n| Resource              | Read scope\
    \ (Token Type)                                    | Write scope (Token Type) \
    \                     | Execute scope (Token Type)                       |\n|-----------------------|------------------------------------------------------------|-----------------------------------------------|--------------------------------------------------|\n\
    | Account               | accounts:read (Organization, Bank, Customer)       \
    \        |                                               | accounts:execute (Bank,\
    \ Customer)                |\n| Bank                  | banks:read (Organization,\
    \ Bank)                            | banks:write (Organization, Bank)        \
    \      | banks:execute (Organization)                     |\n| Customer      \
    \        | customers:read (Organization, Bank, Customer)              | customers:write\
    \ (Bank, Customer)              | customers:execute (Bank)                   \
    \      |\n| Deposit Address       | deposit_addresses:read (Organization, Bank,\
    \ Customer)      | deposit_addresses:write (Bank, Customer)      | deposit_addresses:execute\
    \ (Bank, Customer)       |\n| External Bank Account | external_bank_accounts:read\
    \ (Organization, Bank, Customer) | external_bank_accounts:write (Bank, Customer)\
    \ | external_bank_accounts:execute (Bank, Customer)  |\n| External Wallet    \
    \   | external_wallet:read (Organization, Bank, Customer)        |           \
    \                                    | external_wallet:execute (Bank, Customer)\
    \         |\n| Organization          | organizations:read (Organization)     \
    \                     | organizations:write (Organization)            |      \
    \                                            |\n| User                  | users:read\
    \ (Organization)                                  |                          \
    \                     | users:execute (Organization)                     |\n|\
    \ Price                 | prices:read (Bank, Customer)                       \
    \        |                                               |                   \
    \                               |\n| Quote                 | quotes:read (Organization,\
    \ Bank, Customer)                 |                                          \
    \     | quotes:execute (Organization, Bank, Customer)    |\n| Trade          \
    \       | trades:read (Organization, Bank, Customer)                 |       \
    \                                        | trades:execute (Organization, Bank,\
    \ Customer)    |\n| Transfer              | transfers:read (Organization, Bank,\
    \ Customer)              |                                               | transfers:execute\
    \ (Organization, Bank, Customer) |\n| Workflow              | workflows:read (Organization,\
    \ Bank, Customer)              |                                             \
    \  | workflows:execute (Bank, Customer)               |\n| Invoice           \
    \    | invoices:read (Organization, Bank, Customer)               | invoices:write\
    \ (Bank, Customer)               | invoices:execute (Bank, Customer)         \
    \       |\n\n## Available Endpoints\n\nThe available APIs for the [Identity](https://id.sandbox.cybrid.app/api/schema/swagger-ui),\
    \ [Organization](https://organization.sandbox.cybrid.app/api/schema/swagger-ui)\
    \ and [Bank](https://bank.sandbox.cybrid.app/api/schema/swagger-ui) API services\
    \ are listed below:\n\n| API Service  | Model                | API Endpoint Path\
    \              | Description                                                 \
    \                                      |\n|--------------|----------------------|--------------------------------|---------------------------------------------------------------------------------------------------|\n\
    | Identity     | Bank                 | /api/bank_applications         | Create\
    \ and list banks                                                             \
    \                |\n| Identity     | CustomerToken        | /api/customer_tokens\
    \           | Create customer JWT access tokens                              \
    \                                   |\n| Identity     | Organization         |\
    \ /api/organization_applications | Create and list organizations             \
    \                                                        |\n| Identity     | Organization\
    \         | /api/users                     | Create and list organization users\
    \                                                                |\n| Organization\
    \ | Organization         | /api/organizations             | APIs to retrieve and\
    \ update organization name                                                   \
    \  |\n| Bank         | Account              | /api/accounts                  |\
    \ Create and list accounts, which hold a specific asset for a customers      \
    \                       |\n| Bank         | Asset                | /api/assets\
    \                    | Get a list of assets supported by the platform (ex: BTC,\
    \ ETH)                                     |\n| Bank         | Bank          \
    \       | /api/banks                     | Create, update and list banks, the\
    \ parent to customers, accounts, etc                             |\n| Bank   \
    \      | Customer             | /api/customers                 | Create and list\
    \ customers                                                                  \
    \       |\n| Bank         | DepositAddress       | /api/deposit_addresses    \
    \     | Create, get and list deposit addresses                               \
    \                             |\n| Bank         | ExternalBankAccount  | /api/external_bank_accounts\
    \    | Create, get and list external bank accounts, which connect customer bank\
    \ accounts to the platform |\n| Bank         | ExternalWallet       | /api/external_wallets\
    \          | Create, get, list and delete external wallets, which connect customer\
    \ wallets to the platform     |\n| Bank         | IdentityVerification | /api/identity_verifications\
    \    | Create and list identity verifications, which are performed on customers\
    \ for KYC                  |\n| Bank         | Invoice              | /api/invoices\
    \                  | Create, get, cancel and list invoices                   \
    \                                          |\n| Bank         | PaymentInstruction\
    \   | /api/payment_instructions      | Create, get and list payment instructions\
    \ for invoices                                            |\n| Bank         |\
    \ Price                | /api/prices                    | Get the current prices\
    \ for assets on the platform                                                 |\n\
    | Bank         | Quote                | /api/quotes                    | Create\
    \ and list quotes, which are required to execute trades                      \
    \                |\n| Bank         | Symbol               | /api/symbols     \
    \              | Get a list of symbols supported for trade (ex: BTC-USD)     \
    \                                      |\n| Bank         | Trade             \
    \   | /api/trades                    | Create and list trades, which buy or sell\
    \ cryptocurrency                                          |\n| Bank         |\
    \ Transfer             | /api/transfers                 | Create, get and list\
    \ transfers (e.g., funding, book)                                            \
    \  |\n| Bank         | Workflow             | /api/workflows                 |\
    \ Create, get and list workflows                                             \
    \                       |\n\n## Understanding Object Models & Endpoints\n\n**Organizations**\n\
    \nAn `Organization` is meant to represent the organization partnering with Cybrid\
    \ to use our platform.\n\nAn `Organization` typically does not directly interact\
    \ with `customers`. Instead, an Organization has one or more `banks`, which encompass\
    \ the financial service offerings of the platform.\n\n**Banks**\n\nA `Bank` is\
    \ owned by an `Organization` and can be thought of as an environment or container\
    \ for `customers` and product offerings. Banks are created in either `Sandbox`\
    \ or `Production` mode, where `Sandbox` is the environment that you would test,\
    \ prototype and build in prior to moving to `Production`.\n\nAn `Organization`\
    \ can have multiple `banks`, in either `Sandbox` or `Production` environments.\
    \ A `Sandbox Bank` will be backed by stubbed data and process flows. For instance,\
    \ funding source transfer processes as well as trades will be simulated rather\
    \ than performed, however asset prices are representative of real-world values.\
    \ You have an unlimited amount of simulated fiat currency for testing purposes.\n\
    \n**Customers**\n\n`Customers` represent your banking users on the platform. At\
    \ present, we offer support for `Individuals` as Customers.\n\n`Customers` must\
    \ be verified (i.e., KYC'd) in our system before they can play any part on the\
    \ platform, which means they must have an associated and a passing `Identity Verification`.\
    \ See the Identity Verifications section for more details on how a customer can\
    \ be verified.\n\n`Customers` must also have an `Account` to be able to transact,\
    \ in the desired asset class. See the Accounts APIs for more details on setting\
    \ up accounts for the customer.\n"
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.cybrid.xyz/tos
  title: Cybrid Bank API
  version: v0.114.37
servers:
- description: Sandbox environment is simulated money movement
  url: https://bank.sandbox.cybrid.app
- description: Production environment is real money movement
  url: https://bank.production.cybrid.app
paths:
  /api/assets:
    get:
      description: Retrieves a listing of assets.
      operationId: listAssets
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetList'
          description: get list of assets
      summary: Get assets list
      tags:
      - Assets
      x-accepts: application/json
  /api/banks:
    get:
      description: "Retrieves a listing of bank.\n\nRequired scope: **banks:read**"
      operationId: listBanks
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated bank_guids to list banks for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankList'
          description: get list of banks
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - invalid subject, Authentication failed"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - banks:read
      summary: Get banks list
      tags:
      - Banks
      x-accepts: application/json
    post:
      description: "Creates a bank.\n\n## Bank Type\n\nBank's can be created in either\
        \ `sandbox` or `production` mode. Sandbox Banks will not transact in real\
        \ fiat dollars or cryptocurrencies.\n\nVia the API, only `sandbox` banks can\
        \ be created. In order to enable a `production` bank please contact [Support](mailto:support@cybrid.app).\n\
        \n## Attestation Identity Records\n\nAttestation Identity Records is a method\
        \ the Cybrid Platform uses to verify the identity of a Bank's customers. Please\
        \ see the documentation under the create Identity Record API for more technical\
        \ detail.\n\nThis feature must specifically be enabled in the Bank's `features`\
        \ array by including the `attestation_identity_records` flag. At present,\
        \ attestation identity records is the supported method for verifying a customer's\
        \ identity on the platform.\n\nPlease contact [Support](mailto:support@cybrid.app)\
        \ to inquire about enabling this option for your Organization.\n\n\n\nRequired\
        \ scope: **banks:execute**"
      operationId: createBank
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBank'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: Bank created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: name, type, features,\
                      \ supported_trading_symbols, supported_country_codes"
                    message_code: missing_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: type supported\
                      \ values: [\"sandbox\"] "
                    message_code: invalid_value
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unsupported_parameter:
                  value:
                    status: 415
                    error_message: "Unsupported value exception. Parameter: features\
                      \ supported values: [ attestation_identity_records ]"
                    message_code: unsupported_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - banks:execute
      summary: Create Bank
      tags:
      - Banks
      x-content-type: application/json
      x-accepts: application/json
  /api/banks/{bank_guid}:
    get:
      description: "Retrieves a bank.\n\nRequired scope: **banks:read**"
      operationId: getBank
      parameters:
      - description: Identifier for the bank.
        explode: false
        in: path
        name: bank_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: bank found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: invalid bank_guid value
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: bank not found
      security:
      - BearerAuth: []
        oauth2:
        - banks:read
      summary: Get Bank
      tags:
      - Banks
      x-accepts: application/json
    patch:
      description: "Update a bank.\n\nRequired scope: **banks:write**"
      operationId: updateBank
      parameters:
      - description: Identifier for the bank.
        explode: false
        in: path
        name: bank_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchBank'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: bank found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: invalid bank_guid value
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: bank not found
      security:
      - BearerAuth: []
        oauth2:
        - banks:write
      summary: Patch Bank
      tags:
      - Banks
      x-content-type: application/json
      x-accepts: application/json
  /api/customers:
    get:
      description: "Retrieves a listing of customers.\n\nRequired scope: **customers:read**"
      operationId: listCustomers
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated bank_guids to list customers for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list customers for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list customers for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
          description: get list of customers
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject,"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: Get customers list
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: "Creates a customer.\n\n## Customer Type\n\nCustomer resources\
        \ are an abstraction for real world individuals and businesses on the Cybrid\
        \ Platform and are used throughout the platform to perform high level operations,\
        \ e.g., create a quote, execute a trade, etc..\n\nCustomers can have additional\
        \ resources attached to them, e.g., identity verifications, accounts, etc.\n\
        \n## State\n\n| State | Description |\n|-------|-------------|\n| storing\
        \ | The Platform is storing the customer details in our private store |\n\
        | unverified | The Platform has not yet verified the customer's identity |\n\
        | verified | The Platform has verified the customer's identity |\n| rejected\
        \ | The Platform was not able to successfully verify the customer's identity\
        \ |\n| frozen | The customer has been frozen on the Platform |\n\n\n\nRequired\
        \ scope: **customers:execute**"
      operationId: createCustomer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCustomer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type"
                    message_code: missing_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: type supported\
                      \ values: [\"individual\"] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - customers:execute
      summary: Create Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /api/customers/{customer_guid}:
    get:
      description: "Retrieves a customer.\n\nRequired scope: **customers:read**"
      operationId: getCustomer
      parameters:
      - description: Identifier for the customer.
        explode: false
        in: path
        name: customer_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Include PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: customer not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: customer not found
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: Get Customer
      tags:
      - Customers
      x-accepts: application/json
    patch:
      description: "Update a customer.\n\nRequired scope: **customers:write**"
      operationId: updateCustomer
      parameters:
      - description: Identifier for the customer.
        explode: false
        in: path
        name: customer_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCustomer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: invalid customer_guid value
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: customer not found
      security:
      - BearerAuth: []
        oauth2:
        - customers:write
      summary: Patch Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_addresses:
    get:
      description: "Retrieves a list of deposit addresses.\n\nRequired scope: **deposit_addresses:read**"
      operationId: listDepositAddresses
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list deposit addresses for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list deposit addresses for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list deposit addresses for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list deposit addresses for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddressList'
          description: get list of deposit addresses
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:read
      summary: List Deposit Addresses
      tags:
      - DepositAddresses
      x-accepts: application/json
    post:
      description: "Creates a deposit address.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the deposit\
        \ address details in our private store |\n| created | The Platform has created\
        \ the deposit address |\n\n\n\nRequired scope: **deposit_addresses:execute**"
      operationId: createDepositAddress
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDepositAddress'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
          description: Deposit Address created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:execute
      summary: Create Deposit Address
      tags:
      - DepositAddresses
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_addresses/{deposit_address_guid}:
    get:
      description: "Retrieves a deposit address.\n\nRequired scope: **deposit_addresses:read**"
      operationId: getDepositAddress
      parameters:
      - description: Identifier for the deposit address.
        explode: false
        in: path
        name: deposit_address_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
          description: deposit address found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: deposit_address not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: deposit_address not found
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:read
      summary: Get Deposit Address
      tags:
      - DepositAddresses
      x-accepts: application/json
  /api/deposit_bank_accounts:
    get:
      description: "Retrieves a list of deposit bank accounts.\n\nRequired scope:\
        \ **deposit_bank_accounts:read**"
      operationId: listDepositBankAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list deposit bank accounts for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list deposit bank accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list deposit bank accounts
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list deposit bank accounts for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated unique memo ids to list deposit bank accounts
          for.
        explode: true
        in: query
        name: unique_memo_id
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccountList'
          description: get list of deposit bank accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:read
      summary: List Deposit Bank Accounts
      tags:
      - DepositBankAccounts
      x-accepts: application/json
    post:
      description: "Creates a deposit bank account.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the deposit\
        \ bank account details in our private store |\n| created | The Platform has\
        \ created the deposit bank account |\n\n\n\nRequired scope: **deposit_bank_accounts:execute**"
      operationId: createDepositBankAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDepositBankAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccount'
          description: Deposit Bank Account created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: UnsupportedRoutableAccounts\
                      \ - Bank does not support routable accounts"
                    message_code: unsupported_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:execute
      summary: Create Deposit Bank Account
      tags:
      - DepositBankAccounts
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_bank_accounts/{deposit_bank_account_guid}:
    get:
      description: "Retrieves a deposit bank account.\n\nRequired scope: **deposit_bank_accounts:read**"
      operationId: getDepositBankAccount
      parameters:
      - description: Identifier for the deposit bank account.
        explode: false
        in: path
        name: deposit_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccount'
          description: deposit bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: deposit_bank_account not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: deposit_bank_account not found
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:read
      summary: Get Deposit Bank Account
      tags:
      - DepositBankAccounts
      x-accepts: application/json
  /api/external_bank_accounts:
    get:
      description: "Retrieves a listing of external bank accounts.\n\nRequired scope:\
        \ **external_bank_accounts:read**"
      operationId: listExternalBankAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated external_bank_account_guids to list external_bank_accounts
          for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list external_bank_accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list external_bank_accounts
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated assets to list external_bank_accounts for.
        explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list external_bank_accounts for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccountList'
          description: Get list of external_bank_accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:read
      summary: Get external bank accounts list
      tags:
      - External Bank Accounts
      x-accepts: application/json
    post:
      description: "Create an ExternalBankAccount.\n\n## Account creation\n\nAccounts\
        \ can be created for a Bank or a Customer.\n\nTo create accounts for your\
        \ Bank, omit the `customer_guid` parameter in the request body. To create\
        \ accounts for your Customers, include the `customer_guid` parameter in the\
        \ request body.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the external bank account details in our\
        \ private store |\n| completed | The Platform has created the external bank\
        \ account |\n| unverified | The external bank account is created, but it has\
        \ not yet been verified |\n| failed | The Platform was not able to successfully\
        \ create the external bank account |\n| refresh_required | The Platform has\
        \ created the external bank account, but needs to be refreshed |\n| deleting\
        \ | The Platform is deleting the external bank account |\n| deleted | The\
        \ Platform has deleted the external bank account |\n\n## Failure codes\n\n\
        | Code | Description |\n|------|-------------|\n| invalid_routing_number |\
        \ The provided routing number is invalid |\n\n\n\nRequired scope: **external_bank_accounts:execute**"
      operationId: createExternalBankAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExternalBankAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: ExternalBankAccount created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: name, asset, account_kind"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. plaid_account_id must be at the
                      most 128 characters long
                    message_code: invalid_value
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: account_kind\
                      \ supported values: [\"plaid\", \"plaid_processor_token\", \"\
                      raw_routing_details\"] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidCustomer - Customer\
                      \ not found"
                    message_code: no_customer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:execute
      summary: Create ExternalBankAccount
      tags:
      - External Bank Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/external_bank_accounts/{external_bank_account_guid}:
    delete:
      description: "Deletes an external bank account.\n\nRequired scope: **external_bank_accounts:execute**"
      operationId: deleteExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: External bank account deleted
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:execute
      summary: Delete External Bank Account
      tags:
      - External Bank Accounts
      x-accepts: application/json
    get:
      description: "Retrieves an external bank account.\n\nRequired scope: **external_bank_accounts:read**"
      operationId: getExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Force the balance on the account to be retrieved.
        explode: true
        in: query
        name: force_balance_refresh
        required: false
        schema:
          type: boolean
        style: form
      - description: "Include balance information in the response. If `force_balance_refresh`\
          \ is `true`, the most up to date balance will be returned. If `force_balance_refresh`\
          \ is `false`, the cached balance will be returned. `balance_updated_at`\
          \ in the response will provide the timestamp the balance was last updated."
        explode: true
        in: query
        name: include_balances
        required: false
        schema:
          type: boolean
        style: form
      - description: Include the account holder's PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: External bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: PlaidInstitutionNotRespondingError\
                      \ - Financial institution did not respond"
                    message_code: request_timeout
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:read
      summary: Get External Bank Account
      tags:
      - External Bank Accounts
      x-accepts: application/json
    patch:
      description: "Patch an external bank account.\n\nRequired scope: **external_bank_accounts:write**"
      operationId: patchExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchExternalBankAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: external bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:write
      summary: Patch ExternalBankAccount
      tags:
      - External Bank Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/external_wallets:
    get:
      description: "Retrieves a listing of external wallets.\n\nRequired scope: **external_wallets:read**"
      operationId: listExternalWallets
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: The owner of the entity.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestOwner'
        style: form
      - description: Comma separated external_wallet_guids to list external_wallets
          for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list external_wallets for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list external_wallets for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated assets to list external_wallets for.
        explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list external_wallets for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletList'
          description: Get list of external_wallets
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:read
      summary: Get external wallets list
      tags:
      - External Wallets
      x-accepts: application/json
    post:
      description: "Create an ExternalWallet.\n\n## Wallet creation\n\nExternal Wallets\
        \ can be created for a Bank or a Customer.\n\nTo create a wallet for your\
        \ Bank, omit the `customer_guid` parameter in the request body. To create\
        \ a wallet for your Customers, include the `customer_guid` parameter in the\
        \ request body.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the external wallet details in our private\
        \ store |\n| pending | The Platform is waiting for the external wallet to\
        \ be created |\n| completed | The Platform has created the external wallet\
        \ |\n| failed | The Platform was not able to successfully create the external\
        \ wallet |\n| deleting | The Platform is deleting the external wallet |\n\
        | deleted | The Platform has deleted the external wallet |\n\n\n\nExternal\
        \ wallets can be added to the bank by leaving the customer_guid blank. External\
        \ wallets added to the bank can be used by any customer of the bank.\n\nExternal\
        \ wallets can also be added to a specific customer by providing the customer_guid.\
        \ External wallets added to a customer can only be used by that customer.\n\
        \nRequired scope: **external_wallets:execute**"
      operationId: createExternalWallet
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExternalWallet'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: ExternalWallet created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: name, asset"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. customer_guid must  32 characters
                      long
                    message_code: invalid_value
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: account_kind\
                      \ supported values: [\"fireblocks_external_wallet\", \"circle_wire_external_wallet\"\
                      ] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "409":
          content:
            application/json:
              examples:
                already_exists:
                  value:
                    status: 409
                    error_message: "Data exists: External wallet already exists"
                    message_code: data_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data already exists
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidCustomer - Customer\
                      \ not found"
                    message_code: no_customer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:execute
      summary: Create ExternalWallet
      tags:
      - External Wallets
      x-content-type: application/json
      x-accepts: application/json
  /api/external_wallets/{external_wallet_guid}:
    delete:
      description: "Deletes an external wallet.\n\nRequired scope: **external_wallets:execute**"
      operationId: deleteExternalWallet
      parameters:
      - description: Identifier for the external wallet.
        explode: false
        in: path
        name: external_wallet_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: External wallet deleted
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalWallet not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalWallet not found
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:execute
      summary: Delete External Wallet
      tags:
      - External Wallets
      x-accepts: application/json
    get:
      description: "Retrieves an external_wallet.\n\nRequired scope: **external_wallets:read**"
      operationId: getExternalWallet
      parameters:
      - description: Identifier for the external_wallet.
        explode: false
        in: path
        name: external_wallet_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: External wallet found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalWallet not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalWallet not found
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:read
      summary: Get External Wallet
      tags:
      - External Wallets
      x-accepts: application/json
  /api/identity_verifications:
    get:
      description: "Retrieves a list of identity verifications.\n\nRequired scope:\
        \ **customers:read**"
      operationId: listIdentityVerifications
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list identity verifications for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list identity verifications for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list identity verifications
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list identity verifications for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerificationList'
          description: get list of identity verifications
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: List Identity Verifications
      tags:
      - IdentityVerifications
      x-accepts: application/json
    post:
      description: "Creates an Identity Verification.\n\n## Identity Verifications\n\
        \nIdentity Verifications confirm an individual's identity with for the purpose\
        \ of inclusion on the platform. This know-your-customer (KYC) process is a\
        \ requirement for individuals to be able to transact. At present, we offer\
        \ support for Cybrid performing the verification or working with partners\
        \ to accept their KYC/AML process and have it attested to in our platform.\n\
        \n## State\n\n| State | Description |\n|-------|-------------|\n| storing\
        \ | The Platform is storing the identity verification details in our private\
        \ store |\n| waiting | The Platform is waiting for the customer to complete\
        \ the identity verification process |\n| expired | The identity verification\
        \ process has expired |\n| completed | The identity verification process has\
        \ been completed |\n\n## Outcome\n\n| State | Description |\n|-------|-------------|\n\
        | passed | The customer has passed the identity verification process |\n|\
        \ failed | The customer has failed the identity verification process |\n\n\
        ## Failure Codes\n\n| Code | Description |\n|-------|-------------|\n| id_check_failure\
        \ | Failure due to an issue verifying the provided ID |\n| id_quality_check_failure\
        \ | Failure due to an issue verifying the provided ID based on the image quality\
        \ |\n| id_barcode_check_failure | Failure due to an issue verifying the provided\
        \ ID based on the barcode |\n| id_expiration_check_failure | Failure due to\
        \ an issue verifying the provided ID based on the expiration date |\n| id_double_side_check_failure\
        \ | Failure due to an issue verifying the provided ID based on both sides\
        \ not being provided |\n| id_type_allowed_check_failure | Failure due to an\
        \ issue verifying the provided ID based on the type provided |\n| id_country_allowed_check_failure\
        \ | Failure due to an issue verifying the provided ID based on the issuing\
        \ country |\n| database_check_failure | Failure due to an issue verifying\
        \ the provided information against authoritative data sources |\n| selfie_failure\
        \ | Failure due to an issue verifying the provided selfie photo |\n| duplicate_person_check_failure\
        \ | Failure due to a customer already existing for this person |\n| name_check_failure\
        \ | Failure due to an issue verifying the name of the person |\n| address_check_failure\
        \ | Failure due to an issue verifying the address of the person |\n| dob_check_failure\
        \ | Failure due to an issue verifying the date of birth of the person |\n\
        | id_number_check_failure | Failure due to an issue verifying an identification\
        \ number of the person |\n| phone_number_check_failure | Failure due to an\
        \ issue verifying the phone number of the person |\n| email_address_check_failure\
        \ | Failure due to an issue verifying the email address of the person |\n\
        | plaid_failure | Failure due to an issue interacting with Plaid |\n| decision_timeout\
        \ | Failure due to an issue verifying the email address of the person |\n\
        | requested_failure | In sandbox, the caller requested that the process failed\
        \ |\n\n\n\nRequired scope: **customers:write**"
      operationId: createIdentityVerification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIdentityVerification'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerification'
          description: Identity Verification created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - customers:write
      summary: Create Identity Verification
      tags:
      - IdentityVerifications
      x-content-type: application/json
      x-accepts: application/json
  /api/identity_verifications/{identity_verification_guid}:
    get:
      description: "Retrieves an identity verification.\n\nRequired scope: **customers:read**"
      operationId: getIdentityVerification
      parameters:
      - description: Identifier for the identity verification.
        explode: false
        in: path
        name: identity_verification_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerificationWithDetails'
          description: identity verification found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: identity_verification not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: identity_verification not found
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: Get Identity Verification
      tags:
      - IdentityVerifications
      x-accepts: application/json
  /api/invoices:
    get:
      description: "Retrieves a list of invoices.\n\nRequired scope: **invoices:read**"
      operationId: listInvoices
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list invoices for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list invoices for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list invoices for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list invoices for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list invoices for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
          description: get list of invoices
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: List Invoices
      tags:
      - Invoices
      x-accepts: application/json
    post:
      description: "Creates a invoice.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing    | The Platform is storing the invoice details in our private\
        \ store |\n| unpaid     | The invoice is unpaid. Payment instructions can\
        \ be generated for an invoice in this state |\n| cancelling | The invocie\
        \ is in the process of being cancelled |\n| cancelled  | The invoice has been\
        \ cancelled | \n| settling   | The invoice has been paid and the funds associated\
        \ with this invoice are in the process of being settled |\n| paid       |\
        \ The invoice has been paid and the funds associated with this invoice have\
        \ been settled | \n\n\n\nRequired scope: **invoices:execute**"
      operationId: createInvoice
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInvoice'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:execute
      summary: Create Invoice
      tags:
      - Invoices
      x-content-type: application/json
      x-accepts: application/json
  /api/invoices/{invoice_guid}:
    delete:
      description: "Cancels an invoice.\n\nRequired scope: **invoices:execute**"
      operationId: cancelInvoice
      parameters:
      - description: Identifier for the invoice.
        explode: false
        in: path
        name: invoice_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice cancelled
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: Invoice not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invoice not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:execute
      summary: Cancel Invoice
      tags:
      - Invoices
      x-accepts: application/json
    get:
      description: "Retrieves a invoice.\n\nRequired scope: **invoices:read**"
      operationId: getInvoice
      parameters:
      - description: Identifier for the payment instruction.
        explode: false
        in: path
        name: invoice_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: invoice found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: invoice not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invoice not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: Get Invoice
      tags:
      - Invoices
      x-accepts: application/json
  /api/payment_instructions:
    get:
      description: "Retrieves a list of payment instructions.\n\nRequired scope: **invoices:read**"
      operationId: listPaymentInstructions
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list payment instructions for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list payment instructions for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list payment instructions for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated invoice_guids to list payment instructions for.
        explode: true
        in: query
        name: invoice_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionList'
          description: get list of payment instructions
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: List Payment Instructions
      tags:
      - PaymentInstructions
      x-accepts: application/json
    post:
      description: "Creates a payment instruction.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the payment\
        \ instruction details in our private store |\n| created | The Platform has\
        \ created the payment instruction |\n| expired | The PaymentInstruction is\
        \ no longer valid |\n\n\n\nRequired scope: **invoices:write**"
      operationId: createPaymentInstruction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaymentInstruction'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstruction'
          description: Payment Instruction created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:write
      summary: Create Payment Instruction
      tags:
      - PaymentInstructions
      x-content-type: application/json
      x-accepts: application/json
  /api/payment_instructions/{payment_instruction_guid}:
    get:
      description: "Retrieves a payment_instruction.\n\nRequired scope: **invoices:read**"
      operationId: getPaymentInstruction
      parameters:
      - description: Identifier for the payment instruction.
        explode: false
        in: path
        name: payment_instruction_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstruction'
          description: payment_instruction found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: payment_instruction not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: payment_instruction not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: Get Payment Instruction
      tags:
      - PaymentInstructions
      x-accepts: application/json
  /api/accounts:
    get:
      description: "Retrieves a list of accounts.\n\nRequired scope: **accounts:read**"
      operationId: listAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: The owner of the entity.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestOwner'
        style: form
      - description: Comma separated account_guids to list accounts for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_types to list accounts for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list accounts for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list accounts for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
          description: get list of accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - accounts:read
      summary: List Accounts
      tags:
      - Accounts
      x-accepts: application/json
    post:
      description: "Creates an account.\n\n## Account Type\n\nAn Account is tied to\
        \ a specific cryptocurrency or fiat and is comprised of transactions and a\
        \ current balance.\n\nAn account is required to allow a Bank or Customer to\
        \ hold cryptocurrency or a Customer to hold fiat on the Cybrid Platform.\n\
        \nAt present, account's can be created as `trading` or `fiat ` accounts and\
        \ are required before a Customer can generate quotes or execute a `trade`\
        \ or `transfer`.\n\nTo create accounts for your Bank, omit the `customer_guid`\
        \ parameter in the request body. To create accounts for your Customers, include\
        \ the `customer_guid` parameter in the request body.\n\n## Asset\n\nThe asset\
        \ is the specific cryptocurrency or fiat that the account holds, e.g., 'BTC'\
        \ for Bitcoin or `USD` for US dollars. See the Symbols API for a complete\
        \ list of cryptocurrencies and fiat supported. \n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the account\
        \ details in our private store |\n| created | The Platform has created the\
        \ account |\n\n\n\nRequired scope: **accounts:execute**"
      operationId: createAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: account created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type, customer_guid,\
                      \ asset, name"
                    message_code: missing_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: type supported\
                      \ values: [\"trading\"] "
                    message_code: invalid_value
                invalid_value:
                  value:
                    status: 400
                    error_message: name must be at the most 128 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - accounts:execute
      summary: Create Account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/accounts/{account_guid}:
    get:
      description: "Retrieves an account.\n\nRequired scope: **accounts:read**"
      operationId: getAccount
      parameters:
      - description: Identifier for the account.
        explode: false
        in: path
        name: account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: account not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: account not found
      security:
      - BearerAuth: []
        oauth2:
        - accounts:read
      summary: Get Account
      tags:
      - Accounts
      x-accepts: application/json
  /api/prices:
    get:
      description: "Retrieves a listing of symbol prices.\n\n## Symbols\n\nSymbol\
        \ are pairs and are in the format asset-counter_asset, e.g., 'BTC-USD' for\
        \ the Bitcoin/ USD pair. See the Symbols API for a complete list of cryptocurrencies\
        \ supported.\n\n\n\nRequired scope: **prices:read**"
      operationId: listPrices
      parameters:
      - description: Comma separated symbols to list prices for.
        explode: true
        in: query
        name: symbol
        required: false
        schema:
          type: string
        style: form
      - description: The bank identifier to retrieve prices for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolPriceResponse'
          description: get list of price
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated symbols must be at the most 4096
                      characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: prices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - prices:read
      summary: Get Price
      tags:
      - Prices
      x-accepts: application/json
  /api/quotes:
    get:
      description: "Retrieves a listing of quotes for all customers of a bank.\n\n\
        Required scope: **quotes:read**"
      operationId: listQuotes
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated quote_guids to list quotes for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated product_types to list accounts for.
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list quotes for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list quotes for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list quotes for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteList'
          description: get list of quotes
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - quotes:read
      summary: Get quotes list
      tags:
      - Quotes
      x-accepts: application/json
    post:
      description: "Creates a quote.\n\n## Quote creation\n\nQuotes can be created\
        \ for a Bank or a Customer.\n\nTo create quotes for your Bank, omit the `customer_guid`\
        \ parameter in the request body. To create quotes for your Customers, include\
        \ the `customer_guid` parameter in the request body.\n\n\n\nRequired scope:\
        \ **quotes:execute**"
      operationId: createQuote
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuote'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: quote created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: customer_guid, symbol,\
                      \ side"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. customer guids must be at the most
                      32 characters long
                    message_code: invalid_value
                invalid_parameter:
                  value:
                    status: 400
                    error_message: "Invalid parameter. receive_amount, deliver_amount\
                      \ are mutually exclusive. Atleast one of them should be present"
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidQuoteAmountException\
                      \ - quote amount is below the configured threshold"
                    message_code: invalid_quote_amount
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - quotes:execute
      summary: Create Quote
      tags:
      - Quotes
      x-content-type: application/json
      x-accepts: application/json
  /api/quotes/{quote_guid}:
    get:
      description: "Retrieves a quote.\n\nRequired scope: **quotes:read**"
      operationId: getQuote
      parameters:
      - description: Identifier for the quote.
        explode: false
        in: path
        name: quote_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: quote found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: quote not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: quote not found
      security:
      - BearerAuth: []
        oauth2:
        - quotes:read
      summary: Get Quote
      tags:
      - Quotes
      x-accepts: application/json
  /api/symbols:
    get:
      description: Retrieves a listing of symbols.
      operationId: listSymbols
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symbols'
          description: get list of symbols
        "401":
          content:
            application/json:
              examples:
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
      security:
      - BearerAuth: []
        oauth2: []
      summary: Get Symbols list
      tags:
      - Symbols
      x-accepts: application/json
  /api/trades:
    get:
      description: "Retrieves a listing of trades.\n\nRequired scope: **trades:read**"
      operationId: listTrades
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated trade_guids to list trades for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list trades for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list trades for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list trades for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list trades for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list trades for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list trades for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date inclusive lower bound, ISO8601."
        explode: true
        in: query
        name: created_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: created_at_lt
        required: false
        schema:
          type: string
        style: form
      - description: "Updated at start date inclusive lower bound, ISO8601."
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Updated at end date exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: updated_at_lt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeList'
          description: get list of trades
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated account guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - trades:read
      summary: Get trades list
      tags:
      - Trades
      x-accepts: application/json
    post:
      description: "Creates a trade.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the trade details in our private store\
        \ |\n| pending | The Platform is executing the trade |\n| cancelled | The\
        \ Platform has cancelled the trade |\n| settling | The Platform is settling\
        \ the trade |\n| completed | The Platform has successfully completed the trade\
        \ |\n| failed | The Platform was not able to successfully complete the trade\
        \ |\n\n## Failure codes\n\n| Code | Description |\n|------|-------------|\n\
        | non_sufficient_funds | The customer does not have enough funds to complete\
        \ the trade |\n| unsupported | The trading pair is not supported for this\
        \ customer |\n| limit_exceeded | The customer is over the limits that have\
        \ been set for them for this activity |\n\n\n\nRequired scope: **trades:execute**"
      operationId: createTrade
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrade'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
          description: Trade created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: quote_guid"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. quote guid must be at the most 32
                      characters long
                    message_code: invalid_value
                invalid_parameter:
                  value:
                    status: 400
                    error_message: Invalid parameter. expected_error not permitted
                      in production
                    message_code: invalid_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: expected_error\
                      \ supported values: [\"invalid_quote_guid\", \"expired_quote\"\
                      , \"non_sufficient_funds\"] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "409":
          content:
            application/json:
              examples:
                already_exists:
                  value:
                    status: 409
                    error_message: "Data exists: Trade for quote already exists"
                    message_code: data_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data already exists
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: QuoteExpiredException\
                      \ - Quote has expired"
                    message_code: quote_expired
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - trades:execute
      summary: Create Trade
      tags:
      - Trades
      x-content-type: application/json
      x-accepts: application/json
  /api/trades/{trade_guid}:
    get:
      description: "Retrieves a trade.\n\nRequired scope: **trades:read**"
      operationId: getTrade
      parameters:
      - description: Identifier for the trade.
        explode: false
        in: path
        name: trade_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
          description: trade found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: trade not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: trade not found
      security:
      - BearerAuth: []
        oauth2:
        - trades:read
      summary: Get Trade
      tags:
      - Trades
      x-accepts: application/json
  /api/transfers:
    get:
      description: "Retrieves a listing of transfers.\n\nRequired scope: **transfers:read**"
      operationId: listTransfers
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated transfer_guids to list transfers for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated transfer_types to list accounts for.
        explode: true
        in: query
        name: transfer_type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list transfers for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list transfers for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list transfers for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list transfers for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list transfers for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list transfers for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date inclusive lower bound, ISO8601"
        explode: true
        in: query
        name: created_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: created_at_lt
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date inclusive lower bound, ISO8601"
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: updated_at_lt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferList'
          description: get list of transfers
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated account guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - transfers:read
      summary: Get transfers list
      tags:
      - Transfers
      x-accepts: application/json
    post:
      description: "Creates a transfer.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the trade details in our private store\
        \ |\n| reviewing | The Platform is reviewing the transfer for compliance |\n\
        | pending | The Platform is executing the transfer |\n| completed | The Platform\
        \ has successfully completed the transfer |\n| failed | The Platform was not\
        \ able to successfully complete the transfer |\n\n## Failure codes\n\n| Code\
        \ | Description |\n|------|-------------|\n| non_sufficient_funds | The customer\
        \ does not have enough funds to complete the transfer |\n| refresh_required\
        \ | The transfer's associated external_bank_account needs to be reconnected\
        \ via Plaid |\n| party_name_invalid | The transfer's associated external bank\
        \ account has an invalid party name |\n| limit_exceeded | The customer is\
        \ over the limits that have been set for them for this activity |\n| compliance_rejection\
        \ | The transfer was rejected for compliance reasons |\n\n\n\nRequired scope:\
        \ **transfers:execute**"
      operationId: createTransfer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransfer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Transfer created
        "400":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    status: 400
                    error_message: Expected error invalid
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "409":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    status: 409
                    error_message: Transfer already exists for this quote
                    message_code: quote_already_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "422":
          content:
            application/json:
              examples:
                example_1:
                  value:
                    status: 422
                    error_message: Transfer invalid
                    message_code: invalid_transfer
                example_2:
                  value:
                    status: 422
                    error_message: Asset not supported
                    message_code: invalid_value
                example_3:
                  value:
                    status: 422
                    error_message: Quote not found
                    message_code: no_quote
                example_4:
                  value:
                    status: 422
                    error_message: Quote expired
                    message_code: quote_expired
                example_5:
                  value:
                    status: 422
                    error_message: Quote invalid
                    message_code: invalid_parameter
                example_6:
                  value:
                    status: 422
                    error_message: Customer has been frozen
                    message_code: frozen_customer
                example_7:
                  value:
                    status: 422
                    error_message: Customer has been rejected
                    message_code: rejected_customer
                example_8:
                  value:
                    status: 422
                    error_message: Customer has not been verified
                    message_code: unverified_customer
                example_9:
                  value:
                    status: 422
                    error_message: Account not found
                    message_code: no_account
                example_10:
                  value:
                    status: 422
                    error_message: Account invalid
                    message_code: invalid_account
                example_11:
                  value:
                    status: 422
                    error_message: Source account not found
                    message_code: no_source_account
                example_12:
                  value:
                    status: 422
                    error_message: Source account invalid
                    message_code: invalid_source_account
                example_13:
                  value:
                    status: 422
                    error_message: Destination account not found
                    message_code: no_destination_account
                example_14:
                  value:
                    status: 422
                    error_message: Destination account invalid
                    message_code: invalid_destination_account
                example_15:
                  value:
                    status: 422
                    error_message: External bank account not found
                    message_code: invalid_external_bank_account
                example_16:
                  value:
                    status: 422
                    error_message: External bank account invalid
                    message_code: invalid_external_bank_account
                example_17:
                  value:
                    status: 422
                    error_message: External wallet not found
                    message_code: invalid_external_bank_account
                example_18:
                  value:
                    status: 422
                    error_message: External wallet invalid
                    message_code: invalid_external_bank_account
                example_19:
                  value:
                    status: 422
                    error_message: Bank fee account not found
                    message_code: no_fee_account
                example_20:
                  value:
                    status: 422
                    error_message: Bank fee account invalid
                    message_code: invalid_fee_account
                example_21:
                  value:
                    status: 422
                    error_message: Invalid country for payment rail
                    message_code: invalid_payment_rail_for_country
                example_22:
                  value:
                    status: 422
                    error_message: Invalid direction for payment rail
                    message_code: invalid_payment_rail_for_direction
                example_23:
                  value:
                    status: 422
                    error_message: Bank fiat account not found
                    message_code: no_fiat_account
                example_24:
                  value:
                    status: 422
                    error_message: Bank fiat account state invalid
                    message_code: invalid_fiat_account
                example_25:
                  value:
                    status: 422
                    error_message: Deposit address account not found
                    message_code: no_account
                example_26:
                  value:
                    status: 422
                    error_message: Amount not valid
                    message_code: invalid_value
                example_27:
                  value:
                    status: 422
                    error_message: Deposit bank account account not found
                    message_code: no_account
                example_28:
                  value:
                    status: 422
                    error_message: Amount not valid
                    message_code: invalid_value
                example_29:
                  value:
                    status: 422
                    error_message: Parent deposit bank account account not found
                    message_code: no_account
                example_30:
                  value:
                    status: 422
                    error_message: Quote not found
                    message_code: no_quote
                example_31:
                  value:
                    status: 422
                    error_message: Source account not found
                    message_code: no_source_account
                example_32:
                  value:
                    status: 422
                    error_message: Destination account not found
                    message_code: no_destination_account
                example_33:
                  value:
                    status: 422
                    error_message: Source account invalid
                    message_code: invalid_source_account
                example_34:
                  value:
                    status: 422
                    error_message: Destination account invalid
                    message_code: invalid_destination_account
                example_35:
                  value:
                    status: 422
                    error_message: Quote not found
                    message_code: no_quote
                example_36:
                  value:
                    status: 422
                    error_message: Source account not found
                    message_code: no_source_account
                example_37:
                  value:
                    status: 422
                    error_message: Destination account not found
                    message_code: no_destination_account
                example_38:
                  value:
                    status: 422
                    error_message: Network fee account not found
                    message_code: no_network_fee_account
                example_39:
                  value:
                    status: 422
                    error_message: Source account invalid
                    message_code: invalid_source_account
                example_40:
                  value:
                    status: 422
                    error_message: Destination account invalid
                    message_code: invalid_destination_account
                example_41:
                  value:
                    status: 422
                    error_message: Transfer invalid
                    message_code: invalid_transfer
                example_42:
                  value:
                    status: 422
                    error_message: Transfer not found
                    message_code: no_transfer
                example_43:
                  value:
                    status: 422
                    error_message: Transfer invalid
                    message_code: invalid_transfer
                example_44:
                  value:
                    status: 422
                    error_message: Transfer not found
                    message_code: no_transfer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - transfers:execute
      summary: Create Transfer
      tags:
      - Transfers
      x-content-type: application/json
      x-accepts: application/json
  /api/transfers/{transfer_guid}:
    get:
      description: "Retrieves a transfer.\n\nRequired scope: **transfers:read**"
      operationId: getTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transfer_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: transfer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: transfer not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: transfer not found
      security:
      - BearerAuth: []
        oauth2:
        - transfers:read
      summary: Get Transfer
      tags:
      - Transfers
      x-accepts: application/json
  /api/workflows:
    get:
      description: "Retrieves a listing of workflows.\n\nRequired scope: **workflows:read**"
      operationId: listWorkflows
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated workflow_guids to list workflows for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list workflows for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list workflows for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowsList'
          description: get list of workflows
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - workflows:read
      summary: Get workflows list
      tags:
      - Workflows
      x-accepts: application/json
    post:
      description: "Creates a workflow.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the workflow details in our private store\
        \ |\n| completed | The Platform has created the workflow |\n| failed | The\
        \ workflow was not completed successfully |\n\n## Plaid\n\n| Param | Description\
        \ |\n|-------|-------------|\n| redirect_uri | All URIs must be registered\
        \ with Cybrid. For local testing use `http://localhost:4200/bank-account-connect`\
        \ |\n\n\n\nRequired scope: **workflows:execute**"
      operationId: createWorkflow
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorkflow'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: Workflow created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type"
                    message_code: missing_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidBankCountryCodeConfiguration\
                      \ - Invalid bank configuration: country codes"
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - workflows:execute
      summary: Create Workflow
      tags:
      - Workflows
      x-content-type: application/json
      x-accepts: application/json
  /api/workflows/{workflow_guid}:
    get:
      description: "Retrieves a workflow.\n\nRequired scope: **workflows:read**"
      operationId: getWorkflow
      parameters:
      - description: Identifier for the workflow.
        explode: false
        in: path
        name: workflow_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowWithDetails'
          description: trade found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: workflow not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: workflow not found
      security:
      - BearerAuth: []
        oauth2:
        - workflows:read
      summary: Get Workflow
      tags:
      - Workflows
      x-accepts: application/json
components:
  schemas:
    Asset:
      example:
        symbol: symbol
        code: code
        decimals: 0
        name: name
        type: type
      properties:
        type:
          description: The asset type; one of fiat or crypto.
          type: string
        code:
          description: The unique code for the asset.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the asset.
          maxLength: 128
          minLength: 1
          type: string
        symbol:
          description: The currency symbol for the asset.
          maxLength: 8
          minLength: 1
          type: string
        decimals:
          description: The number of decimals for the default unit of the asset.
          minimum: 0
          type: integer
      required:
      - code
      - decimals
      - name
      - symbol
      - type
      type: object
    AssetTypes:
      enum:
      - fiat
      - crypto
      type: string
    AssetList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          code: code
          decimals: 0
          name: name
          type: type
        - symbol: symbol
          code: code
          decimals: 0
          name: name
          type: type
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of bank entities
          items:
            $ref: '#/components/schemas/Asset'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Bank:
      example:
        features:
        - features
        - features
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        organization_guid: organization_guid
        type: type
        supported_trading_symbols:
        - supported_trading_symbols
        - supported_trading_symbols
        supported_fiat_account_assets:
        - supported_fiat_account_assets
        - supported_fiat_account_assets
        supported_country_codes:
        - supported_country_codes
        - supported_country_codes
      properties:
        guid:
          description: Auto-generated unique identifier for the bank.
          maxLength: 32
          minLength: 32
          type: string
        organization_guid:
          description: The organization's identifier.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The bank's name.
          maxLength: 128
          minLength: 1
          type: string
        type:
          description: The bank type; one of sandbox or production.
          type: string
        supported_trading_symbols:
          description: The bank's list of supported trading symbols.
          items:
            type: string
          type: array
        supported_fiat_account_assets:
          description: The bank's list of supported fiat symbols.
          items:
            type: string
          type: array
        supported_country_codes:
          description: The bank's list of supported country codes.
          items:
            type: string
          type: array
        features:
          description: The bank's enabled features.
          items:
            description: "A combination of: attestation_identity_records, kyc_identity_verifications,\
              \ raw_routing_details, individual_customers, business_customers, routable_accounts_bank,\
              \ and routable_accounts_customer."
            type: string
          type: array
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
      required:
      - created_at
      - features
      - guid
      - name
      - organization_guid
      - type
      type: object
    BankType:
      enum:
      - sandbox
      - production
      type: string
    BankFeature:
      enum:
      - attestation_identity_records
      - kyc_identity_verifications
      - raw_routing_details
      - individual_customers
      - business_customers
      - routable_accounts_bank
      - routable_accounts_customer
      type: string
    BankList:
      example:
        per_page: 0
        total: 0
        objects:
        - features:
          - features
          - features
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          organization_guid: organization_guid
          type: type
          supported_trading_symbols:
          - supported_trading_symbols
          - supported_trading_symbols
          supported_fiat_account_assets:
          - supported_fiat_account_assets
          - supported_fiat_account_assets
          supported_country_codes:
          - supported_country_codes
          - supported_country_codes
        - features:
          - features
          - features
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          organization_guid: organization_guid
          type: type
          supported_trading_symbols:
          - supported_trading_symbols
          - supported_trading_symbols
          supported_fiat_account_assets:
          - supported_fiat_account_assets
          - supported_fiat_account_assets
          supported_country_codes:
          - supported_country_codes
          - supported_country_codes
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of bank entities
          items:
            $ref: '#/components/schemas/Bank'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Customer:
      example:
        website: website
        address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        aliases:
        - middle: middle
          last: last
          first: first
          full: full
        - middle: middle
          last: last
          first: first
          full: full
        date_of_birth: 2000-01-23
        created_at: 2000-01-23T04:56:07.000+00:00
        verification_checks:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        type: type
        labels:
        - labels
        - labels
        email_address: email_address
        updated_at: 2000-01-23T04:56:07.000+00:00
        name:
          middle: middle
          last: last
          first: first
          full: full
        guid: guid
        phone_number: phone_number
        state: state
        bank_guid: bank_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the customer.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: Auto-generated unique identifier for the customer's bank.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The customer type; one of business or individual.
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The customer state; one of storing, unverified, verified,\
            \ rejected, or frozen."
          type: string
        name:
          $ref: '#/components/schemas/Customer_name'
        address:
          $ref: '#/components/schemas/Customer_address'
        aliases:
          description: The customer's aliases. Only available for GET operations when
            'include_pii' is set.
          items:
            $ref: '#/components/schemas/Customer_aliases_inner'
          nullable: true
          type: array
        website:
          description: The customer's website. Only available for GET operations when
            'include_pii' is set.
          nullable: true
          type: string
        date_of_birth:
          description: The customer's DOB. Only available for GET operations when
            'include_pii' is set.
          format: date
          nullable: true
          type: string
        phone_number:
          description: The customer's phone number. Only available for GET operations
            when 'include_pii' is set.
          nullable: true
          type: string
        email_address:
          description: The customer's email address. Only available for GET operations
            when 'include_pii' is set.
          nullable: true
          type: string
        labels:
          description: The labels associated with the customer.
          items:
            type: string
          nullable: true
          type: array
        verification_checks:
          description: The verification checks associated with the customer.
          items:
            $ref: '#/components/schemas/VerificationCheck'
          type: array
      type: object
    CustomerType:
      enum:
      - business
      - individual
      type: string
    CustomerState:
      enum:
      - storing
      - unverified
      - verified
      - rejected
      - frozen
      type: string
    CustomerList:
      example:
        per_page: 0
        total: 0
        objects:
        - website: website
          address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          verification_checks:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          type: type
          labels:
          - labels
          - labels
          email_address: email_address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          phone_number: phone_number
          state: state
          bank_guid: bank_guid
        - website: website
          address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          verification_checks:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          type: type
          labels:
          - labels
          - labels
          email_address: email_address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          phone_number: phone_number
          state: state
          bank_guid: bank_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    IdentityVerification:
      example:
        failure_codes:
        - failure_codes
        - failure_codes
        method: method
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        verification_checks:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        state: state
        type: type
        outcome: outcome
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The identity verification's identifier.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The identity verification type; one of kyc or bank_account.
          type: string
        method:
          description: "The identity verification method; one of business_registration,\
            \ id_and_selfie, tax_id_and_selfie, attested, plaid_identity_match, or\
            \ document_submission."
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The identity verification state; one of storing, waiting,\
            \ expired, or completed."
          type: string
        outcome:
          description: The identity verification outcome; one of passed or failed.
          nullable: true
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
        verification_checks:
          description: The checks associated with the identity verification.
          items:
            $ref: '#/components/schemas/VerificationCheck'
          type: array
      type: object
    IdentityVerificationType:
      enum:
      - kyc
      - bank_account
      type: string
    IdentityVerificationMethod:
      enum:
      - business_registration
      - id_and_selfie
      - tax_id_and_selfie
      - attested
      - plaid_identity_match
      - document_submission
      type: string
    IdentityVerificationState:
      enum:
      - storing
      - waiting
      - expired
      - completed
      type: string
    IdentityVerificationPersonaState:
      enum:
      - waiting
      - pending
      - reviewing
      - processing
      - expired
      - completed
      - unknown
      type: string
    IdentityVerificationOutcome:
      enum:
      - passed
      - failed
      type: string
    IdentityVerificationWithDetails:
      allOf:
      - $ref: '#/components/schemas/IdentityVerification'
      - $ref: '#/components/schemas/IdentityVerificationWithDetails_allOf'
    IdentityVerificationList:
      example:
        per_page: 0
        total: 0
        objects:
        - failure_codes:
          - failure_codes
          - failure_codes
          method: method
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          verification_checks:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          state: state
          type: type
          outcome: outcome
          customer_guid: customer_guid
        - failure_codes:
          - failure_codes
          - failure_codes
          method: method
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          verification_checks:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          state: state
          type: type
          outcome: outcome
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/IdentityVerification'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    VerificationCheck:
      example:
        failure_codes:
        - failure_codes
        - failure_codes
        state: state
        type: type
      properties:
        type:
          description: "The type of verification check; one of business_watchlists,\
            \ business_verification, business_tax_id_verification, person_attested,\
            \ person_tax_id_attested, person_watchlists, person_verification, person_authentication,\
            \ person_gov_id_verification, person_tax_id_verification, external_bank_account_verification,\
            \ or external_bank_account_attested."
          type: string
        state:
          description: "The state of the verification check; one of passed, failed,\
            \ expired, or invalidated."
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
      required:
      - state
      - type
      type: object
    VerificationCheckType:
      enum:
      - business_watchlists
      - business_verification
      - business_tax_id_verification
      - person_attested
      - person_tax_id_attested
      - person_watchlists
      - person_verification
      - person_authentication
      - person_gov_id_verification
      - person_tax_id_verification
      - external_bank_account_verification
      - external_bank_account_attested
      type: string
    VerificationCheckState:
      enum:
      - passed
      - failed
      - expired
      - invalidated
      type: string
    PostDepositBankAccount:
      properties:
        account_guid:
          description: The trading account guid.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      required:
      - account_guid
      type: object
    PostInvoice:
      properties:
        asset:
          description: The asset code the customer will receive the funds in.
          maxLength: 8
          minLength: 1
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the asset, i.e.,\
            \ the amount the customer will receive after fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the asset, i.e.,\
            \ the amount the customer will receive before fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        labels:
          description: The labels associated with the customer.
          items:
            type: string
          nullable: true
          type: array
      required:
      - asset
      type: object
    PostPaymentInstruction:
      properties:
        invoice_guid:
          description: The invoice guid.
          maxLength: 32
          minLength: 32
          type: string
      required:
      - invoice_guid
      type: object
    Invoice:
      example:
        account_guid: account_guid
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: 2
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        invoice_type: invoice_type
        receive_amount: 5
        state: state
        asset: asset
        customer_guid: customer_guid
        deliver_amount: 5
        labels:
        - labels
        - labels
      properties:
        guid:
          description: Auto-generated unique identifier for the payment instruction.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The account payment will ultimately be received into.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        invoice_type:
          description: The type of invoice; one of lightning.
          type: string
        asset:
          description: The asset code the customer will receive the funds in.
          maxLength: 8
          minLength: 1
          type: string
        receive_amount:
          description: "The amount to be received in base units of the asset, i.e.,\
            \ the amount the customer will receive after fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the asset, i.e.,\
            \ the amount the customer will receive before fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        fee:
          description: The fee associated with this invoice in base units of the asset.
          nullable: true
          type: integer
        state:
          description: "The state of the invoice; one of storing, unpaid, cancelling,\
            \ cancelled, settling, or paid."
          type: string
        labels:
          description: The labels associated with the invoice.
          items:
            type: string
          nullable: true
          type: array
      type: object
    InvoiceList:
      example:
        per_page: 0
        total: 0
        objects:
        - account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 2
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          invoice_type: invoice_type
          receive_amount: 5
          state: state
          asset: asset
          customer_guid: customer_guid
          deliver_amount: 5
          labels:
          - labels
          - labels
        - account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 2
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          invoice_type: invoice_type
          receive_amount: 5
          state: state
          asset: asset
          customer_guid: customer_guid
          deliver_amount: 5
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    PaymentInstruction:
      example:
        expected_payment_amount: 5
        failure_code: failure_code
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        network_address: network_address
        invoice_guid: invoice_guid
        expired_at: 2000-01-23T04:56:07.000+00:00
        failed_at: 2000-01-23T04:56:07.000+00:00
        state: state
        expected_payment_asset: expected_payment_asset
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the payment instruction.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        invoice_guid:
          description: The invoice identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        expired_at:
          description: ISO8601 datetime the instructions expired at.
          format: date-time
          nullable: true
          type: string
        failed_at:
          description: ISO8601 datetime the instructions failed to be created at.
          format: date-time
          nullable: true
          type: string
        network_address:
          description: The network address to pay the invoice to.
          nullable: true
          type: string
        expected_payment_asset:
          description: "The asset the payor must pay the invoice in, e.g., BTC."
          nullable: true
          type: string
        expected_payment_amount:
          description: The amount to be paid in base units of expected_payment_asset.
          nullable: true
          type: integer
        failure_code:
          description: "The reason code explaining the failure; ond of invoice_paid,\
            \ invoice_cancelled, or invalid_amount."
          nullable: true
          type: string
        state:
          description: "The state of the payment instruction; one of storing, created,\
            \ expired, or failed."
          type: string
      type: object
    PaymentInstructionList:
      example:
        per_page: 0
        total: 0
        objects:
        - expected_payment_amount: 5
          failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          network_address: network_address
          invoice_guid: invoice_guid
          expired_at: 2000-01-23T04:56:07.000+00:00
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: state
          expected_payment_asset: expected_payment_asset
          customer_guid: customer_guid
        - expected_payment_amount: 5
          failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          network_address: network_address
          invoice_guid: invoice_guid
          expired_at: 2000-01-23T04:56:07.000+00:00
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: state
          expected_payment_asset: expected_payment_asset
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/PaymentInstruction'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    DepositBankAccount:
      example:
        counterparty_name: counterparty_name
        routing_details:
        - routing_number_type: routing_number_type
          routing_number: routing_number
        - routing_number_type: routing_number_type
          routing_number: routing_number
        created_at: 2000-01-23T04:56:07.000+00:00
        account_details:
        - account_number: account_number
        - account_number: account_number
        labels:
        - labels
        - labels
        counterparty_address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        account_guid: account_guid
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        state: state
        asset: asset
        unique_memo_id: unique_memo_id
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: The address' bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The address' customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The address' account identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        state:
          description: The state of the address; one of storing or created.
          type: string
        unique_memo_id:
          description: The unique memo identifier for the address. This is used to
            identify the recipient when sending funds to the account. This value MUST
            be included in all wire transfers to this account.
          type: string
        counterparty_name:
          description: The name of the account holder.
          nullable: true
          type: string
        counterparty_address:
          $ref: '#/components/schemas/DepositBankAccount_counterparty_address'
        account_details:
          description: The account details for the bank account.
          items:
            $ref: '#/components/schemas/DepositBankAccount_account_details_inner'
          nullable: true
          type: array
        routing_details:
          description: The account details for the bank account.
          items:
            $ref: '#/components/schemas/DepositBankAccount_routing_details_inner'
          nullable: true
          type: array
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      type: object
    DepositBankAccountState:
      enum:
      - storing
      - created
      type: string
    DepositBankAccountRoutingNumberType:
      enum:
      - CPA
      - ABA
      - SWIFT
      type: string
    DepositBankAccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - counterparty_name: counterparty_name
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          created_at: 2000-01-23T04:56:07.000+00:00
          account_details:
          - account_number: account_number
          - account_number: account_number
          labels:
          - labels
          - labels
          counterparty_address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          state: state
          asset: asset
          unique_memo_id: unique_memo_id
          bank_guid: bank_guid
          customer_guid: customer_guid
        - counterparty_name: counterparty_name
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          created_at: 2000-01-23T04:56:07.000+00:00
          account_details:
          - account_number: account_number
          - account_number: account_number
          labels:
          - labels
          - labels
          counterparty_address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          state: state
          asset: asset
          unique_memo_id: unique_memo_id
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/DepositBankAccount'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    DepositAddress:
      example:
        account_guid: account_guid
        address: address
        updated_at: 2000-01-23T04:56:07.000+00:00
        format: format
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        state: state
        tag: tag
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
        labels:
        - labels
        - labels
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: The address' bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The address' customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The address' account identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        state:
          description: The state of the address; one of storing or created.
          type: string
        address:
          description: The blockchain address.
          type: string
        format:
          description: The blockchain address format; one of standard or legacy.
          type: string
        tag:
          description: The blockchain address tag.
          type: string
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      type: object
    DepositAddressState:
      enum:
      - storing
      - created
      type: string
    DepositAddressFormat:
      enum:
      - standard
      - legacy
      type: string
    DepositAddressList:
      example:
        per_page: 0
        total: 0
        objects:
        - account_guid: account_guid
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          format: format
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          tag: tag
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        - account_guid: account_guid
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          format: format
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          tag: tag
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/DepositAddress'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    SymbolPrice:
      example:
        symbol: symbol
        sell_price: 6
        sell_price_last_updated_at: 2000-01-23T04:56:07.000+00:00
        buy_price: 0
        buy_price_last_updated_at: 2000-01-23T04:56:07.000+00:00
      properties:
        symbol:
          description: "The trade symbol the pricing is related to. Format is asset-counter_asset,\
            \ e.g., BTC-USD."
          maxLength: 16
          minLength: 1
          type: string
        buy_price:
          description: The purchase price (in base units) for the asset denominated
            in the counter asset currency.
          nullable: true
          type: integer
        sell_price:
          description: The sale price (in base units) for the asset denominated in
            the counter asset currency.
          nullable: true
          type: integer
        buy_price_last_updated_at:
          description: ISO8601 datetime the purchase price was generated at.
          format: date-time
          nullable: true
          type: string
        sell_price_last_updated_at:
          description: ISO8601 datetime the sale price was generated at.
          format: date-time
          nullable: true
          type: string
      type: object
    SymbolPriceResponse:
      description: Array of SymbolPrice entities
      items:
        $ref: '#/components/schemas/SymbolPrice'
      type: array
    PostQuote:
      properties:
        product_type:
          default: trading
          description: The type of product the quote is for.
          enum:
          - trading
          - funding
          - book_transfer
          - crypto_transfer
          type: string
        bank_guid:
          description: The unique identifier for the bank.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: "The asset code the quote was requested for. Populated for\
            \ funding, book transfer and crypto transfer quotes."
          maxLength: 8
          minLength: 1
          type: string
        symbol:
          description: Symbol the quote is being requested for. Format is "asset-counter_asset"
            in uppercase. See the Symbols API for a complete list of cryptocurrencies
            supported. Populated for trade quotes.
          maxLength: 16
          minLength: 1
          type: string
        side:
          description: "The direction for trade quotes: either 'buy' or 'sell'. The\
            \ direction for funding quotes: either 'deposit' or 'withdrawal'. The\
            \ direction for crypto transfer quotes: 'withdrawal'. Book transfers do\
            \ not require a side. They are all 'deposit's. "
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell for trade quotes."
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell for trade\
            \ quotes."
          type: integer
        fees:
          description: The custom fees associated with the quote
          items:
            $ref: '#/components/schemas/PostFee'
          type: array
      type: object
    PostFee:
      properties:
        type:
          description: The fee's type
          enum:
          - spread
          - fixed
          type: string
        spread_fee:
          description: "The percentage amount, in basis points, to apply when charging\
            \ a fee."
          type: integer
        fixed_fee:
          description: "The fixed amount to apply when charging a fee; for trades,\
            \ the fiat asset is used."
          type: integer
      required:
      - type
      type: object
    Quote:
      example:
        symbol: symbol
        side: side
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        network_fee: 7
        issued_at: 2000-01-23T04:56:07.000+00:00
        network_fee_asset: network_fee_asset
        deliver_amount: 5
        product_type: product_type
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        receive_amount: 5
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the quote.
          maxLength: 32
          minLength: 32
          type: string
        product_type:
          description: "The type of product the quote is for; one of trading, funding,\
            \ book_transfer, or crypto_transfer."
          type: string
        bank_guid:
          description: The unique identifier for the bank.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          type: string
        symbol:
          description: Symbol the quote was requested for. Format is "asset-counter_asset"
            in uppercase. Populated for trade quotes.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        side:
          description: "The direction of the quote; one of buy, sell, deposit, or\
            \ withdrawal."
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell for trade quotes."
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell for trade\
            \ quotes."
          type: integer
        fee:
          description: The fee associated with the trade. Denominated in "counter_asset"
            base units for trade quotes.
          type: integer
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        issued_at:
          description: ISO8601 datetime the quote was created at.
          format: date-time
          type: string
        expires_at:
          description: ISO8601 datetime the quote is expiring at. Populated for trading
            quotes.
          format: date-time
          nullable: true
          type: string
        asset:
          description: The asset code the quote was requested for. Populated for book
            transfer and funding quotes.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_fee:
          description: The network fee in base units of network_fee_asset. Only present
            on `crypto_transfer` quotes.
          nullable: true
          type: integer
        network_fee_asset:
          description: The asset code of the network fee.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
      type: object
    QuoteType:
      enum:
      - trading
      - funding
      - book_transfer
      - crypto_transfer
      type: string
    QuoteSide:
      enum:
      - buy
      - sell
      - deposit
      - withdrawal
      type: string
    QuoteList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          side: side
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          network_fee: 7
          issued_at: 2000-01-23T04:56:07.000+00:00
          network_fee_asset: network_fee_asset
          deliver_amount: 5
          product_type: product_type
          expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          receive_amount: 5
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - symbol: symbol
          side: side
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          network_fee: 7
          issued_at: 2000-01-23T04:56:07.000+00:00
          network_fee_asset: network_fee_asset
          deliver_amount: 5
          product_type: product_type
          expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          receive_amount: 5
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Quote'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Symbols:
      description: The list of symbols supported for trading.
      items:
        type: string
      type: array
    Workflow:
      example:
        failure_code: failure_code
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        state: state
        type: type
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the workflow.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The associated customer's identifier.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The type of workflow; one of plaid.
          type: string
        state:
          description: "The state of the workflow; one of storing, completed, or failed."
          type: string
        failure_code:
          description: The failure code for failed workflows.
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
      type: object
    WorkflowType:
      enum:
      - plaid
      type: string
    WorkflowState:
      enum:
      - storing
      - completed
      - failed
      type: string
    WorkflowWithDetails:
      allOf:
      - $ref: '#/components/schemas/Workflow'
      - $ref: '#/components/schemas/WorkflowWithDetails_allOf'
    Transfer:
      example:
        transfer_details: "{}"
        quote_guid: quote_guid
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        source_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        payment_rail: payment_rail
        network_fee_asset: network_fee_asset
        network_fee_liability_amount_asset: network_fee_liability_amount_asset
        updated_at: 2000-01-23T04:56:07.000+00:00
        txn_hash: txn_hash
        state: state
        bank_guid: bank_guid
        destination_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        side: side
        failure_code: failure_code
        amount: 5
        network_fee_liability_amount: 3
        network_fee: 9
        reference_transfer_guid: reference_transfer_guid
        labels:
        - labels
        - labels
        estimated_amount: 5
        guid: guid
        external_bank_account_guid: external_bank_account_guid
        transfer_type: transfer_type
        asset: asset
        estimated_network_fee: 7
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer.
          maxLength: 32
          minLength: 32
          type: string
        transfer_type:
          description: "The type of transfer; one of funding, book, crypto, instant_funding,\
            \ funding_return, or crypto_return."
          type: string
        bank_guid:
          description: The associated bank's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The associated customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        external_bank_account_guid:
          description: The associated external bank account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        side:
          description: The direction of the quote; one of deposit or withdrawal.
          type: string
        state:
          description: "The state of the transfer; one of storing, pending, reviewing,\
            \ completed, or failed."
          type: string
        failure_code:
          description: The failure code for failed transfers.
          nullable: true
          type: string
        amount:
          description: The actual amount in base units of the asset.
          nullable: true
          type: integer
        estimated_amount:
          description: The estimated amount in base units of the asset.
          type: integer
        fee:
          description: The fee associated with the transfer.
          type: integer
        estimated_network_fee:
          description: The estimated network fee in base units of network_fee_asset.
            Only present on `crypto` transfers.
          nullable: true
          type: integer
        network_fee:
          description: The actual network fee in base units of network_fee_asset.
            Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: integer
        network_fee_asset:
          description: The asset code of the network fee. Only present on `crypto`
            transfers that have successfully completed.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_fee_liability_amount:
          description: The equivalent fiat network fee in base units of network_fee_liability_amount_asset.
            Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: integer
        network_fee_liability_amount_asset:
          description: The fiat asset the network_fee_liability_amount is denominated
            in. Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: string
        txn_hash:
          description: The hash of the blockchain transaction
          nullable: true
          type: string
        reference_transfer_guid:
          description: The guid of the related transfer. Only present on `funding_return`
            transfers.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        source_account:
          $ref: '#/components/schemas/Transfer_source_account'
        destination_account:
          $ref: '#/components/schemas/Transfer_destination_account'
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        transfer_details:
          description: The raw details on the transfer from the bank.
          nullable: true
          type: object
        payment_rail:
          description: "The rail the payment was done on. One of: ach, eft, wire,\
            \ rtp"
          nullable: true
          type: string
        labels:
          description: The labels associated with the transfer.
          items:
            type: string
          nullable: true
          type: array
      type: object
    TransferType:
      enum:
      - funding
      - book
      - crypto
      - instant_funding
      - funding_return
      - crypto_return
      type: string
    TransferSide:
      enum:
      - deposit
      - withdrawal
      type: string
    TransferState:
      enum:
      - storing
      - pending
      - reviewing
      - completed
      - failed
      type: string
    TransferAccountType:
      enum:
      - trading
      - fiat
      - external_bank_account
      - external_wallet
      - one_time_address
      type: string
    Trade:
      example:
        symbol: symbol
        side: side
        failure_code: failure_code
        quote_guid: quote_guid
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        deliver_amount: 5
        labels:
        - labels
        - labels
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        trade_type: trade_type
        receive_amount: 5
        state: state
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the trade.
          maxLength: 32
          minLength: 32
          type: string
        trade_type:
          description: The type of trade; one of platform or liquidation.
          type: string
        customer_guid:
          description: The associated customer's identifier.
          nullable: true
          type: string
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        symbol:
          description: "The trade symbol the pricing is related to. Format is asset-counter_asset,\
            \ e.g., BTC-USD."
          type: string
        side:
          description: The direction of the trade; one of buy or sell.
          type: string
        state:
          description: "The state of the trade; one of storing, pending, cancelled,\
            \ completed, settling, or failed."
          type: string
        failure_code:
          description: The failure code for failed trades.
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell."
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell."
          type: integer
        fee:
          description: The fee associated with the trade. Denominated in "counter_asset"
            base units
          type: integer
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        labels:
          description: The labels associated with the trade.
          items:
            type: string
          nullable: true
          type: array
      type: object
    TradeType:
      enum:
      - platform
      - liquidation
      type: string
    TradeSide:
      enum:
      - buy
      - sell
      type: string
    TradeState:
      enum:
      - storing
      - pending
      - cancelled
      - completed
      - settling
      - failed
      type: string
    ExternalWalletList:
      example:
        per_page: 0
        total: 0
        objects:
        - environment: environment
          failure_code: failure_code
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          tag: tag
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - environment: environment
          failure_code: failure_code
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          tag: tag
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of external wallet entities
          items:
            $ref: '#/components/schemas/ExternalWallet'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ExternalBankAccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - failure_code: failure_code
          balance_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          account_kind: account_kind
          plaid_account_mask: plaid_account_mask
          plaid_account_name: plaid_account_name
          pii:
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
          environment: environment
          balances:
            current: 0
            available: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          plaid_institution_id: plaid_institution_id
          name: name
          guid: guid
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - failure_code: failure_code
          balance_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          account_kind: account_kind
          plaid_account_mask: plaid_account_mask
          plaid_account_name: plaid_account_name
          pii:
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
          environment: environment
          balances:
            current: 0
            available: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          plaid_institution_id: plaid_institution_id
          name: name
          guid: guid
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of external bank account entities
          items:
            $ref: '#/components/schemas/ExternalBankAccount'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    TransferList:
      example:
        per_page: 0
        total: 0
        objects:
        - transfer_details: "{}"
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          payment_rail: payment_rail
          network_fee_asset: network_fee_asset
          network_fee_liability_amount_asset: network_fee_liability_amount_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          txn_hash: txn_hash
          state: state
          bank_guid: bank_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          side: side
          failure_code: failure_code
          amount: 5
          network_fee_liability_amount: 3
          network_fee: 9
          reference_transfer_guid: reference_transfer_guid
          labels:
          - labels
          - labels
          estimated_amount: 5
          guid: guid
          external_bank_account_guid: external_bank_account_guid
          transfer_type: transfer_type
          asset: asset
          estimated_network_fee: 7
          customer_guid: customer_guid
        - transfer_details: "{}"
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          payment_rail: payment_rail
          network_fee_asset: network_fee_asset
          network_fee_liability_amount_asset: network_fee_liability_amount_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          txn_hash: txn_hash
          state: state
          bank_guid: bank_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          side: side
          failure_code: failure_code
          amount: 5
          network_fee_liability_amount: 3
          network_fee: 9
          reference_transfer_guid: reference_transfer_guid
          labels:
          - labels
          - labels
          estimated_amount: 5
          guid: guid
          external_bank_account_guid: external_bank_account_guid
          transfer_type: transfer_type
          asset: asset
          estimated_network_fee: 7
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of trade entities
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    TradeList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          side: side
          failure_code: failure_code
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deliver_amount: 5
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          trade_type: trade_type
          receive_amount: 5
          state: state
          customer_guid: customer_guid
        - symbol: symbol
          side: side
          failure_code: failure_code
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deliver_amount: 5
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          trade_type: trade_type
          receive_amount: 5
          state: state
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of trade entities
          items:
            $ref: '#/components/schemas/Trade'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    WorkflowsList:
      example:
        per_page: 0
        total: 0
        objects:
        - failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          type: type
          customer_guid: customer_guid
        - failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          type: type
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of workflow entities
          items:
            $ref: '#/components/schemas/Workflow'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Account:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        platform_available: 5
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        platform_balance: 5
        state: state
        type: type
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
        labels:
        - labels
        - labels
      properties:
        type:
          description: "The account type; one of trading, fee, fiat, gas, or reserve."
          type: string
        guid:
          description: Auto-generated unique identifier for the account.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        bank_guid:
          description: The bank identifier associated with the account.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier associated with the account.
          maxLength: 32
          minLength: 32
          type: string
        platform_balance:
          description: "The amount of funds that are in the account, in base units\
            \ of the asset."
          type: integer
        platform_available:
          description: "The amount of funds that are in the account, in base units\
            \ of the asset, that are available for use on the platform."
          type: integer
        state:
          description: The state of the account; one of storing or created.
          type: string
        labels:
          description: The labels associated with the account.
          items:
            type: string
          nullable: true
          type: array
      type: object
    AccountType:
      enum:
      - trading
      - fee
      - fiat
      - gas
      - reserve
      type: string
    AccountState:
      enum:
      - storing
      - created
      type: string
    AccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          platform_available: 5
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          platform_balance: 5
          state: state
          type: type
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        - updated_at: 2000-01-23T04:56:07.000+00:00
          platform_available: 5
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          platform_balance: 5
          state: state
          type: type
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of account entities
          items:
            $ref: '#/components/schemas/Account'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ListRequestCursor:
      description: The cursor used to retrieve the page.
      nullable: true
      type: string
    ListRequestPage:
      description: The page index to retrieve.
      minimum: 0
      type: integer
    ListRequestPerPage:
      description: The number of entities per page to return.
      maximum: 100
      minimum: 1
      type: integer
    ListRequestOwner:
      description: The owner of the entity; one of bank or customer.
      type: string
    ExternalBankAccount:
      example:
        failure_code: failure_code
        balance_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        account_kind: account_kind
        plaid_account_mask: plaid_account_mask
        plaid_account_name: plaid_account_name
        pii:
        - email_addresses:
          - email_addresses
          - email_addresses
          phone_numbers:
          - phone_numbers
          - phone_numbers
          addresses:
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          names:
          - names
          - names
        - email_addresses:
          - email_addresses
          - email_addresses
          phone_numbers:
          - phone_numbers
          - phone_numbers
          addresses:
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          names:
          - names
          - names
        environment: environment
        balances:
          current: 0
          available: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        plaid_institution_id: plaid_institution_id
        name: name
        guid: guid
        state: state
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the account.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        account_kind:
          description: "The type of account; one of plaid, plaid_processor_token,\
            \ or raw_routing_details."
          type: string
        environment:
          description: The environment that the external bank account is operating
            in; one of sandbox or production.
          type: string
        bank_guid:
          description: The bank identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        plaid_institution_id:
          description: The Plaid institution ID for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_mask:
          description: The account number mask for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_name:
          description: The name for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        state:
          description: "The state of the external bank account; one of storing, completed,\
            \ failed, refresh_required, unverified, deleting, or deleted."
          type: string
        failure_code:
          description: The failure code for failed transfers.
          nullable: true
          type: string
        balance_updated_at:
          description: The timestamp that the balance information was last updated
            at.
          format: date-time
          nullable: true
          type: string
        balances:
          $ref: '#/components/schemas/ExternalBankAccount_balances'
        pii:
          description: The account holder information.
          items:
            $ref: '#/components/schemas/ExternalBankAccount_pii_inner'
          nullable: true
          type: array
      type: object
    ExternalBankAccountKind:
      enum:
      - modern_treasury_external_account
      - plaid
      - plaid_processor_token
      - raw_routing_details
      type: string
    ExternalBankAccountState:
      enum:
      - storing
      - completed
      - failed
      - refresh_required
      - unverified
      - deleting
      - deleted
      type: string
    ExternalWallet:
      example:
        environment: environment
        failure_code: failure_code
        address: address
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        tag: tag
        state: state
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the wallet.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The name of the wallet.
          maxLength: 128
          minLength: 1
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        environment:
          description: The environment that the wallet is configured for; one of sandbox
            or production.
          type: string
        bank_guid:
          description: The bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          type: string
        address:
          description: The blockchain wallet address for the wallet.
          maxLength: 256
          type: string
        tag:
          description: The blockchain tag to use when transferring crypto to the wallet.
          maxLength: 256
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The state of the external wallet; one of storing, pending,\
            \ failed, completed, deleting, or deleted."
          type: string
        failure_code:
          description: The failure code of an external wallet (if any)
          nullable: true
          type: string
      type: object
    ExternalWalletEnvironment:
      enum:
      - sandbox
      - production
      type: string
    ExternalWalletState:
      enum:
      - storing
      - pending
      - failed
      - completed
      - deleting
      - deleted
      type: string
    PostBank:
      properties:
        name:
          description: The bank's name.
          maxLength: 128
          minLength: 1
          type: string
        type:
          description: "The bank's type. At present, only **sandbox** is supported."
          enum:
          - sandbox
          type: string
        supported_trading_symbols:
          description: The bank's list of supported trading symbols.
          items:
            type: string
          type: array
        features:
          description: The bank's enabled features.
          items:
            enum:
            - attestation_identity_records
            - kyc_identity_verifications
            - business_customers
            - individual_customers
            - routable_accounts_bank
            - routable_accounts_customer
            type: string
          type: array
        supported_fiat_account_assets:
          description: The bank's list of supported fiat assets.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        supported_country_codes:
          description: The bank's list of supported country codes.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
      required:
      - features
      - name
      - supported_fiat_account_assets
      - supported_trading_symbols
      - type
      type: object
    PatchBank:
      properties:
        name:
          description: The bank's name.
          maxLength: 128
          minLength: 1
          type: string
        supported_trading_symbols:
          description: The bank's list of supported trading symbols.
          items:
            type: string
          type: array
      type: object
    PostCustomer:
      properties:
        type:
          description: The customer's type.
          enum:
          - business
          - individual
          type: string
        name:
          $ref: '#/components/schemas/PostCustomer_name'
        address:
          $ref: '#/components/schemas/PostCustomer_address'
        date_of_birth:
          description: The customer's date of birth.
          format: date
          nullable: true
          type: string
        phone_number:
          description: The customer's phone number.
          nullable: true
          type: string
        email_address:
          description: The customer's email address.
          nullable: true
          type: string
        identification_numbers:
          description: The customer's identification numbers.
          items:
            $ref: '#/components/schemas/PostIdentificationNumber'
          nullable: true
          type: array
        labels:
          description: The labels associated with the customer.
          items:
            type: string
          nullable: true
          type: array
      required:
      - type
      type: object
    PatchCustomer:
      properties:
        state:
          description: The customer's state.
          enum:
          - unverified
          type: string
      type: object
    PostIdentityVerification:
      properties:
        type:
          description: The type of identity verification.
          enum:
          - kyc
          - bank_account
          type: string
        method:
          description: The identity verification method.
          enum:
          - business_registration
          - id_and_selfie
          - tax_id_and_selfie
          - attested
          - plaid_identity_match
          - document_submission
          type: string
        customer_guid:
          description: The customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        country_code:
          description: "The ISO 3166 country 2-Alpha country the customer is being\
            \ verified in; required when method is set to 'id_and_selfie'. If not\
            \ present, will default to the Bank's configured country code."
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
        name:
          $ref: '#/components/schemas/PostIdentityVerification_name'
        address:
          $ref: '#/components/schemas/PostIdentityVerification_address'
        date_of_birth:
          description: The customer's date of birth; required when method is set to
            'attested'.
          format: date
          nullable: true
          type: string
        phone_number:
          description: The customer's phone number.
          nullable: true
          type: string
        email_address:
          description: The customer's email address.
          nullable: true
          type: string
        identification_numbers:
          description: The customer's identification numbers; required when method
            is set to 'attested'.
          items:
            $ref: '#/components/schemas/PostIdentificationNumber'
          nullable: true
          type: array
        external_bank_account_guid:
          description: The external bank account's identifier. Required for 'bank_account'
            type.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        expected_behaviours:
          description: The optional expected behaviour to simulate.
          items:
            enum:
            - passed_immediately
            - failed_immediately
            - tax_id_not_checked
            type: string
          type: array
      required:
      - method
      - type
      type: object
    PostIdentificationNumber:
      properties:
        type:
          description: The source of the identification number.
          enum:
          - drivers_license
          - passport
          - passport_card
          - residence_card
          - social_security_number
          - tax_identification_number
          - identification_card
          type: string
        issuing_country_code:
          description: The ISO 3166 country 2-Alpha country code of the identification
            number issuer.
          type: string
        identification_number:
          description: The identification number.
          type: string
      required:
      - identification_number
      - issuing_country_code
      - type
      type: object
    PostDepositAddress:
      properties:
        account_guid:
          description: The trading account guid.
          maxLength: 32
          minLength: 32
          type: string
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      required:
      - account_guid
      type: object
    PostAccount:
      properties:
        type:
          description: The account type.
          enum:
          - trading
          - fiat
          type: string
        customer_guid:
          description: The customer identifier associated with the account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        labels:
          description: The labels associated with the account.
          items:
            type: string
          nullable: true
          type: array
      required:
      - asset
      - name
      - type
      type: object
    PostWorkflow:
      properties:
        type:
          description: The workflow type.
          enum:
          - plaid
          type: string
        kind:
          description: The Plaid workflow kind.
          enum:
          - link_token_create
          - link_token_update
          type: string
        customer_guid:
          description: The customer identifier associated with the workflow.
          maxLength: 32
          minLength: 32
          type: string
        external_bank_account_guid:
          description: The external bank account identifier associated with the workflow.
          maxLength: 32
          minLength: 32
          type: string
        language:
          description: The language to initialize Plaid link.
          enum:
          - en
          - fr
          - es
          - nl
          - de
          type: string
        link_customization_name:
          description: The customization name for Plaid link. Currently only supports
            the value "default".
          maxLength: 128
          minLength: 1
          type: string
        redirect_uri:
          description: The redirect URI for Plaid link.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        android_package_name:
          description: The Android package name for Plaid link.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
      required:
      - type
      type: object
    PostTransfer:
      properties:
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        transfer_type:
          description: The type of transfer.
          enum:
          - funding
          - book
          - crypto
          - instant_funding
          type: string
        source_account_guid:
          description: The source account's identifier. Required for book transfers.
          maxLength: 32
          minLength: 32
          type: string
        destination_account_guid:
          description: The destination account's identifier. Required for book transfers.
          maxLength: 32
          minLength: 32
          type: string
        external_wallet_guid:
          description: The customer's external wallet's identifier.
          maxLength: 32
          minLength: 32
          type: string
        external_bank_account_guid:
          description: The customer's 'plaid' or 'plaid_processor_token' external
            bank account's identifier.
          maxLength: 32
          minLength: 32
          type: string
        payment_rail:
          description: "The desired payment rail to initiate the transfer for. Valid\
            \ values are: ach, eft, wire. Valid for funding transfers only."
          type: string
        labels:
          description: The labels associated with the transfer.
          items:
            type: string
          nullable: true
          type: array
      required:
      - quote_guid
      - transfer_type
      type: object
    PostTrade:
      properties:
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        expected_error:
          description: The optional expected error to simulate trade failure.
          enum:
          - invalid_quote_guid
          - expired_quote
          - non_sufficient_funds
          type: string
        labels:
          description: The labels associated with the trade.
          items:
            type: string
          nullable: true
          type: array
      required:
      - quote_guid
      type: object
    PatchExternalBankAccount:
      properties:
        state:
          description: The state of the external bank account.
          enum:
          - completed
          - refresh_required
          type: string
      required:
      - state
      type: object
    PostExternalBankAccount:
      properties:
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        account_kind:
          description: The account type
          enum:
          - plaid
          - plaid_processor_token
          - raw_routing_details
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code. If not set will try and default to the Bank's
            configured fiat asset.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        plaid_public_token:
          description: The public token for the account. Required for 'plaid' accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_id:
          description: The account identifier in plaid. Required for 'plaid' accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_processor_token:
          description: The Plaid processor token used to access the account. Required
            for 'plaid_processor_token' accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_institution_id:
          description: Plaid's institution ID for the account's institution. Required
            for 'plaid_processor_token' accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_mask:
          description: The account mask for the account. Required for 'plaid_processor_token'
            accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_name:
          description: The name of the account. Required for 'plaid_processor_token'
            accounts.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        counterparty_bank_account:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_bank_account'
        counterparty_name:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_name'
        counterparty_address:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_address'
        counterparty_email_address:
          description: The counterparty's email address on their checking account.
          nullable: true
          type: string
      required:
      - account_kind
      - asset
      - name
      type: object
    PostExternalWallet:
      properties:
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        address:
          description: The blockchain wallet address for the wallet.
          maxLength: 256
          type: string
        tag:
          description: The blockchain tag to use when transferring crypto to the wallet.
          maxLength: 256
          nullable: true
          type: string
      required:
      - address
      - asset
      - name
      type: object
    ErrorResponse:
      properties:
        status:
          description: Status code for Http Request
          type: integer
        error_message:
          description: Error message
          type: string
        message_code:
          description: Message code for Error
          type: string
      required:
      - error_message
      - message_code
      - status
      type: object
    Customer_name:
      description: The customer's name. Only available for GET operations when 'include_pii'
        is set.
      example:
        middle: middle
        last: last
        first: first
        full: full
      nullable: true
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
        full:
          description: The customer's full name.
          nullable: true
          type: string
      type: object
    Customer_address:
      description: The customer's address. Only available for GET operations when
        'include_pii' is set.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          nullable: true
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          nullable: true
          type: string
      type: object
    Customer_aliases_inner:
      example:
        middle: middle
        last: last
        first: first
        full: full
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
        full:
          description: The customer's full name.
          nullable: true
          type: string
      type: object
    IdentityVerificationWithDetails_allOf:
      properties:
        persona_inquiry_id:
          description: The Persona identifier of the backing inquiry.
          nullable: true
          type: string
        persona_state:
          description: "The Persona state of the backing inquiry; one of waiting,\
            \ pending, reviewing, processing, expired, completed, or unknown."
          nullable: true
          type: string
        external_bank_account_guid:
          description: The external bank account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    DepositBankAccount_counterparty_address:
      description: The counterparty's address on the account.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    DepositBankAccount_account_details_inner:
      example:
        account_number: account_number
      properties:
        account_number:
          description: The account number.
          type: string
      required:
      - account_number
      type: object
    DepositBankAccount_routing_details_inner:
      example:
        routing_number_type: routing_number_type
        routing_number: routing_number
      properties:
        routing_number_type:
          description: "The type of routing number; one of CPA, ABA, or SWIFT."
          type: string
        routing_number:
          description: The routing number.
          type: string
      required:
      - routing_number
      - routing_number_type
      type: object
    WorkflowWithDetails_allOf:
      properties:
        plaid_link_token:
          description: The Plaid link token generated by the workflow.
          nullable: true
          type: string
      type: object
    Transfer_source_account:
      description: The source account in the transfer. Can be omitted for crypto deposits.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, or one_time_address."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    Transfer_destination_account:
      description: The destination account in the transfer.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, or one_time_address."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    ExternalBankAccount_balances:
      description: Balance information for the account.
      example:
        current: 0
        available: 0
      nullable: true
      properties:
        available:
          description: The available balance in the account.
          minimum: 0
          nullable: true
          type: integer
        current:
          description: The current balance in the account including pending transactions.
          minimum: 0
          nullable: true
          type: integer
      type: object
    ExternalBankAccount_pii_inner_addresses_inner:
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          type: string
      type: object
    ExternalBankAccount_pii_inner:
      example:
        email_addresses:
        - email_addresses
        - email_addresses
        phone_numbers:
        - phone_numbers
        - phone_numbers
        addresses:
        - subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        - subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        names:
        - names
        - names
      properties:
        names:
          description: Array of names on the account
          items:
            type: string
          nullable: true
          type: array
        addresses:
          description: Array of addresses associated to the account
          items:
            $ref: '#/components/schemas/ExternalBankAccount_pii_inner_addresses_inner'
          nullable: true
          type: array
        email_addresses:
          description: Array of email addresses associated to the account
          items:
            type: string
          nullable: true
          type: array
        phone_numbers:
          description: Array of phone numbers associated to the account
          items:
            type: string
          nullable: true
          type: array
      type: object
    PostCustomer_name:
      nullable: true
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
      type: object
    PostCustomer_address:
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    PostIdentityVerification_name:
      description: The customer's name; required when method is set to 'attested'.
        Either full or first and last are required.
      nullable: true
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
        full:
          description: The customer's full name.
          nullable: true
          type: string
      type: object
    PostIdentityVerification_address:
      description: The customer's address; required when method is set to 'attested'.
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    PostExternalBankAccount_counterparty_bank_account:
      description: The counterparty's checking bank account information.
      nullable: true
      properties:
        routing_number_type:
          description: The type of routing number.
          enum:
          - CPA
          - ABA
          type: string
        routing_number:
          description: The routing number.
          type: string
        account_number:
          description: The account number.
          type: string
      required:
      - account_number
      - routing_number
      - routing_number_type
      type: object
    PostExternalBankAccount_counterparty_name:
      description: The counterparty's name on their checking account.
      nullable: true
      properties:
        first:
          description: The customer's first name. Used for individual accounts.
          type: string
        middle:
          description: The customer's middle name. Used for individual accounts.
          nullable: true
          type: string
        last:
          description: The customer's last name. Used for individual accounts.
          type: string
        full:
          description: The customers's full name on the account. Used for business
            accounts.
          type: string
      type: object
    PostExternalBankAccount_counterparty_address:
      description: The counterparty's address on their checking account.
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The provide/state/region of the address; not used by all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            banks:read: banks read
            banks:write: banks write
            bank_applications:execute: bank_applications execute
            accounts:read: accounts read
            accounts:execute: accounts execute
            customers:read: customers read
            customers:write: customers write
            customers:execute: customers execute
            prices:read: prices read
            quotes:execute: quotes execute
            quotes:read: quotes read
            trades:execute: trades execute
            trades:read: trades read
            transfers:execute: transfers execute
            transfers:read: transfers read
            external_bank_accounts:read: external_bank_accounts read
            external_bank_accounts:write: external_bank_accounts write
            external_bank_accounts:execute: external_bank_accounts execute
            external_wallets:read: external_wallets read
            external_wallets:execute: external_wallets execute
            workflows:read: workflows read
            workflows:execute: workflows execute
            deposit_addresses:read: deposit_addresses read
            deposit_addresses:execute: deposit_addresses execute
            deposit_bank_accounts:read: deposit_bank_accounts read
            deposit_bank_accounts:execute: deposit_bank_accounts execute
            invoices:read: invoices read
            invoices:write: invoices write
            invoices:execute: invoices execute
          tokenUrl: https://id.sandbox.cybrid.app/oauth/token
      type: oauth2
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

