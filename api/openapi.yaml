openapi: 3.0.3
info:
  contact:
    email: support@cybrid.app
    name: Cybrid Support
  description: "# Cybrid API documentation\n\nWelcome to Cybrid, an all-in-one crypto\
    \ platform that enables you to easily **build** and **launch** white-label crypto\
    \ products or services.\n\nIn these documents, you'll find details on how our\
    \ REST API operates and generally how our platform functions.\n\nIf you're looking\
    \ for our UI SDK Widgets for Web or Mobile (iOS/Android), generated API clients,\
    \ or demo applications, head over to our [Github repo](https://github.com/Cybrid-app).\n\
    \n\U0001f4a1 We recommend bookmarking the [Cybrid LinkTree](https://linktr.ee/cybridtechnologies)\
    \ which contains many helpful links to platform resources.\n\n## Getting Started\n\
    \nThis is Cybrid's public interactive API documentation, which allows you to fully\
    \ test our APIs. If you'd like to use a different tool to exercise our APIs, you\
    \ can download the [Open API 3.0 yaml](https://bank.production.cybrid.app/api/schema/v1/swagger.yaml)\
    \ for import.\n\nIf you're new to our APIs and the Cybrid Platform, follow the\
    \ below guides to get set up and familiar with the platform:\n\n1. [Introduction](https://docs.cybrid.xyz/docs/introduction)\n\
    2. [Platform Introduction](https://docs.cybrid.xyz/docs/how-is-cybrid-architected)\n\
    3. [Testing with Hosted Web Demo App](https://docs.cybrid.xyz/docs/testing-with-hosted-web-demo-app)\n\
    \nIn [Getting Started in the Cybrid Sandbox](https://docs.cybrid.xyz/docs/how-do-i-get-started-with-the-sandbox),\
    \ we walk you through how to use the [Cybrid Sandbox](https://id.sandbox.cybrid.app/)\
    \ to create a test bank and generate API keys. In [Getting Ready for Trading](https://kb.cybrid.xyz/getting-ready-for-trading),\
    \ we walk through creating customers, customer identities, accounts, as well as\
    \ executing quotes and trades.\n\n## Working with the Cybrid Platform\n\nThere\
    \ are three primary ways you can interact with the Cybrid platform:\n\n1. Directly\
    \ via our RESTful API (this documentation)\n2. Using our API clients available\
    \ in a variety of languages ([Angular](https://github.com/Cybrid-app/cybrid-api-bank-angular),\
    \ [Java](https://github.com/Cybrid-app/cybrid-api-bank-java), [Kotlin](https://github.com/Cybrid-app/cybrid-api-bank-kotlin),\
    \ [Python](https://github.com/Cybrid-app/cybrid-api-bank-python), [Ruby](https://github.com/Cybrid-app/cybrid-api-bank-ruby),\
    \ [Swift](https://github.com/Cybrid-app/cybrid-api-bank-swift) or [Typescript](https://github.com/Cybrid-app/cybrid-api-bank-typescript))\n\
    3. Integrating a platform specific SDK ([Web](https://github.com/Cybrid-app/cybrid-sdk-web),\
    \ [Android](https://github.com/Cybrid-app/cybrid-sdk-android), [iOS](https://github.com/Cybrid-app/cybrid-sdk-ios))\n\
    \nOur complete set of APIs allows you to manage resources across three distinct\
    \ areas: your `Organization`, your `Banks` and your `Identities`. For most of\
    \ your testing and interaction you'll be using the `Bank` API, which is where\
    \ the majority of APIs reside.\n\n*The complete set of APIs can be found on the\
    \ following pages:*\n\n| API                                                 \
    \             | Description                                                 |\n\
    |------------------------------------------------------------------|-------------------------------------------------------------|\n\
    | [Organization API](https://organization.production.cybrid.app/api/schema/swagger-ui)\
    \   | APIs to manage organizations                                |\n| [Bank API](https://bank.production.cybrid.app/api/schema/swagger-ui)\
    \                   | APIs to manage banks (and all downstream customer activity)\
    \ |\n| [Identities API](https://id.production.cybrid.app/api/schema/swagger-ui)\
    \                       | APIs to manage organization and bank identities    \
    \         |\n\nFor questions please contact [Support](mailto:support@cybrid.xyz)\
    \ at any time for assistance, or contact the [Product Team](mailto:product@cybrid.xyz)\
    \ for product suggestions.\n\n## Authenticating with the API\n\nThe Cybrid Platform\
    \ uses OAuth 2.0 Bearer Tokens to authenticate requests to the platform. Credentials\
    \ to create `Organization` and `Bank` tokens can be generated via the [Cybrid\
    \ Sandbox](https://id.production.cybrid.app). Access tokens can be generated for\
    \ a `Customer` as well via the [Cybrid IdP](https://id.production.cybrid.app)\
    \ as well.\n\nAn `Organization` access token applies broadly to the whole Organization\
    \ and all of its `Banks`, whereas, a `Bank` access token is specific to an individual\
    \ Bank. `Customer` tokens, similarly, are scoped to a specific customer in a bank.\n\
    \nBoth `Organization` and `Bank` tokens can be created using the OAuth Client\
    \ Credential Grant flow. Each Organization and Bank has its own unique `Client\
    \ ID` and `Secret` that allows for machine-to-machine authentication.\n\nA `Bank`\
    \ can then generate `Customer` access tokens via API using our [Identities API](https://id.production.cybrid.app/api/schema/swagger-ui).\n\
    \n<font color=\"orange\">**⚠️ Never share your Client ID or Secret publicly or\
    \ in your source code repository.**</font>\n\nYour `Client ID` and `Secret` can\
    \ be exchanged for a time-limited `Bearer Token` by interacting with the Cybrid\
    \ Identity Provider or through interacting with the **Authorize** button in this\
    \ document.\n\nThe following curl command can be used to quickly generate a `Bearer\
    \ Token` for use in testing the API or demo applications.\n\n```\n# Example request\
    \ when using Bank credentials\ncurl -X POST https://id.production.cybrid.app/oauth/token\
    \ -d '{\n    \"grant_type\": \"client_credentials\",\n    \"client_id\": \"<Your\
    \ Client ID>\",\n    \"client_secret\": \"<Your Secret>\",\n    \"scope\": \"\
    banks:read banks:write bank_applications:execute accounts:read accounts:execute\
    \ counterparties:read counterparties:write counterparties:execute customers:read\
    \ customers:write customers:execute prices:read quotes:execute quotes:read trades:execute\
    \ trades:read transfers:execute transfers:read external_bank_accounts:read external_bank_accounts:write\
    \ external_bank_accounts:execute external_wallets:read external_wallets:execute\
    \ workflows:read workflows:execute deposit_addresses:read deposit_addresses:execute\
    \ deposit_bank_accounts:read deposit_bank_accounts:execute invoices:read invoices:write\
    \ invoices:execute identity_verifications:read identity_verifications:write identity_verifications:execute\
    \ files:read files:execute\"\n  }' -H \"Content-Type: application/json\"\n\n#\
    \ When using Organization credentials set `scope` to 'organizations:read organizations:write\
    \ organization_applications:execute banks:read banks:write banks:execute bank_applications:execute\
    \ users:read users:execute counterparties:read customers:read accounts:read prices:read\
    \ quotes:execute quotes:read trades:execute trades:read transfers:read transfers:execute\
    \ external_bank_accounts:read external_wallets:read workflows:read deposit_addresses:read\
    \ deposit_bank_accounts:read invoices:read subscriptions:read subscriptions:write\
    \ subscriptions:execute subscription_events:read subscription_events:execute identity_verifications:read\
    \ files:read files:execute'\n```\n<font color=\"orange\">**⚠️ Note: The above\
    \ curl will create a bearer token with full scope access. Delete scopes if you'd\
    \ like to restrict access.**</font>\n\n## Authentication Scopes\n\nThe Cybrid\
    \ platform supports the use of scopes to control the level of access a token is\
    \ limited to. Scopes do not grant access to resources; instead, they provide limits,\
    \ in support of the least privilege principal.\n\nThe following scopes are available\
    \ on the platform and can be requested when generating either an Organization,\
    \ Bank or Customer token. Generally speaking, the _Read_ scope is required to\
    \ read and list resources, the _Write_ scope is required to update a resource\
    \ and the _Execute_ scope is required to create a resource.\n\n| Resource    \
    \          | Read scope (Token Type)                                    | Write\
    \ scope (Token Type)                      | Execute scope (Token Type)       \
    \                |\n|-----------------------|------------------------------------------------------------|-----------------------------------------------|--------------------------------------------------|\n\
    | Account               | accounts:read (Organization, Bank, Customer)       \
    \        |                                               | accounts:execute (Bank,\
    \ Customer)                |\n| Bank                  | banks:read (Organization,\
    \ Bank)                            | banks:write (Organization, Bank)        \
    \      | banks:execute (Organization)                     |\n| Customer      \
    \        | customers:read (Organization, Bank, Customer)              | customers:write\
    \ (Bank, Customer)              | customers:execute (Bank)                   \
    \      |\n| Counterparty          | counterparties:read (Organization, Bank, Customer)\
    \         | counterparties:write (Bank, Customer)         | counterparties:execute\
    \ (Bank)                    |\n| Deposit Address       | deposit_addresses:read\
    \ (Organization, Bank, Customer)      | deposit_addresses:write (Bank, Customer)\
    \      | deposit_addresses:execute (Bank, Customer)       |\n| External Bank Account\
    \ | external_bank_accounts:read (Organization, Bank, Customer) | external_bank_accounts:write\
    \ (Bank, Customer) | external_bank_accounts:execute (Bank, Customer)  |\n| External\
    \ Wallet       | external_wallet:read (Organization, Bank, Customer)        |\
    \                                               | external_wallet:execute (Bank,\
    \ Customer)         |\n| Organization          | organizations:read (Organization)\
    \                          | organizations:write (Organization)            | \
    \                                                 |\n| User                  |\
    \ users:read (Organization)                                  |               \
    \                                | users:execute (Organization)              \
    \       |\n| Price                 | prices:read (Bank, Customer)            \
    \                   |                                               |        \
    \                                          |\n| Quote                 | quotes:read\
    \ (Organization, Bank, Customer)                 |                           \
    \                    | quotes:execute (Organization, Bank, Customer)    |\n| Trade\
    \                 | trades:read (Organization, Bank, Customer)               \
    \  |                                               | trades:execute (Organization,\
    \ Bank, Customer)    |\n| Transfer              | transfers:read (Organization,\
    \ Bank, Customer)              |                                             \
    \  | transfers:execute (Organization, Bank, Customer) |\n| Workflow          \
    \    | workflows:read (Organization, Bank, Customer)              |          \
    \                                     | workflows:execute (Bank, Customer)   \
    \            |\n| Invoice               | invoices:read (Organization, Bank, Customer)\
    \               | invoices:write (Bank, Customer)               | invoices:execute\
    \ (Bank, Customer)                |\n\n## Available Endpoints\n\nThe available\
    \ APIs for the [Identity](https://id.production.cybrid.app/api/schema/swagger-ui),\
    \ [Organization](https://organization.production.cybrid.app/api/schema/swagger-ui)\
    \ and [Bank](https://bank.production.cybrid.app/api/schema/swagger-ui) API services\
    \ are listed below:\n\n| API Service  | Model                | API Endpoint Path\
    \              | Description                                                 \
    \                                      |\n|--------------|----------------------|--------------------------------|---------------------------------------------------------------------------------------------------|\n\
    | Identity     | Bank                 | /api/bank_applications         | Create\
    \ and list banks                                                             \
    \                |\n| Identity     | CustomerToken        | /api/customer_tokens\
    \           | Create customer JWT access tokens                              \
    \                                   |\n| Identity     | Organization         |\
    \ /api/organization_applications | Create and list organizations             \
    \                                                        |\n| Identity     | Organization\
    \         | /api/users                     | Create and list organization users\
    \                                                                |\n| Organization\
    \ | Organization         | /api/organizations             | APIs to retrieve and\
    \ update organization name                                                   \
    \  |\n| Bank         | Account              | /api/accounts                  |\
    \ Create and list accounts, which hold a specific asset for a customers      \
    \                       |\n| Bank         | Asset                | /api/assets\
    \                    | Get a list of assets supported by the platform (ex: BTC,\
    \ ETH)                                     |\n| Bank         | Bank          \
    \       | /api/banks                     | Create, update and list banks, the\
    \ parent to customers, accounts, etc                             |\n| Bank   \
    \      | Customer             | /api/customers                 | Create and list\
    \ customers                                                                  \
    \       |\n| Bank         | Counterparty         | /api/counterparties       \
    \     | Create and list counterparties                                       \
    \                             |\n| Bank         | DepositAddress       | /api/deposit_addresses\
    \         | Create, get and list deposit addresses                           \
    \                                 |\n| Bank         | ExternalBankAccount  | /api/external_bank_accounts\
    \    | Create, get and list external bank accounts, which connect customer bank\
    \ accounts to the platform |\n| Bank         | ExternalWallet       | /api/external_wallets\
    \          | Create, get, list and delete external wallets, which connect customer\
    \ wallets to the platform     |\n| Bank         | IdentityVerification | /api/identity_verifications\
    \    | Create and list identity verifications, which are performed on customers\
    \ for KYC                  |\n| Bank         | Invoice              | /api/invoices\
    \                  | Create, get, cancel and list invoices                   \
    \                                          |\n| Bank         | PaymentInstruction\
    \   | /api/payment_instructions      | Create, get and list payment instructions\
    \ for invoices                                            |\n| Bank         |\
    \ Price                | /api/prices                    | Get the current prices\
    \ for assets on the platform                                                 |\n\
    | Bank         | Quote                | /api/quotes                    | Create\
    \ and list quotes, which are required to execute trades                      \
    \                |\n| Bank         | Symbol               | /api/symbols     \
    \              | Get a list of symbols supported for trade (ex: BTC-USD)     \
    \                                      |\n| Bank         | Trade             \
    \   | /api/trades                    | Create and list trades, which buy or sell\
    \ cryptocurrency                                          |\n| Bank         |\
    \ Transfer             | /api/transfers                 | Create, get and list\
    \ transfers (e.g., funding, book)                                            \
    \  |\n| Bank         | Workflow             | /api/workflows                 |\
    \ Create, get and list workflows                                             \
    \                       |\n\n## Understanding Object Models & Endpoints\n\n**Organizations**\n\
    \nAn `Organization` is meant to represent the organization partnering with Cybrid\
    \ to use our platform.\n\nAn `Organization` typically does not directly interact\
    \ with `customers`. Instead, an Organization has one or more `banks`, which encompass\
    \ the financial service offerings of the platform.\n\n**Banks**\n\nA `Bank` is\
    \ owned by an `Organization` and can be thought of as an environment or container\
    \ for `customers` and product offerings. Banks are created in either `Sandbox`\
    \ or `Production` mode, where `Sandbox` is the environment that you would test,\
    \ prototype and build in prior to moving to `Production`.\n\nAn `Organization`\
    \ can have multiple `banks`, in either `Sandbox` or `Production` environments.\
    \ A `Sandbox Bank` will be backed by stubbed data and process flows. For instance,\
    \ funding source transfer processes as well as trades will be simulated rather\
    \ than performed, however asset prices are representative of real-world values.\
    \ You have an unlimited amount of simulated fiat currency for testing purposes.\n\
    \n**Customers**\n\n`Customers` represent your banking users on the platform. At\
    \ present, we offer support for `Individuals` as Customers.\n\n`Customers` must\
    \ be verified (i.e., KYC'd) in our system before they can play any part on the\
    \ platform, which means they must have an associated and a passing `Identity Verification`.\
    \ See the Identity Verifications section for more details on how a customer can\
    \ be verified.\n\n`Customers` must also have an `Account` to be able to transact,\
    \ in the desired asset class. See the Accounts APIs for more details on setting\
    \ up accounts for the customer.\n"
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.cybrid.xyz/tos
  title: Cybrid Bank API
  version: v0.123.289
servers:
- description: Sandbox environment is simulated money movement
  url: https://bank.sandbox.cybrid.app
- description: Production environment is real money movement
  url: https://bank.production.cybrid.app
paths:
  /api/assets:
    get:
      description: Retrieves a listing of assets.
      operationId: listAssets
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated codes to list assets for.
        explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetList'
          description: get list of assets
      summary: Get assets list
      tags:
      - Assets
      x-accepts: application/json
  /api/banks:
    get:
      description: "Retrieves a listing of bank.\n\nRequired scope: **banks:read**"
      operationId: listBanks
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated types to list banks for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list banks for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankList'
          description: get list of banks
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - invalid subject, Authentication failed"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - banks:read
      summary: Get banks list
      tags:
      - Banks
      x-accepts: application/json
    post:
      description: "Creates a bank.\n\n## Bank Type\n\nBank's can be created in either\
        \ `sandbox` or `production` mode. Sandbox Banks will not transact in real\
        \ fiat dollars or cryptocurrencies.\n\nVia the API, only `sandbox` banks can\
        \ be created. In order to enable a `production` bank please contact [Support](mailto:support@cybrid.app).\n\
        \n\n\nRequired scope: **banks:execute**"
      operationId: createBank
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBank'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: Bank created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              examples:
                unsupported_value_1:
                  value:
                    status: 422
                    error_message: Fiat asset not supported
                    message_code: unsupported_value
                unsupported_value_2:
                  value:
                    status: 422
                    error_message: Trading symbol not supported
                    message_code: unsupported_value
                unsupported_value_3:
                  value:
                    status: 422
                    error_message: Trading symbols contain an asset that is not configured
                      as supported
                    message_code: unsupported_value
                unsupported_value_4:
                  value:
                    status: 422
                    error_message: Payout symbols contain an asset that is not configured
                      as supported
                    message_code: unsupported_value
                unsupported_value_5:
                  value:
                    status: 422
                    error_message: Country code not supported
                    message_code: unsupported_value
                unsupported_value_6:
                  value:
                    status: 422
                    error_message: Bank must be configured with kyc_identity_verifications
                    message_code: unsupported_value
                unsupported_value_7:
                  value:
                    status: 422
                    error_message: Bank must be configured with individual_customers
                      or business_customers
                    message_code: unsupported_value
                unsupported_value_8:
                  value:
                    status: 422
                    error_message: CORS allowed origins must all be valid HTTPS URIs.
                    message_code: unsupported_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Content
      security:
      - BearerAuth: []
        oauth2:
        - banks:execute
      summary: Create Bank
      tags:
      - Banks
      x-content-type: application/json
      x-accepts: application/json
  /api/banks/{bank_guid}:
    get:
      description: "Retrieves a bank.\n\nRequired scope: **banks:read**"
      operationId: getBank
      parameters:
      - description: Identifier for the bank.
        explode: false
        in: path
        name: bank_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: bank found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: invalid bank_guid value
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: bank not found
      security:
      - BearerAuth: []
        oauth2:
        - banks:read
      summary: Get Bank
      tags:
      - Banks
      x-accepts: application/json
    patch:
      description: "Update a bank.\n\nRequired scope: **banks:write**"
      operationId: updateBank
      parameters:
      - description: Identifier for the bank.
        explode: false
        in: path
        name: bank_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchBank'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
          description: bank found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: banks:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              examples:
                unsupported_value_1:
                  value:
                    status: 422
                    error_message: Trading symbol not supported
                    message_code: unsupported_value
                unsupported_value_2:
                  value:
                    status: 422
                    error_message: Payout symbol not supported
                    message_code: unsupported_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Content
      security:
      - BearerAuth: []
        oauth2:
        - banks:write
      summary: Patch Bank
      tags:
      - Banks
      x-content-type: application/json
      x-accepts: application/json
  /api/counterparties:
    get:
      description: "Retrieves a listing of counterparties.\n\nRequired scope: **counterparties:read**"
      operationId: listCounterparties
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated types to list counterparties for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list counterparties for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list counterparties for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated counterparty_guids to list counterparties for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list counterparties for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterpartyList'
          description: get list of counterparties
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization or\
                      \ bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: counterparties:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - BearerAuth: []
        oauth2:
        - counterparties:read
      summary: Get counterparties list
      tags:
      - Counterparties
      x-accepts: application/json
    post:
      description: "Creates a counterparty.\n\n## Counterparty Type\n\nCounterparty\
        \ resources are an abstraction for real world individuals and businesses that\
        \ are not directly on the Cybrid Platform.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the counterparty\
        \ details in our private store |\n| unverified | The Platform has not yet\
        \ verified the counterparty's identity |\n| verified | The Platform has verified\
        \ the counterparty's identity |\n| rejected | The Platform was not able to\
        \ successfully verify the counterparty's identity |\n\n\n\nRequired scope:\
        \ **counterparties:execute**"
      operationId: createCounterparty
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCounterparty'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
          description: counterparty created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: counterparties:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              examples:
                unknown_bank:
                  value:
                    status: 422
                    error_message: Bank not found
                    message_code: unknown_bank
                no_customer:
                  value:
                    status: 422
                    error_message: Customer not found
                    message_code: no_customer
                invalid_value:
                  value:
                    status: 422
                    error_message: Country code not supported
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Content
      security:
      - BearerAuth: []
        oauth2:
        - counterparties:execute
      summary: Create Counterparty
      tags:
      - Counterparties
      x-content-type: application/json
      x-accepts: application/json
  /api/counterparties/{counterparty_guid}:
    get:
      description: "Retrieves a counterparty.\n\nRequired scope: **counterparties:read**"
      operationId: getCounterparty
      parameters:
      - description: Identifier for the counterparty.
        explode: false
        in: path
        name: counterparty_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Include PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Counterparty'
          description: counterparty found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization or\
                      \ bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: counterparties:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
      security:
      - BearerAuth: []
        oauth2:
        - counterparties:read
      summary: Get Counterparty
      tags:
      - Counterparties
      x-accepts: application/json
  /api/customers:
    get:
      description: "Retrieves a listing of customers.\n\nRequired scope: **customers:read**"
      operationId: listCustomers
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated types to list customers for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list customers for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list customers for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list customers for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerList'
          description: get list of customers
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject,"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: Get customers list
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: "Creates a customer.\n\n## Customer Type\n\nCustomer resources\
        \ are an abstraction for real world individuals and businesses on the Cybrid\
        \ Platform and are used throughout the platform to perform high level operations,\
        \ e.g., create a quote, execute a trade, etc..\n\nCustomers can have additional\
        \ resources attached to them, e.g., identity verifications, accounts, etc.\n\
        \n## State\n\n| State | Description |\n|-------|-------------|\n| storing\
        \ | The Platform is storing the customer details in our private store |\n\
        | unverified | The Platform has not yet verified the customer's identity |\n\
        | verified | The Platform has verified the customer's identity |\n| rejected\
        \ | The Platform was not able to successfully verify the customer's identity\
        \ |\n| frozen | The customer has been frozen on the Platform |\n\n\n\nRequired\
        \ scope: **customers:execute**"
      operationId: createCustomer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCustomer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "422":
          content:
            application/json:
              examples:
                unknown_bank:
                  value:
                    status: 422
                    error_message: Bank not found
                    message_code: unknown_bank
                unsupported_value:
                  value:
                    status: 422
                    error_message: Bank must be configured to support customer type
                    message_code: unsupported_value
                missing_parameter_1:
                  value:
                    status: 422
                    error_message: Customer name required
                    message_code: missing_parameter
                missing_parameter_2:
                  value:
                    status: 422
                    error_message: Customer address required
                    message_code: missing_parameter
                missing_parameter_3:
                  value:
                    status: 422
                    error_message: Customer date of birth required
                    message_code: missing_parameter
                missing_parameter_4:
                  value:
                    status: 422
                    error_message: Customer email address required
                    message_code: missing_parameter
                missing_parameter_5:
                  value:
                    status: 422
                    error_message: Customer identification numbers required
                    message_code: missing_parameter
                invalid_value_1:
                  value:
                    status: 422
                    error_message: Identification number duplicate type supplied
                    message_code: invalid_value
                invalid_value_2:
                  value:
                    status: 422
                    error_message: Identification number missing
                    message_code: invalid_value
                invalid_value_3:
                  value:
                    status: 422
                    error_message: Identification number not supported
                    message_code: invalid_value
                invalid_value_4:
                  value:
                    status: 422
                    error_message: Address country code not supported
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Content
      security:
      - BearerAuth: []
        oauth2:
        - customers:execute
      summary: Create Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /api/customers/{customer_guid}:
    get:
      description: "Retrieves a customer.\n\nRequired scope: **customers:read**"
      operationId: getCustomer
      parameters:
      - description: Identifier for the customer.
        explode: false
        in: path
        name: customer_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Include PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, invalid subject"
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: customer not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: customer not found
      security:
      - BearerAuth: []
        oauth2:
        - customers:read
      summary: Get Customer
      tags:
      - Customers
      x-accepts: application/json
    patch:
      description: "Update a customer.\n\nRequired scope: **customers:write**"
      operationId: updateCustomer
      parameters:
      - description: Identifier for the customer.
        explode: false
        in: path
        name: customer_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchCustomer'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: customer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization or\
                      \ bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: customers:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "400":
          content:
            application/json:
              examples:
                invalid_parameter:
                  value:
                    status: 400
                    error_message: Invalid state
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
      security:
      - BearerAuth: []
        oauth2:
        - customers:write
      summary: Patch Customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_addresses:
    get:
      description: "Retrieves a list of deposit addresses.\n\nRequired scope: **deposit_addresses:read**"
      operationId: listDepositAddresses
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list deposit addresses for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list deposit addresses for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list deposit addresses for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list deposit addresses for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddressList'
          description: get list of deposit addresses
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:read
      summary: List Deposit Addresses
      tags:
      - DepositAddresses
      x-accepts: application/json
    post:
      description: "Creates a deposit address.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the deposit\
        \ address details in our private store |\n| created | The Platform has created\
        \ the deposit address |\n\n\n\nRequired scope: **deposit_addresses:execute**"
      operationId: createDepositAddress
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDepositAddress'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
          description: Deposit Address created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:execute
      summary: Create Deposit Address
      tags:
      - DepositAddresses
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_addresses/{deposit_address_guid}:
    get:
      description: "Retrieves a deposit address.\n\nRequired scope: **deposit_addresses:read**"
      operationId: getDepositAddress
      parameters:
      - description: Identifier for the deposit address.
        explode: false
        in: path
        name: deposit_address_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositAddress'
          description: deposit address found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_addresses:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: deposit_address not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: deposit_address not found
      security:
      - BearerAuth: []
        oauth2:
        - deposit_addresses:read
      summary: Get Deposit Address
      tags:
      - DepositAddresses
      x-accepts: application/json
  /api/deposit_bank_accounts:
    get:
      description: "Retrieves a list of deposit bank accounts.\n\nRequired scope:\
        \ **deposit_bank_accounts:read**"
      operationId: listDepositBankAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list deposit bank accounts for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list deposit bank accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list deposit bank accounts
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list deposit bank accounts for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated unique memo ids to list deposit bank accounts
          for.
        explode: true
        in: query
        name: unique_memo_id
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated types to list deposit bank accounts for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated guids for parent accounts to list deposit bank
          accounts for.
        explode: true
        in: query
        name: parent_deposit_bank_account_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccountList'
          description: get list of deposit bank accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:read
      summary: List Deposit Bank Accounts
      tags:
      - DepositBankAccounts
      x-accepts: application/json
    post:
      description: "Creates a deposit bank account.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the deposit\
        \ bank account details in our private store |\n| created | The Platform has\
        \ created the deposit bank account |\n\n\n\nRequired scope: **deposit_bank_accounts:execute**"
      operationId: createDepositBankAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDepositBankAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccount'
          description: Deposit Bank Account created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: UnsupportedCountry\
                      \ - Country not supported"
                    message_code: unsupported_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:execute
      summary: Create Deposit Bank Account
      tags:
      - DepositBankAccounts
      x-content-type: application/json
      x-accepts: application/json
  /api/deposit_bank_accounts/{deposit_bank_account_guid}:
    get:
      description: "Retrieves a deposit bank account.\n\nRequired scope: **deposit_bank_accounts:read**"
      operationId: getDepositBankAccount
      parameters:
      - description: Identifier for the deposit bank account.
        explode: false
        in: path
        name: deposit_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositBankAccount'
          description: deposit bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: deposit_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: deposit_bank_account not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: deposit_bank_account not found
      security:
      - BearerAuth: []
        oauth2:
        - deposit_bank_accounts:read
      summary: Get Deposit Bank Account
      tags:
      - DepositBankAccounts
      x-accepts: application/json
  /api/external_bank_accounts:
    get:
      description: "Retrieves a listing of external bank accounts.\n\nRequired scope:\
        \ **external_bank_accounts:read**"
      operationId: listExternalBankAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated external_bank_account_guids to list external_bank_accounts
          for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list external_bank_accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list external_bank_accounts
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated assets to list external_bank_accounts for.
        explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list external_bank_accounts for. Filtering
          by "completed" and "unverified" states is only supported for individual
          customer accounts.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccountList'
          description: Get list of external_bank_accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:read
      summary: Get external bank accounts list
      tags:
      - External Bank Accounts
      x-accepts: application/json
    post:
      description: "Create an ExternalBankAccount.\n\n## Account creation\n\nAccounts\
        \ can be created for a Bank or a Customer.\n\nTo create accounts for your\
        \ Bank, omit the `customer_guid` parameter in the request body. To create\
        \ accounts for your Customers, include the `customer_guid` parameter in the\
        \ request body.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the external bank account details in our\
        \ private store |\n| completed | The Platform has created the external bank\
        \ account |\n| unverified | The external bank account is created, but it has\
        \ not yet been verified |\n| failed | The Platform was not able to successfully\
        \ create the external bank account |\n| refresh_required | The Platform has\
        \ created the external bank account, but needs to be refreshed |\n| deleting\
        \ | The Platform is deleting the external bank account |\n| deleted | The\
        \ Platform has deleted the external bank account |\n\n## Failure codes\n\n\
        | Code | Description |\n|------|-------------|\n| invalid_routing_number |\
        \ The provided routing number is invalid |\n| duplicate | An account with\
        \ the same details already exists |\n| plaid_processor_token | An account\
        \ could not be created due to an invalid Plaid processor token or an error\
        \ with Plaid |\n| plaid_multiple_accounts | The supplied Plaid token is associated\
        \ with multiple accounts. Must only be a single account. |\n| create_failed\
        \ | The bank account and associated holder could not be created correctly\
        \ |\n| unverified_counterparty | The counterparty account is unverified |\n\
        \n\n\nRequired scope: **external_bank_accounts:execute**"
      operationId: createExternalBankAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExternalBankAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: ExternalBankAccount created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: name, asset, account_kind"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. plaid_account_id must be at the
                      most 128 characters long
                    message_code: invalid_value
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: account_kind\
                      \ supported values: [\"plaid\", \"plaid_processor_token\", \"\
                      raw_routing_details\"] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidCustomer - Customer\
                      \ not found"
                    message_code: no_customer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:execute
      summary: Create ExternalBankAccount
      tags:
      - External Bank Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/external_bank_accounts/{external_bank_account_guid}:
    delete:
      description: "Deletes an external bank account.\n\nRequired scope: **external_bank_accounts:execute**"
      operationId: deleteExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: External bank account deleted
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:execute
      summary: Delete External Bank Account
      tags:
      - External Bank Accounts
      x-accepts: application/json
    get:
      description: "Retrieves an external bank account.\n\n## ExternalBankAccount\
        \ retrieval\n\nWhen retrieving an external bank account and include_balances\
        \ is set to true, the Platform will attempt to retrieve the balance from the\
        \ account's financial institution.\n\nIf force_balance_refresh is set to true,\
        \ the Platform will always attempt to retrieve the most up to date balance\
        \ from the account's financial institution. If force_balance_refresh is set\
        \ to false, the Platform will return the cached balance.\n\nIf while getting\
        \ the balance the Platform determines that the account needs to be refreshed,\
        \ the Platform will return a 422 status code with the message \"Bank account\
        \ refresh required\" and the ExternalBankAccount will be put into the refresh_required\
        \ state.\n\nIf while getting the balance the Platform determines that the\
        \ account is no longer valid, the Platform will return a 422 status code with\
        \ the message \"Bank account can no longer be used and is being deleted. It\
        \ must be re-added\" and the ExternalBankAccount will be deleted.\n\nWhen\
        \ retrieving an external bank account and include_pii is set to true, the\
        \ Platform will include the account holder's information in the response.\n\
        \n\n\nRequired scope: **external_bank_accounts:read**"
      operationId: getExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Force the balance on the account to be retrieved.
        explode: true
        in: query
        name: force_balance_refresh
        required: false
        schema:
          type: boolean
        style: form
      - description: "Include balance information in the response. If `force_balance_refresh`\
          \ is `true`, the most up to date balance will be returned. If `force_balance_refresh`\
          \ is `false`, the cached balance will be returned. `balance_updated_at`\
          \ in the response will provide the timestamp the balance was last updated."
        explode: true
        in: query
        name: include_balances
        required: false
        schema:
          type: boolean
        style: form
      - description: Include the account holder's PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: External bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: PlaidInstitutionNotRespondingError\
                      \ - Financial institution did not respond"
                    message_code: request_timeout
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:read
      summary: Get External Bank Account
      tags:
      - External Bank Accounts
      x-accepts: application/json
    patch:
      description: "Patch an external bank account.\n\nRequired scope: **external_bank_accounts:write**"
      operationId: patchExternalBankAccount
      parameters:
      - description: Identifier for the external bank account.
        explode: false
        in: path
        name: external_bank_account_guid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchExternalBankAccount'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalBankAccount'
          description: external bank account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_bank_accounts:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalBankAccount not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalBankAccount not found
      security:
      - BearerAuth: []
        oauth2:
        - external_bank_accounts:write
      summary: Patch ExternalBankAccount
      tags:
      - External Bank Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/external_wallets:
    get:
      description: "Retrieves a listing of external wallets.\n\nRequired scope: **external_wallets:read**"
      operationId: listExternalWallets
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: The owner of the entity.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestOwner'
        style: form
      - description: Comma separated external_wallet_guids to list external_wallets
          for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list external_wallets for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list external_wallets for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated assets to list external_wallets for.
        explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list external_wallets for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWalletList'
          description: Get list of external_wallets
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:read
      summary: Get external wallets list
      tags:
      - External Wallets
      x-accepts: application/json
    post:
      description: "Create an ExternalWallet.\n\n## Wallet creation\n\nExternal Wallets\
        \ can be created for a Bank or a Customer.\n\nTo create a wallet for your\
        \ Bank, omit the `customer_guid` parameter in the request body. To create\
        \ a wallet for your Customers, include the `customer_guid` parameter in the\
        \ request body.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the external wallet details in our private\
        \ store |\n| pending | The Platform is waiting for the external wallet to\
        \ be created |\n| completed | The Platform has created the external wallet\
        \ |\n| failed | The Platform was not able to successfully create the external\
        \ wallet |\n| deleting | The Platform is deleting the external wallet |\n\
        | deleted | The Platform has deleted the external wallet |\n\n\n\nExternal\
        \ wallets can be added to the bank by leaving the customer_guid blank. External\
        \ wallets added to the bank can be used by any customer of the bank.\n\nExternal\
        \ wallets can also be added to a specific customer by providing the customer_guid.\
        \ External wallets added to a customer can only be used by that customer.\n\
        \nRequired scope: **external_wallets:execute**"
      operationId: createExternalWallet
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExternalWallet'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: ExternalWallet created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: name, asset"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. customer_guid must  32 characters
                      long
                    message_code: invalid_value
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: account_kind\
                      \ supported values: [\"fireblocks_external_wallet\", \"circle_wire_external_wallet\"\
                      ] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "409":
          content:
            application/json:
              examples:
                already_exists:
                  value:
                    status: 409
                    error_message: "Data exists: External wallet already exists"
                    message_code: data_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data already exists
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidCustomer - Customer\
                      \ not found"
                    message_code: no_customer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:execute
      summary: Create ExternalWallet
      tags:
      - External Wallets
      x-content-type: application/json
      x-accepts: application/json
  /api/external_wallets/{external_wallet_guid}:
    delete:
      description: "Deletes an external wallet.\n\nRequired scope: **external_wallets:execute**"
      operationId: deleteExternalWallet
      parameters:
      - description: Identifier for the external wallet.
        explode: false
        in: path
        name: external_wallet_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: External wallet deleted
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalWallet not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalWallet not found
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:execute
      summary: Delete External Wallet
      tags:
      - External Wallets
      x-accepts: application/json
    get:
      description: "Retrieves an external_wallet.\n\nRequired scope: **external_wallets:read**"
      operationId: getExternalWallet
      parameters:
      - description: Identifier for the external_wallet.
        explode: false
        in: path
        name: external_wallet_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalWallet'
          description: External wallet found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: external_wallets:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: ExternalWallet not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ExternalWallet not found
      security:
      - BearerAuth: []
        oauth2:
        - external_wallets:read
      summary: Get External Wallet
      tags:
      - External Wallets
      x-accepts: application/json
  /api/identity_verifications:
    get:
      description: "Retrieves a list of identity verifications.\n\nRequired scope:\
        \ **identity_verifications:read**"
      operationId: listIdentityVerifications
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list identity verifications for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list identity verifications for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list identity verifications
          for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list identity verifications for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated types to list identity verifications for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerificationList'
          description: get list of identity verifications
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: identity_verifications:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - identity_verifications:read
      summary: List Identity Verifications
      tags:
      - IdentityVerifications
      x-accepts: application/json
    post:
      description: "Creates an Identity Verification.\n\n## Identity Verifications\n\
        \nIdentity Verifications confirm an individual's identity with for the purpose\
        \ of inclusion on the platform. This know-your-customer (KYC) process is a\
        \ requirement for individuals to be able to transact. At present, we offer\
        \ support for Cybrid performing the verification or working with partners\
        \ to accept their KYC/AML process and have it attested to in our platform.\n\
        \n## State\n\n| State | Description |\n|-------|-------------|\n| storing\
        \ | The Platform is storing the identity verification details in our private\
        \ store |\n| waiting | The Platform is waiting for the customer to start the\
        \ identity verification process |\n| pending | The Platform is waiting for\
        \ the customer to finish the identity verification process |\n| reviewing\
        \ | The Platform is waiting for compliance to review the identity verification\
        \ results |\n| expired | The identity verification process has expired |\n\
        | completed | The identity verification process has been completed |\n\n##\
        \ Outcome\n\n| State | Description |\n|-------|-------------|\n| passed |\
        \ The customer has passed the identity verification process |\n| failed |\
        \ The customer has failed the identity verification process |\n\n## Failure\
        \ Codes\n\n| Code | Description |\n|-------|-------------|\n| id_check_failure\
        \ | Failure due to an issue verifying the provided ID |\n| id_quality_check_failure\
        \ | Failure due to an issue verifying the provided ID based on the image quality\
        \ |\n| id_barcode_check_failure | Failure due to an issue verifying the provided\
        \ ID based on the barcode |\n| id_mrz_check_failure | Failure due to an issue\
        \ verifying the provided ID based on the machine-readable zone (MRZ) |\n|\
        \ id_presence_check_failure | Failure due to an issue verifying the provided\
        \ ID based on the presence of the ID |\n| id_expiration_check_failure | Failure\
        \ due to an issue verifying the provided ID based on the expiration date |\n\
        | id_double_side_check_failure | Failure due to an issue verifying the provided\
        \ ID based on both sides not being provided |\n| id_type_allowed_check_failure\
        \ | Failure due to an issue verifying the provided ID based on the type provided\
        \ |\n| id_country_allowed_check_failure | Failure due to an issue verifying\
        \ the provided ID based on the issuing country |\n| id_digital_replica_check_failure\
        \ | Failure due to an issue verifying the provided ID based on it being a\
        \ digital replica |\n| id_paper_replica_check_failure | Failure due to an\
        \ issue verifying the provided ID based on it being a paper replica |\n| database_check_failure\
        \ | Failure due to an issue verifying the provided information against authoritative\
        \ data sources |\n| selfie_failure | Failure due to an issue verifying the\
        \ provided selfie photo |\n| selfie_pose_check_failure | Failure due to an\
        \ issue verifying the provided selfie photo based on incorrect poses |\n|\
        \ selfie_quality_check_failure | Failure due to an issue verifying the provided\
        \ selfie photo based on the image quality |\n| country_comparison_check_failure\
        \ | Failure due the customer verification being performed out of country |\n\
        | duplicate_person_check_failure | Failure due to a customer already existing\
        \ for this person |\n| prohibited_person_check_failure | Failure due to a\
        \ person being on prohibited from accessing the service |\n| name_check_failure\
        \ | Failure due to an issue verifying the name of the person |\n| address_check_failure\
        \ | Failure due to an issue verifying the address of the person |\n| account_number_check_failure\
        \ | Failure due to an issue verifying the account number of the person |\n\
        | dob_check_failure | Failure due to an issue verifying the date of birth\
        \ of the person |\n| id_number_check_failure | Failure due to an issue verifying\
        \ an identification number of the person |\n| phone_number_check_failure |\
        \ Failure due to an issue verifying the phone number of the person |\n| email_address_check_failure\
        \ | Failure due to an issue verifying the email address of the person |\n\
        | document_type_check_failure | Failure due to the type of document provided\
        \ not being the correct type |\n| document_quality_check_failure | Failure\
        \ due to an issue verifying the document based on the image quality |\n| compliance_rejection\
        \ | Failure due to compliance rejecting the identity verification |\n| plaid_failure\
        \ | Failure due to an issue interacting with Plaid |\n| plaid_item_login_required\
        \ | Failure due to the Plaid token for the account requiring re-login |\n\
        | plaid_invalid_product | Failure due to the Plaid product not being supported\
        \ (contact support) |\n| plaid_no_accounts | Failure due to the Plaid token\
        \ having access to no accounts |\n| plaid_item_not_found | Failure due to\
        \ Plaid not being able to find the associated account |\n| decision_timeout\
        \ | Failure due to an issue verifying the email address of the person |\n\
        | requested_failure | In sandbox, the caller requested that the process failed\
        \ |\n| deleted_account | Failure due to the bank account having been deleted\
        \ before a decision was made |\n\n\n\nRequired scope: **identity_verifications:execute**"
      operationId: createIdentityVerification
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostIdentityVerification'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerification'
          description: Identity Verification created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: identity_verifications:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - identity_verifications:execute
      summary: Create Identity Verification
      tags:
      - IdentityVerifications
      x-content-type: application/json
      x-accepts: application/json
  /api/identity_verifications/{identity_verification_guid}:
    get:
      description: "Retrieves an identity verification.\n\nRequired scope: **identity_verifications:read**"
      operationId: getIdentityVerification
      parameters:
      - description: Identifier for the identity verification.
        explode: false
        in: path
        name: identity_verification_guid
        required: true
        schema:
          type: string
        style: simple
      - description: Include PII in the response.
        explode: true
        in: query
        name: include_pii
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityVerificationWithDetails'
          description: identity verification found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: identity_verifications:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: identity_verification not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: identity_verification not found
      security:
      - BearerAuth: []
        oauth2:
        - identity_verifications:read
      summary: Get Identity Verification
      tags:
      - IdentityVerifications
      x-accepts: application/json
  /api/invoices:
    get:
      description: "Retrieves a list of invoices.\n\nRequired scope: **invoices:read**"
      operationId: listInvoices
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list invoices for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list invoices for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list invoices for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list invoices for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list invoices for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated assets to list invoices for.
        explode: true
        in: query
        name: asset
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: environment
        required: false
        schema:
          description: The environment to list invoices for.
          enum:
          - sandbox
          - production
          type: string
        style: form
      - description: Comma separated labels to list invoices for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
          description: get list of invoices
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: List Invoices
      tags:
      - Invoices
      x-accepts: application/json
    post:
      description: "Creates a invoice.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing    | The Platform is storing the invoice details in our private\
        \ store |\n| unpaid     | The invoice is unpaid. Payment instructions can\
        \ be generated for an invoice in this state |\n| cancelling | The invocie\
        \ is in the process of being cancelled |\n| cancelled  | The invoice has been\
        \ cancelled | \n| settling   | The invoice has been paid and the funds associated\
        \ with this invoice are in the process of being settled |\n| paid       |\
        \ The invoice has been paid and the funds associated with this invoice have\
        \ been settled | \n\n\n\nRequired scope: **invoices:execute**"
      operationId: createInvoice
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInvoice'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:execute
      summary: Create Invoice
      tags:
      - Invoices
      x-content-type: application/json
      x-accepts: application/json
  /api/invoices/{invoice_guid}:
    delete:
      description: "Cancels an invoice.\n\nRequired scope: **invoices:execute**"
      operationId: cancelInvoice
      parameters:
      - description: Identifier for the invoice.
        explode: false
        in: path
        name: invoice_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Invoice cancelled
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: Invoice not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invoice not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:execute
      summary: Cancel Invoice
      tags:
      - Invoices
      x-accepts: application/json
    get:
      description: "Retrieves a invoice.\n\nRequired scope: **invoices:read**"
      operationId: getInvoice
      parameters:
      - description: Identifier for the payment instruction.
        explode: false
        in: path
        name: invoice_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
          description: invoice found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: invoice not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invoice not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: Get Invoice
      tags:
      - Invoices
      x-accepts: application/json
  /api/payment_instructions:
    get:
      description: "Retrieves a list of payment instructions.\n\nRequired scope: **invoices:read**"
      operationId: listPaymentInstructions
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated guids to list payment instructions for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list payment instructions for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list payment instructions for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated invoice_guids to list payment instructions for.
        explode: true
        in: query
        name: invoice_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstructionList'
          description: get list of payment instructions
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: List Payment Instructions
      tags:
      - PaymentInstructions
      x-accepts: application/json
    post:
      description: "Creates a payment instruction.\n\n## State\n\n| State | Description\
        \ |\n|-------|-------------|\n| storing | The Platform is storing the payment\
        \ instruction details in our private store |\n| created | The Platform has\
        \ created the payment instruction |\n| expired | The PaymentInstruction is\
        \ no longer valid |\n\n\n\nRequired scope: **invoices:write**"
      operationId: createPaymentInstruction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPaymentInstruction'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstruction'
          description: Payment Instruction created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:write"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - invoices:write
      summary: Create Payment Instruction
      tags:
      - PaymentInstructions
      x-content-type: application/json
      x-accepts: application/json
  /api/payment_instructions/{payment_instruction_guid}:
    get:
      description: "Retrieves a payment_instruction.\n\nRequired scope: **invoices:read**"
      operationId: getPaymentInstruction
      parameters:
      - description: Identifier for the payment instruction.
        explode: false
        in: path
        name: payment_instruction_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInstruction'
          description: payment_instruction found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: invoices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: payment_instruction not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: payment_instruction not found
      security:
      - BearerAuth: []
        oauth2:
        - invoices:read
      summary: Get Payment Instruction
      tags:
      - PaymentInstructions
      x-accepts: application/json
  /api/accounts:
    get:
      description: "Retrieves a list of accounts.\n\nRequired scope: **accounts:read**"
      operationId: listAccounts
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: The owner of the entity.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestOwner'
        style: form
      - description: Comma separated account_guids to list accounts for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_types to list accounts for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list accounts for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list accounts for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list accounts for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
          description: get list of accounts
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated bank guids must be at the most
                      4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - accounts:read
      summary: List Accounts
      tags:
      - Accounts
      x-accepts: application/json
    post:
      description: "Creates an account.\n\n## Account Type\n\nAn Account is tied to\
        \ a specific cryptocurrency or fiat and is comprised of transactions and a\
        \ current balance.\n\nAn account is required to allow a Bank or Customer to\
        \ hold cryptocurrency or a Customer to hold fiat on the Cybrid Platform.\n\
        \nAt present, accounts can be created as `trading`, `storage` or `fiat ` accounts\
        \ and are required before a Customer can generate quotes or execute a `trade`\
        \ or `transfer`.\n\nTo create accounts for your Bank, omit the `customer_guid`\
        \ parameter in the request body. To create accounts for your Customers, include\
        \ the `customer_guid` parameter in the request body.\n\nAt the bank level,\
        \ `invoice_operations` accounts can be configured to pre-fund your customers'\
        \ Lightning Network operations.\n\n## Asset\n\nThe asset is the specific cryptocurrency\
        \ or fiat that the account holds, e.g., 'BTC' for Bitcoin or `USD` for US\
        \ dollars. See the Symbols API for a complete list of cryptocurrencies and\
        \ fiat supported. \n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the account details in our private store\
        \ |\n| created | The Platform has created the account |\n\n\n\nRequired scope:\
        \ **accounts:execute**"
      operationId: createAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccount'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: account created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type, customer_guid,\
                      \ asset, name"
                    message_code: missing_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: type supported\
                      \ values: [\"trading\"] "
                    message_code: invalid_value
                invalid_value:
                  value:
                    status: 400
                    error_message: name must be at the most 128 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - accounts:execute
      summary: Create Account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /api/accounts/{account_guid}:
    get:
      description: "Retrieves an account.\n\nRequired scope: **accounts:read**"
      operationId: getAccount
      parameters:
      - description: Identifier for the account.
        explode: false
        in: path
        name: account_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: account found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: accounts:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: account not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: account not found
      security:
      - BearerAuth: []
        oauth2:
        - accounts:read
      summary: Get Account
      tags:
      - Accounts
      x-accepts: application/json
  /api/files:
    get:
      description: "Retrieves a list of files.\n\nRequired scope: **files:read**"
      operationId: listFiles
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated file_guids to list files for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated file types to list files for.
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated file states to list files for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list files for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list files for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFileList'
          description: get list of files
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated types must be at the most 4096
                      characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: files:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - accounts:read
      summary: List Files
      tags:
      - Files
      x-accepts: application/json
    post:
      description: "Creates a file.\n\n#### This feature is currently in preview mode\
        \ and is not yet available for partner use.\n\n## Data\n\nThe attribute contains\
        \ the base64 encoded file content. The value needs to be smaller than 10MB\
        \ otherwise the Platform will reject the request. To upload files larger than\
        \ 10MB do not provide the content and use the returned upload URL to provide\
        \ the file.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the file in our private store |\n| completed\
        \ | The Platform has completed storing the file |\n| failed | The Platform\
        \ failed to store the file |\n\n\n\nRequired scope: **files:execute**"
      operationId: createFile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFile'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFile'
          description: file created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type, customer_guid,\
                      \ content_type, filename"
                    message_code: missing_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: content_type\
                      \ supported values: [\"[\\\"image/jpeg\\\", \\\"image/png\\\"\
                      , \\\"application/pdf\\\", \\\"video/mp4\\\"]\"] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: files:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - files:execute
      summary: Create File
      tags:
      - Files
      x-content-type: application/json
      x-accepts: application/json
  /api/files/{file_guid}:
    get:
      description: "Retrieves a file.\n\nRequired scope: **files:read**"
      operationId: getFile
      parameters:
      - description: Identifier for the file.
        explode: false
        in: path
        name: file_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFile'
          description: file found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: files:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: file not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: file not found
      security:
      - BearerAuth: []
        oauth2:
        - files:read
      summary: Get File
      tags:
      - Files
      x-accepts: application/json
  /api/prices:
    get:
      description: "Retrieves a listing of symbol prices.\n\n## Symbols\n\nSymbol\
        \ are pairs and are in the format asset-counter_asset, e.g., 'BTC-USD' for\
        \ the Bitcoin/ USD pair. See the Symbols API for a complete list of cryptocurrencies\
        \ supported.\n\n\n\nRequired scope: **prices:read**"
      operationId: listPrices
      parameters:
      - description: Comma separated trading symbols to list prices for.
        explode: true
        in: query
        name: symbol
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated trading symbols to list prices for.
        explode: true
        in: query
        name: trading_symbol
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated payout symbols to list prices for.
        explode: true
        in: query
        name: payout_symbol
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated payout country codes to list prices for.
        explode: true
        in: query
        name: payout_country_code
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated payout participants types to list prices for.
        explode: true
        in: query
        name: payout_participants_type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated payout routes to list prices for.
        explode: true
        in: query
        name: payout_route
        required: false
        schema:
          type: string
        style: form
      - description: The bank identifier to retrieve prices for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymbolPriceResponse'
          description: get list of price
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: comma separated symbols must be at the most 4096
                      characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: prices:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - prices:read
      summary: Get Price
      tags:
      - Prices
      x-accepts: application/json
  /api/quotes:
    get:
      description: "Retrieves a listing of quotes for all customers of a bank.\n\n\
        Required scope: **quotes:read**"
      operationId: listQuotes
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated quote_guids to list quotes for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated product_types to list accounts for.
        explode: true
        in: query
        name: product_type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list quotes for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list quotes for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list quotes for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteList'
          description: get list of quotes
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - quotes:read
      summary: Get quotes list
      tags:
      - Quotes
      x-accepts: application/json
    post:
      description: "Creates a quote.\n\n## Quote creation\n\nQuotes can be created\
        \ for a Bank or a Customer.\n\nTo create quotes for your Bank, omit the `customer_guid`\
        \ parameter in the request body. To create quotes for your Customers, include\
        \ the `customer_guid` parameter in the request body.\n\n## Failure codes\n\
        \n| Code | Description |\n|------|-------------|\n| invalid_amount | The amount\
        \ on the invoice is unprocessable |\n| insufficient_balance | There are insufficient\
        \ funds to process the quote |\n| invalid_invoice | The invoice cannot be\
        \ processed |\n\n\n\nRequired scope: **quotes:execute**"
      operationId: createQuote
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuote'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: quote created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: customer_guid, symbol,\
                      \ side"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. customer guids must be at the most
                      32 characters long
                    message_code: invalid_value
                invalid_parameter:
                  value:
                    status: 400
                    error_message: "Invalid parameter. receive_amount, deliver_amount\
                      \ are mutually exclusive. Atleast one of them should be present"
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidAddress - Invalid\
                      \ invoice"
                    message_code: invalid_invoice
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - quotes:execute
      summary: Create Quote
      tags:
      - Quotes
      x-content-type: application/json
      x-accepts: application/json
  /api/quotes/{quote_guid}:
    get:
      description: "Retrieves a quote.\n\nRequired scope: **quotes:read**"
      operationId: getQuote
      parameters:
      - description: Identifier for the quote.
        explode: false
        in: path
        name: quote_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quote'
          description: quote found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: quotes:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: quote not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: quote not found
      security:
      - BearerAuth: []
        oauth2:
        - quotes:read
      summary: Get Quote
      tags:
      - Quotes
      x-accepts: application/json
  /api/symbols:
    get:
      description: "Retrieves a listing of symbols.Required scope: **prices:read**"
      operationId: listSymbols
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Symbols'
          description: get list of symbols
        "401":
          content:
            application/json:
              examples:
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
      security:
      - BearerAuth: []
        oauth2:
        - prices:read
      summary: Get Symbols list
      tags:
      - Symbols
      x-accepts: application/json
  /api/trades:
    get:
      description: "Retrieves a listing of trades.\n\nRequired scope: **trades:read**"
      operationId: listTrades
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated trade_guids to list trades for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list trades for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list trades for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list trades for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list trades for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list trades for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list trades for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date-time inclusive lower bound, ISO8601."
        explode: true
        in: query
        name: created_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date-time exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: created_at_lt
        required: false
        schema:
          type: string
        style: form
      - description: "Updated at start date-time inclusive lower bound, ISO8601."
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Updated at end date-time exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: updated_at_lt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeList'
          description: get list of trades
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated account guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - trades:read
      summary: Get trades list
      tags:
      - Trades
      x-accepts: application/json
    post:
      description: "Creates a trade.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the trade details in our private store\
        \ |\n| pending | The Platform is executing the trade |\n| cancelled | The\
        \ Platform has cancelled the trade |\n| settling | The Platform is settling\
        \ the trade |\n| completed | The Platform has successfully completed the trade\
        \ |\n| failed | The Platform was not able to successfully complete the trade\
        \ |\n\n## Failure codes\n\n| Code | Description |\n|------|-------------|\n\
        | non_sufficient_funds | The delivery account does not have enough funds to\
        \ complete the trade |\n| unsupported | The trading pair is not supported\
        \ for this customer |\n| limit_exceeded | The customer is over the limits\
        \ that have been set for them for this activity |\n| expired_quote | The quote\
        \ expired before it could be executed |\n| market_volatility | The quote could\
        \ not be executed due to market volatility |\n\n\n\nRequired scope: **trades:execute**"
      operationId: createTrade
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrade'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
          description: Trade created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: quote_guid"
                    message_code: missing_parameter
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. quote guid must be at the most 32
                      characters long
                    message_code: invalid_value
                invalid_parameter:
                  value:
                    status: 400
                    error_message: Invalid parameter. expected_error not permitted
                      in production
                    message_code: invalid_parameter
                invalid_parameter_value:
                  value:
                    status: 400
                    error_message: "Invalid value exception. Parameter: expected_error\
                      \ supported values: [\"expired_quote\", \"non_sufficient_funds\"\
                      ] "
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "409":
          content:
            application/json:
              examples:
                already_exists:
                  value:
                    status: 409
                    error_message: "Data exists: Trade for quote already exists"
                    message_code: data_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Data already exists
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: QuoteExpiredException\
                      \ - Quote has expired"
                    message_code: quote_expired
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - trades:execute
      summary: Create Trade
      tags:
      - Trades
      x-content-type: application/json
      x-accepts: application/json
  /api/trades/{trade_guid}:
    get:
      description: "Retrieves a trade.\n\nRequired scope: **trades:read**"
      operationId: getTrade
      parameters:
      - description: Identifier for the trade.
        explode: false
        in: path
        name: trade_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
          description: trade found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: bank or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: trades:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: trade not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: trade not found
      security:
      - BearerAuth: []
        oauth2:
        - trades:read
      summary: Get Trade
      tags:
      - Trades
      x-accepts: application/json
  /api/transfers:
    get:
      description: "Retrieves a listing of transfers.\n\nRequired scope: **transfers:read**"
      operationId: listTransfers
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated transfer_guids to list transfers for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated transfer_types to list accounts for.
        explode: true
        in: query
        name: transfer_type
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list transfers for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list transfers for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated account_guids to list transfers for.
        explode: true
        in: query
        name: account_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated states to list transfers for.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated sides to list transfers for.
        explode: true
        in: query
        name: side
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated labels to list transfers for.
        explode: true
        in: query
        name: label
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated transaction hashes to list transfers for.
        explode: true
        in: query
        name: txn_hash
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date-time inclusive lower bound, ISO8601"
        explode: true
        in: query
        name: created_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date-time exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: created_at_lt
        required: false
        schema:
          type: string
        style: form
      - description: "Created at start date-time inclusive lower bound, ISO8601"
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          type: string
        style: form
      - description: "Created at end date-time exclusive upper bound, ISO8601."
        explode: true
        in: query
        name: updated_at_lt
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferList'
          description: get list of transfers
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated account guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - transfers:read
      summary: Get transfers list
      tags:
      - Transfers
      x-accepts: application/json
    post:
      description: "Creates a transfer.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the transfer details in our private store\
        \ |\n| reviewing | The Platform is reviewing the transfer for compliance |\n\
        | pending | The Platform is executing the transfer |\n| completed | The Platform\
        \ has successfully completed the transfer |\n| failed | The Platform was not\
        \ able to successfully complete the transfer |\n\n## Failure codes\n\n| Code\
        \ | Description |\n|------|-------------|\n| amount_too_low | The transfer\
        \ was rejected due to the amount being too low |\n| cancelled | The transfer\
        \ was manually cancelled |\n| compliance_rejection | The transfer was rejected\
        \ for compliance reasons |\n| internal_error | An internal error occurred\
        \ while processing the transfer, please try again |\n| invalid_address | The\
        \ destination address is invalid for transfer |\n| invalid_balance | There\
        \ was insufficient balance at the lightning provider to complete the transfer\
        \ |\n| limit_exceeded | The customer is over the limits that have been set\
        \ for them for this activity |\n| network_fee_too_low | The transfer was rejected\
        \ due to the network fee being too low |\n| non_sufficient_funds | The customer\
        \ does not have enough funds to complete the transfer |\n| party_name_invalid\
        \ | The transfer's associated external bank account has an invalid party name\
        \ |\n| payment_rail_invalid | The payment rail specified for the transfer\
        \ is not supported by the external bank account |\n| plaid_access_not_granted\
        \ | See the description from Plaid [here](https://plaid.com/docs/errors/item/#access_not_granted)\
        \ |\n| plaid_institution_not_responding | See the description from Plaid [here](https://plaid.com/docs/errors/institution/#institution_not_responding)\
        \ |\n| plaid_internal_server_error | See the description from Plaid [here](https://plaid.com/docs/errors/api/#internal_server_error-or-plaid-internal-error)\
        \ |\n| plaid_item_not_found | See the description from Plaid [here](https://plaid.com/docs/errors/item/#item_not_found)\
        \ |\n| plaid_item_not_supported | See the description from Plaid [here](https://plaid.com/docs/errors/item/#item_not_supported)\
        \ |\n| plaid_multiple_accounts | Multiple accounts were selected through Plaid\
        \ Link. |\n| plaid_no_accounts | See the description from Plaid [here](https://plaid.com/docs/errors/item/#no_accounts)\
        \ |\n| plaid_none_balances_error | The transfer was rejected due to an error\
        \ with the balances retrieved by Plaid |\n| plaid_unknown_error | See the\
        \ description from Plaid [here](https://plaid.com/docs/errors/api/#unknown_error)\
        \ |\n| refresh_required | The transfer's associated external_bank_account\
        \ needs to be reconnected via Plaid |\n| reversed | The transfer was reversed\
        \ |\n\n## Failure codes that will result in a state change for the associated\
        \ external bank account\n\n| Code | Description |\n|------|-------------|\n\
        | refresh_required | The transfer was rejected due to the external bank account\
        \ needing to be refreshed. The external bank account will be put in the state\
        \ `refresh_required` |\n| plaid_access_not_granted | The transfer was rejected\
        \ due to the external bank account needing to be reconnected via Plaid. The\
        \ external bank account will be put in the state `deleted` |\n| plaid_item_not_found\
        \ | The transfer was rejected due to the external bank account needing to\
        \ be reconnected via Plaid. The external bank account will be put in the state\
        \ `deleted` |\n| plaid_item_not_supported | The transfer was rejected because\
        \ the account is not supported. A different account should be connected via\
        \ Plaid. The external bank account will be put in the state `deleted` |\n\
        | plaid_multiple_accounts | The transfer was rejected because multiple accounts\
        \ were selected through Plaid Link. Only one account must be selected. The\
        \ external bank account will be put in the state `deleted` |\n| plaid_no_accounts\
        \ | The transfer was rejected because no compatible accounts could be found.\
        \ The external bank account will be put in the state `deleted` |\n\n\n\nRequired\
        \ scope: **transfers:execute**"
      operationId: createTransfer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTransfer'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: Transfer created
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: organization or\
                      \ bank or customer"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Forbidden
        "409":
          content:
            application/json:
              examples:
                quote_already_exists_1:
                  value:
                    status: 409
                    error_message: Transfer already exists for this quote
                    message_code: quote_already_exists
                quote_already_exists_2:
                  value:
                    status: 409
                    error_message: Return already processed for this transfer
                    message_code: quote_already_exists
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "422":
          content:
            application/json:
              examples:
                invalid_transfer:
                  value:
                    status: 422
                    error_message: Transfer invalid
                    message_code: invalid_transfer
                invalid_parameter_1:
                  value:
                    status: 422
                    error_message: Expected behaviour invalid
                    message_code: invalid_parameter
                invalid_parameter_2:
                  value:
                    status: 422
                    error_message: Quote invalid
                    message_code: invalid_parameter
                invalid_value_1:
                  value:
                    status: 422
                    error_message: Asset not supported
                    message_code: invalid_value
                invalid_value_2:
                  value:
                    status: 422
                    error_message: Amount is above the configured threshold
                    message_code: invalid_value
                invalid_value_3:
                  value:
                    status: 422
                    error_message: Participants must be specified
                    message_code: invalid_value
                invalid_value_4:
                  value:
                    status: 422
                    error_message: Participant types not supported
                    message_code: invalid_value
                invalid_value_5:
                  value:
                    status: 422
                    error_message: Participants not found
                    message_code: invalid_value
                invalid_value_6:
                  value:
                    status: 422
                    error_message: Participants have been frozen
                    message_code: invalid_value
                invalid_value_7:
                  value:
                    status: 422
                    error_message: Participants have been rejected
                    message_code: invalid_value
                invalid_value_8:
                  value:
                    status: 422
                    error_message: Participants have not been verified
                    message_code: invalid_value
                invalid_value_9:
                  value:
                    status: 422
                    error_message: Send as account not found
                    message_code: invalid_value
                invalid_value_10:
                  value:
                    status: 422
                    error_message: Send as account not valid for transfer
                    message_code: invalid_value
                invalid_value_11:
                  value:
                    status: 422
                    error_message: Send as account cannot be defined for this transfer
                    message_code: invalid_value
                invalid_value_12:
                  value:
                    status: 422
                    error_message: Amount not valid
                    message_code: invalid_value
                no_quote:
                  value:
                    status: 422
                    error_message: Quote not found
                    message_code: no_quote
                quote_expired:
                  value:
                    status: 422
                    error_message: Quote expired
                    message_code: quote_expired
                frozen_customer:
                  value:
                    status: 422
                    error_message: Customer has been frozen
                    message_code: frozen_customer
                rejected_customer:
                  value:
                    status: 422
                    error_message: Customer has been rejected
                    message_code: rejected_customer
                unverified_customer:
                  value:
                    status: 422
                    error_message: Customer has not been verified
                    message_code: unverified_customer
                no_account_1:
                  value:
                    status: 422
                    error_message: Account not found
                    message_code: no_account
                no_account_2:
                  value:
                    status: 422
                    error_message: Deposit address account not found
                    message_code: no_account
                no_account_3:
                  value:
                    status: 422
                    error_message: Deposit bank account account not found
                    message_code: no_account
                no_account_4:
                  value:
                    status: 422
                    error_message: Parent deposit bank account account not found
                    message_code: no_account
                invalid_account:
                  value:
                    status: 422
                    error_message: Account invalid
                    message_code: invalid_account
                invalid_fiat_account_1:
                  value:
                    status: 422
                    error_message: Multiple accounts found
                    message_code: invalid_fiat_account
                invalid_fiat_account_2:
                  value:
                    status: 422
                    error_message: Bank fiat account state invalid
                    message_code: invalid_fiat_account
                no_source_account:
                  value:
                    status: 422
                    error_message: Source account not found
                    message_code: no_source_account
                invalid_source_account:
                  value:
                    status: 422
                    error_message: Source account invalid
                    message_code: invalid_source_account
                no_destination_account:
                  value:
                    status: 422
                    error_message: Destination account not found
                    message_code: no_destination_account
                invalid_destination_account:
                  value:
                    status: 422
                    error_message: Destination account invalid
                    message_code: invalid_destination_account
                no_invoice_operations_account:
                  value:
                    status: 422
                    error_message: Invoice operations account not found
                    message_code: no_invoice_operations_account
                invalid_invoice_operations_account:
                  value:
                    status: 422
                    error_message: Invoice operations account invalid
                    message_code: invalid_invoice_operations_account
                invalid_external_bank_account_1:
                  value:
                    status: 422
                    error_message: External bank account not found
                    message_code: invalid_external_bank_account
                invalid_external_bank_account_2:
                  value:
                    status: 422
                    error_message: External bank account invalid
                    message_code: invalid_external_bank_account
                invalid_external_wallet_1:
                  value:
                    status: 422
                    error_message: External wallet not found
                    message_code: invalid_external_wallet
                invalid_external_wallet_2:
                  value:
                    status: 422
                    error_message: External wallet invalid
                    message_code: invalid_external_wallet
                invalid_external_wallet_3:
                  value:
                    status: 422
                    error_message: external_wallet_guid is required
                    message_code: invalid_external_wallet
                no_fee_account:
                  value:
                    status: 422
                    error_message: Bank fee account not found
                    message_code: no_fee_account
                invalid_fee_account:
                  value:
                    status: 422
                    error_message: Bank fee account invalid
                    message_code: invalid_fee_account
                invalid_payment_rail_for_country:
                  value:
                    status: 422
                    error_message: Invalid country for payment rail
                    message_code: invalid_payment_rail_for_country
                invalid_payment_rail_for_direction:
                  value:
                    status: 422
                    error_message: Invalid direction for payment rail
                    message_code: invalid_payment_rail_for_direction
                not_implemented:
                  value:
                    status: 422
                    error_message: Invalid call method
                    message_code: not_implemented
                no_fiat_account:
                  value:
                    status: 422
                    error_message: Bank fiat account not found
                    message_code: no_fiat_account
                no_network_fee_account:
                  value:
                    status: 422
                    error_message: Network fee account not found
                    message_code: no_network_fee_account
                no_transfer:
                  value:
                    status: 422
                    error_message: Transfer not found
                    message_code: no_transfer
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Content
      security:
      - BearerAuth: []
        oauth2:
        - transfers:execute
      summary: Create Transfer
      tags:
      - Transfers
      x-content-type: application/json
      x-accepts: application/json
  /api/transfers/{transfer_guid}:
    get:
      description: "Retrieves a transfer.\n\nRequired scope: **transfers:read**"
      operationId: getTransfer
      parameters:
      - description: Identifier for the transfer.
        explode: false
        in: path
        name: transfer_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: transfer found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: transfers:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: transfer not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: transfer not found
      security:
      - BearerAuth: []
        oauth2:
        - transfers:read
      summary: Get Transfer
      tags:
      - Transfers
      x-accepts: application/json
  /api/workflows:
    get:
      description: "Retrieves a listing of workflows.\n\nRequired scope: **workflows:read**"
      operationId: listWorkflows
      parameters:
      - description: The page index to retrieve.
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPage'
        style: form
      - description: The number of entities per page to return.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          $ref: '#/components/schemas/ListRequestPerPage'
        style: form
      - description: Comma separated workflow_guids to list workflows for.
        explode: true
        in: query
        name: guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated bank_guids to list workflows for.
        explode: true
        in: query
        name: bank_guid
        required: false
        schema:
          type: string
        style: form
      - description: Comma separated customer_guids to list workflows for.
        explode: true
        in: query
        name: customer_guid
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowsList'
          description: get list of workflows
        "400":
          content:
            application/json:
              examples:
                invalid_value:
                  value:
                    status: 400
                    error_message: Invalid value. comma separated bank guids must
                      be at the most 4096 characters long
                    message_code: invalid_value
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
      security:
      - BearerAuth: []
        oauth2:
        - workflows:read
      summary: Get workflows list
      tags:
      - Workflows
      x-accepts: application/json
    post:
      description: "Creates a workflow.\n\n## State\n\n| State | Description |\n|-------|-------------|\n\
        | storing | The Platform is storing the workflow details in our private store\
        \ |\n| completed | The Platform has created the workflow |\n| failed | The\
        \ workflow was not completed successfully |\n\n## Plaid\n\n| Param | Description\
        \ |\n|-------|-------------|\n| redirect_uri | All URIs must be registered\
        \ with Cybrid. For local testing use `http://localhost:4200/bank-account-connect`\
        \ |\n\n\n\nRequired scope: **workflows:execute**"
      operationId: createWorkflow
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostWorkflow'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workflow'
          description: Workflow created
        "400":
          content:
            application/json:
              examples:
                missing_parameter:
                  value:
                    status: 400
                    error_message: "Missing parameter. Required: type"
                    message_code: missing_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid requests
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:execute"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "422":
          content:
            application/json:
              examples:
                unprocessable_request:
                  value:
                    status: 422
                    error_message: "Unable to process request: InvalidBankCountryCodeConfiguration\
                      \ - Invalid bank configuration: country codes"
                    message_code: invalid_parameter
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process request
      security:
      - BearerAuth: []
        oauth2:
        - workflows:execute
      summary: Create Workflow
      tags:
      - Workflows
      x-content-type: application/json
      x-accepts: application/json
  /api/workflows/{workflow_guid}:
    get:
      description: "Retrieves a workflow.\n\nRequired scope: **workflows:read**"
      operationId: getWorkflow
      parameters:
      - description: Identifier for the workflow.
        explode: false
        in: path
        name: workflow_guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowWithDetails'
          description: trade found
        "401":
          content:
            application/json:
              examples:
                invalid_subject:
                  value:
                    status: 401
                    error_message: "Invalid Subject type. Required: customer or bank\
                      \ or organization"
                    message_code: invalid_subject
                invalid_signature:
                  value:
                    status: 401
                    error_message: Signature verification raised
                    message_code: authentication_failed
                invalid_audience:
                  value:
                    status: 401
                    error_message: Invalid audience
                    message_code: authentication_failed
                invalid_issuer:
                  value:
                    status: 401
                    error_message: Invalid issuer
                    message_code: authentication_failed
                expired_signature:
                  value:
                    status: 401
                    error_message: Signature has expired
                    message_code: authentication_failed
                malformed_auth_header:
                  value:
                    status: 401
                    error_message: Authorization header is malformed.
                    message_code: authentication_malformed
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: "Unauthorized - Authentication failed, "
        "403":
          content:
            application/json:
              examples:
                invalid_scope:
                  value:
                    status: 403
                    error_message: "Invalid scopes. Required: workflows:read"
                    message_code: invalid_scopes
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid scope
        "404":
          content:
            application/json:
              examples:
                not_found:
                  value:
                    status: 404
                    error_message: workflow not found
                    message_code: not_found
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: workflow not found
      security:
      - BearerAuth: []
        oauth2:
        - workflows:read
      summary: Get Workflow
      tags:
      - Workflows
      x-accepts: application/json
components:
  schemas:
    Asset:
      example:
        symbol: symbol
        code: code
        decimals: 0
        name: name
        type: type
      properties:
        type:
          description: The asset type; one of fiat or crypto.
          type: string
        code:
          description: The unique code for the asset.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the asset.
          maxLength: 128
          minLength: 1
          type: string
        symbol:
          description: The currency symbol for the asset.
          maxLength: 8
          minLength: 1
          type: string
        decimals:
          description: The number of decimals for the default unit of the asset.
          minimum: 0
          type: integer
      required:
      - code
      - decimals
      - name
      - symbol
      - type
      type: object
    AssetTypes:
      enum:
      - fiat
      - crypto
      type: string
    ActivityType:
      description: 'The activity type '
      enum:
      - trading
      - funding
      - book_transfer
      - crypto_transfer
      type: string
    ActivityLimit:
      example:
        amount: 5
        activities:
        - activities
        - activities
        name: name
        interval: 5
        asset: asset
      properties:
        name:
          description: The name of the limit.
          type: string
        asset:
          description: The asset code for the limit.
          type: string
        amount:
          description: The limit amount for the asset.
          type: integer
        interval:
          description: The limit interval in seconds for the asset.
          type: integer
        activities:
          description: The activities associated with the limit.
          items:
            description: "The activity type; one of trading, funding, book_transfer,\
              \ or crypto_transfer."
            type: string
          type: array
      type: object
    AssetList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          code: code
          decimals: 0
          name: name
          type: type
        - symbol: symbol
          code: code
          decimals: 0
          name: name
          type: type
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of bank entities
          items:
            $ref: '#/components/schemas/Asset'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Bank:
      example:
        supported_payout_symbols:
        - symbol: symbol
          country_code: country_code
          participants_type: participants_type
          route: route
        - symbol: symbol
          country_code: country_code
          participants_type: participants_type
          route: route
        features:
        - features
        - features
        cors_allowed_origins:
        - cors_allowed_origins
        - cors_allowed_origins
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        organization_guid: organization_guid
        type: type
        supported_trading_symbols:
        - supported_trading_symbols
        - supported_trading_symbols
        supported_fiat_account_assets:
        - supported_fiat_account_assets
        - supported_fiat_account_assets
        supported_country_codes:
        - supported_country_codes
        - supported_country_codes
      properties:
        guid:
          description: Auto-generated unique identifier for the bank.
          maxLength: 32
          minLength: 32
          type: string
        organization_guid:
          description: The organization's identifier.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The bank's name.
          maxLength: 128
          minLength: 1
          type: string
        type:
          description: The bank type; one of sandbox or production.
          type: string
        supported_trading_symbols:
          description: The bank's list of supported trading symbols.
          items:
            type: string
          type: array
        supported_payout_symbols:
          description: The bank's list of supported payout symbols.
          items:
            $ref: '#/components/schemas/Bank_supported_payout_symbols_inner'
          type: array
        supported_fiat_account_assets:
          description: The bank's list of supported fiat symbols.
          items:
            type: string
          type: array
        supported_country_codes:
          description: The bank's list of supported country codes.
          items:
            type: string
          type: array
        features:
          description: The bank's enabled features.
          items:
            description: "A combination of: kyc_identity_verifications, attestation_identity_records,\
              \ attestation_identity_records_v2, raw_routing_details, individual_customers,\
              \ business_customers, and counterparty_external_accounts."
            type: string
          type: array
        cors_allowed_origins:
          description: The bank's list of CORS allowed origins.
          items:
            type: string
          type: array
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
      required:
      - created_at
      - features
      - guid
      - name
      - organization_guid
      - type
      type: object
    BankType:
      enum:
      - sandbox
      - production
      type: string
    BankFeature:
      enum:
      - kyc_identity_verifications
      - attestation_identity_records
      - attestation_identity_records_v2
      - raw_routing_details
      - individual_customers
      - business_customers
      - counterparty_external_accounts
      type: string
    BankList:
      example:
        per_page: 0
        total: 0
        objects:
        - supported_payout_symbols:
          - symbol: symbol
            country_code: country_code
            participants_type: participants_type
            route: route
          - symbol: symbol
            country_code: country_code
            participants_type: participants_type
            route: route
          features:
          - features
          - features
          cors_allowed_origins:
          - cors_allowed_origins
          - cors_allowed_origins
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          organization_guid: organization_guid
          type: type
          supported_trading_symbols:
          - supported_trading_symbols
          - supported_trading_symbols
          supported_fiat_account_assets:
          - supported_fiat_account_assets
          - supported_fiat_account_assets
          supported_country_codes:
          - supported_country_codes
          - supported_country_codes
        - supported_payout_symbols:
          - symbol: symbol
            country_code: country_code
            participants_type: participants_type
            route: route
          - symbol: symbol
            country_code: country_code
            participants_type: participants_type
            route: route
          features:
          - features
          - features
          cors_allowed_origins:
          - cors_allowed_origins
          - cors_allowed_origins
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          organization_guid: organization_guid
          type: type
          supported_trading_symbols:
          - supported_trading_symbols
          - supported_trading_symbols
          supported_fiat_account_assets:
          - supported_fiat_account_assets
          - supported_fiat_account_assets
          supported_country_codes:
          - supported_country_codes
          - supported_country_codes
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of bank entities
          items:
            $ref: '#/components/schemas/Bank'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Counterparty:
      example:
        address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        aliases:
        - middle: middle
          last: last
          first: first
          full: full
        - middle: middle
          last: last
          first: first
          full: full
        date_of_birth: 2000-01-23
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
        compliance_decisions:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        labels:
        - labels
        - labels
        updated_at: 2000-01-23T04:56:07.000+00:00
        name:
          middle: middle
          last: last
          first: first
          full: full
        guid: guid
        state: state
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the counterparty.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The counterparty type; one of business or individual.
          type: string
        bank_guid:
          description: Auto-generated unique identifier for the counterparty's bank.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: Auto-generated unique identifier for the counterparty's customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The counterparty state; one of storing, unverified, verified,\
            \ or rejected."
          type: string
        name:
          $ref: '#/components/schemas/Counterparty_name'
        address:
          $ref: '#/components/schemas/Counterparty_address'
        aliases:
          description: The counterparty's aliases. Only available for GET operations
            when 'include_pii' is set.
          items:
            $ref: '#/components/schemas/Counterparty_aliases_inner'
          nullable: true
          type: array
        date_of_birth:
          description: The counterparty's DOB. Only available for GET operations when
            'include_pii' is set.
          format: date
          nullable: true
          type: string
        labels:
          description: The labels associated with the counterparty.
          items:
            type: string
          nullable: true
          type: array
        compliance_decisions:
          description: The compliance decisions associated with the counterparty.
          items:
            $ref: '#/components/schemas/ComplianceDecision'
          type: array
      type: object
    CounterpartyType:
      enum:
      - business
      - individual
      type: string
    CounterpartyState:
      enum:
      - storing
      - unverified
      - verified
      - rejected
      type: string
    CounterpartyList:
      example:
        per_page: 0
        total: 0
        objects:
        - address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          state: state
          bank_guid: bank_guid
          customer_guid: customer_guid
        - address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          state: state
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Counterparty'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Customer:
      example:
        website: website
        address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        aliases:
        - middle: middle
          last: last
          first: first
          full: full
        - middle: middle
          last: last
          first: first
          full: full
        date_of_birth: 2000-01-23
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
        compliance_decisions:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        identification_numbers:
        - identification_number: identification_number
          issuing_country_code: issuing_country_code
          type: type
        - identification_number: identification_number
          issuing_country_code: issuing_country_code
          type: type
        labels:
        - labels
        - labels
        email_address: email_address
        updated_at: 2000-01-23T04:56:07.000+00:00
        name:
          middle: middle
          last: last
          first: first
          full: full
        guid: guid
        phone_number: phone_number
        state: state
        activity_limits:
        - amount: 5
          activities:
          - activities
          - activities
          name: name
          interval: 5
          asset: asset
        - amount: 5
          activities:
          - activities
          - activities
          name: name
          interval: 5
          asset: asset
        bank_guid: bank_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the customer.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: Auto-generated unique identifier for the customer's bank.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The customer type; one of business or individual.
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The customer state; one of storing, unverified, verified,\
            \ rejected, or frozen."
          type: string
        name:
          $ref: '#/components/schemas/Customer_name'
        address:
          $ref: '#/components/schemas/Customer_address'
        aliases:
          description: The customer's aliases. Only available for GET operations when
            'include_pii' is set.
          items:
            $ref: '#/components/schemas/Customer_aliases_inner'
          nullable: true
          type: array
        website:
          description: The customer's website. Only available for GET operations when
            'include_pii' is set.
          nullable: true
          type: string
        date_of_birth:
          description: The customer's DOB. Only available for GET operations when
            'include_pii' is set.
          format: date
          nullable: true
          type: string
        phone_number:
          description: The customer's phone number. Only available for GET operations
            when 'include_pii' is set.
          nullable: true
          type: string
        email_address:
          description: The customer's email address. Only available for GET operations
            when 'include_pii' is set.
          nullable: true
          type: string
        labels:
          description: The labels associated with the customer.
          items:
            type: string
          nullable: true
          type: array
        compliance_decisions:
          description: The compliance decisions associated with the customer.
          items:
            $ref: '#/components/schemas/ComplianceDecision'
          type: array
        identification_numbers:
          description: The customer's identification numbers. Only available for GET
            operations when 'include_pii' is set and bank has access.
          items:
            $ref: '#/components/schemas/IdentificationNumber'
          nullable: true
          type: array
        activity_limits:
          description: The asset limits associated with the customer.
          items:
            $ref: '#/components/schemas/ActivityLimit'
          type: array
      type: object
    CustomerType:
      enum:
      - business
      - individual
      type: string
    CustomerState:
      enum:
      - storing
      - unverified
      - verified
      - rejected
      - frozen
      type: string
    CustomerList:
      example:
        per_page: 0
        total: 0
        objects:
        - website: website
          address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          identification_numbers:
          - identification_number: identification_number
            issuing_country_code: issuing_country_code
            type: type
          - identification_number: identification_number
            issuing_country_code: issuing_country_code
            type: type
          labels:
          - labels
          - labels
          email_address: email_address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          phone_number: phone_number
          state: state
          activity_limits:
          - amount: 5
            activities:
            - activities
            - activities
            name: name
            interval: 5
            asset: asset
          - amount: 5
            activities:
            - activities
            - activities
            name: name
            interval: 5
            asset: asset
          bank_guid: bank_guid
        - website: website
          address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          aliases:
          - middle: middle
            last: last
            first: first
            full: full
          - middle: middle
            last: last
            first: first
            full: full
          date_of_birth: 2000-01-23
          created_at: 2000-01-23T04:56:07.000+00:00
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          identification_numbers:
          - identification_number: identification_number
            issuing_country_code: issuing_country_code
            type: type
          - identification_number: identification_number
            issuing_country_code: issuing_country_code
            type: type
          labels:
          - labels
          - labels
          email_address: email_address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name:
            middle: middle
            last: last
            first: first
            full: full
          guid: guid
          phone_number: phone_number
          state: state
          activity_limits:
          - amount: 5
            activities:
            - activities
            - activities
            name: name
            interval: 5
            asset: asset
          - amount: 5
            activities:
            - activities
            - activities
            name: name
            interval: 5
            asset: asset
          bank_guid: bank_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    IdentityVerification:
      example:
        counterparty_guid: counterparty_guid
        failure_codes:
        - failure_codes
        - failure_codes
        method: method
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        external_bank_account_guid: external_bank_account_guid
        state: state
        type: type
        compliance_decisions:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        outcome: outcome
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The identity verification type; one of kyc, bank_account,\
            \ or counterparty."
          type: string
        method:
          description: "The identity verification method; one of attested, document_submission,\
            \ id_and_selfie, tax_id_and_selfie, business_registration, attested_id_and_selfie,\
            \ attested_business_registration, watchlists, attested_ownership, or account_ownership."
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        customer_guid:
          description: The customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        counterparty_guid:
          description: The counterparty's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        external_bank_account_guid:
          description: The external bank account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        state:
          description: "The identity verification state; one of storing, waiting,\
            \ pending, reviewing, expired, or completed."
          type: string
        outcome:
          description: The identity verification outcome; one of passed or failed.
          nullable: true
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
        compliance_decisions:
          description: The compliance decisions associated with the identity verification.
          items:
            $ref: '#/components/schemas/ComplianceDecision'
          type: array
      type: object
    IdentityVerificationType:
      enum:
      - kyc
      - bank_account
      - counterparty
      type: string
    IdentityVerificationMethod:
      enum:
      - attested
      - document_submission
      - id_and_selfie
      - tax_id_and_selfie
      - business_registration
      - attested_id_and_selfie
      - attested_business_registration
      - watchlists
      - attested_ownership
      - account_ownership
      type: string
    IdentityVerificationState:
      enum:
      - storing
      - waiting
      - pending
      - reviewing
      - expired
      - completed
      type: string
    IdentityVerificationPersonaState:
      enum:
      - waiting
      - pending
      - reviewing
      - processing
      - expired
      - completed
      - unknown
      type: string
    IdentityVerificationOutcome:
      enum:
      - passed
      - failed
      type: string
    IdentityVerificationWithDetails:
      example:
        counterparty_guid: counterparty_guid
        failure_codes:
        - failure_codes
        - failure_codes
        method: method
        created_at: 2000-01-23T04:56:07.000+00:00
        type: type
        compliance_decisions:
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        - failure_codes:
          - failure_codes
          - failure_codes
          state: state
          type: type
        persona_state: persona_state
        pii:
          address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          email_address: email_address
          date_of_birth: 2000-01-23
          name:
            middle: middle
            last: last
            first: first
            full: full
          phone_number: phone_number
        updated_at: 2000-01-23T04:56:07.000+00:00
        persona_inquiry_id: persona_inquiry_id
        guid: guid
        external_bank_account_guid: external_bank_account_guid
        state: state
        compliance_checks:
        - failure_codes:
          - failure_codes
          - failure_codes
          type: type
          outcome: outcome
        - failure_codes:
          - failure_codes
          - failure_codes
          type: type
          outcome: outcome
        outcome: outcome
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The identity verification type; one of kyc, bank_account,\
            \ or counterparty."
          type: string
        method:
          description: "The identity verification method; one of attested, document_submission,\
            \ id_and_selfie, tax_id_and_selfie, business_registration, attested_id_and_selfie,\
            \ attested_business_registration, watchlists, attested_ownership, or account_ownership."
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        customer_guid:
          description: The identity verification's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        counterparty_guid:
          description: The identity verification's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        external_bank_account_guid:
          description: The identity verification's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        state:
          description: "The identity verification state; one of storing, waiting,\
            \ pending, reviewing, expired, or completed."
          type: string
        outcome:
          description: The identity verification outcome; one of passed or failed.
          nullable: true
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
        compliance_checks:
          description: The compliance checks associated with the identity verification.
          items:
            $ref: '#/components/schemas/ComplianceCheck'
          type: array
        compliance_decisions:
          description: The compliance decisions associated with the identity verification.
          items:
            $ref: '#/components/schemas/ComplianceDecision'
          type: array
        persona_inquiry_id:
          description: The Persona identifier of the backing inquiry.
          nullable: true
          type: string
        persona_state:
          description: "The Persona state of the backing inquiry; one of waiting,\
            \ pending, reviewing, processing, expired, completed, or unknown."
          nullable: true
          type: string
        pii:
          $ref: '#/components/schemas/IdentityVerificationWithDetails_pii'
      type: object
    IdentityVerificationList:
      example:
        per_page: 0
        total: 0
        objects:
        - counterparty_guid: counterparty_guid
          failure_codes:
          - failure_codes
          - failure_codes
          method: method
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          external_bank_account_guid: external_bank_account_guid
          state: state
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          outcome: outcome
          customer_guid: customer_guid
        - counterparty_guid: counterparty_guid
          failure_codes:
          - failure_codes
          - failure_codes
          method: method
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          external_bank_account_guid: external_bank_account_guid
          state: state
          type: type
          compliance_decisions:
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          - failure_codes:
            - failure_codes
            - failure_codes
            state: state
            type: type
          outcome: outcome
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/IdentityVerification'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ComplianceCheck:
      example:
        failure_codes:
        - failure_codes
        - failure_codes
        type: type
        outcome: outcome
      properties:
        type:
          description: "The type of compliance check; one of business_watchlists,\
            \ business_verification, business_tax_id_verification, business_attested,\
            \ person_attested, person_tax_id_attested, person_watchlists, person_verification,\
            \ person_authentication, person_gov_id_verification, person_tax_id_verification,\
            \ external_bank_account_verification, or external_bank_account_attested."
          type: string
        outcome:
          description: "The outcome of the compliance check; one of passed, failed,\
            \ or inconclusive."
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
      required:
      - outcome
      - type
      type: object
    ComplianceCheckType:
      enum:
      - business_watchlists
      - business_verification
      - business_tax_id_verification
      - business_attested
      - person_attested
      - person_tax_id_attested
      - person_watchlists
      - person_verification
      - person_authentication
      - person_gov_id_verification
      - person_tax_id_verification
      - external_bank_account_verification
      - external_bank_account_attested
      type: string
    ComplianceCheckOutcome:
      enum:
      - passed
      - failed
      - inconclusive
      type: string
    ComplianceDecision:
      example:
        failure_codes:
        - failure_codes
        - failure_codes
        state: state
        type: type
      properties:
        type:
          description: "The type of verification check; one of business_watchlists,\
            \ business_verification, business_tax_id_verification, business_attested,\
            \ person_attested, person_tax_id_attested, person_watchlists, person_verification,\
            \ person_authentication, person_gov_id_verification, person_tax_id_verification,\
            \ external_bank_account_verification, or external_bank_account_attested."
          type: string
        state:
          description: "The state of the verification check; one of passed, failed,\
            \ expired, or invalidated."
          type: string
        failure_codes:
          description: The reason codes explaining the outcome.
          items:
            type: string
          nullable: true
          type: array
      required:
      - state
      - type
      type: object
    ComplianceDecisionType:
      enum:
      - business_watchlists
      - business_verification
      - business_tax_id_verification
      - business_attested
      - person_attested
      - person_tax_id_attested
      - person_watchlists
      - person_verification
      - person_authentication
      - person_gov_id_verification
      - person_tax_id_verification
      - external_bank_account_verification
      - external_bank_account_attested
      type: string
    ComplianceDecisionState:
      enum:
      - passed
      - failed
      - expired
      - invalidated
      type: string
    PostDepositBankAccount:
      description: Request body for deposit bank account creation.
      properties:
        type:
          description: The account type. To generate deposit bank accounts with their
            own unique account number set this to "main". To generate deposit bank
            accounts with the same account number as the parent deposit bank account
            set this to "sub_account". This setting will only generate a unique identifier
            for the deposit bank and will not result in a unique account number being
            generated. "sub_account" is only  available for customer-level deposit
            bank accounts.
          enum:
          - main
          - sub_account
          type: string
        account_guid:
          description: The fiat account guid.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        parent_deposit_bank_account_guid:
          description: The unique identifier for the bank-level deposit bank account.
            This is only required for sub-accounts. Required when type is sub_account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        labels:
          description: The labels associated with the bank account.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - account_guid
      - type
      type: object
    PostInvoice:
      description: Request body for invoice creation.
      properties:
        asset:
          description: The asset code the customer will receive the funds in.
          maxLength: 8
          minLength: 1
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the asset, i.e.,\
            \ the amount the customer will receive after fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the asset, i.e.,\
            \ the amount the customer will receive before fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        account_guid:
          description: The identifier for the account to use for the transfer. Required
            if the customer has multiple fiat accounts. Currently only valid for invoices
            paid to a fiat account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        labels:
          description: The labels associated with the invoice.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - asset
      type: object
    PostPaymentInstruction:
      description: Request body for payment instruction creation.
      properties:
        invoice_guid:
          description: The invoice guid.
          maxLength: 32
          type: string
        expected_behaviour:
          description: The optional expected behaviour to simulate.
          enum:
          - invoice_paid_immediately
          nullable: true
          type: string
      required:
      - invoice_guid
      type: object
    Invoice:
      example:
        account_guid: account_guid
        updated_at: 2000-01-23T04:56:07.000+00:00
        fee: 2
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        receive_amount: 5
        state: state
        type: type
        asset: asset
        customer_guid: customer_guid
        deliver_amount: 5
        labels:
        - labels
        - labels
      properties:
        guid:
          description: Auto-generated unique identifier for the payment instruction.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The account payment will ultimately be received into.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        type:
          description: The type of invoice; one of lightning.
          type: string
        asset:
          description: The asset code the customer will receive the funds in.
          maxLength: 8
          minLength: 1
          type: string
        receive_amount:
          description: "The amount to be received in base units of the asset, i.e.,\
            \ the amount the customer will receive after fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the asset, i.e.,\
            \ the amount the customer will receive before fees. ONLY one of receive_amount\
            \ or deliver_amount is required."
          nullable: true
          type: integer
        fee:
          description: The fee associated with this invoice in base units of the asset.
          nullable: true
          type: integer
        state:
          description: "The state of the invoice; one of storing, unpaid, cancelling,\
            \ cancelled, settling, or paid."
          type: string
        labels:
          description: The labels associated with the invoice.
          items:
            type: string
          nullable: true
          type: array
      type: object
    InvoiceList:
      example:
        per_page: 0
        total: 0
        objects:
        - account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 2
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          receive_amount: 5
          state: state
          type: type
          asset: asset
          customer_guid: customer_guid
          deliver_amount: 5
          labels:
          - labels
          - labels
        - account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          fee: 2
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          receive_amount: 5
          state: state
          type: type
          asset: asset
          customer_guid: customer_guid
          deliver_amount: 5
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Invoice'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    PaymentInstruction:
      example:
        expected_payment_amount: 5
        failure_code: failure_code
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        network_address: network_address
        invoice_guid: invoice_guid
        expired_at: 2000-01-23T04:56:07.000+00:00
        failed_at: 2000-01-23T04:56:07.000+00:00
        state: state
        expected_payment_asset: expected_payment_asset
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the payment instruction.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        invoice_guid:
          description: The invoice identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        expired_at:
          description: ISO8601 datetime the instructions expired at.
          format: date-time
          nullable: true
          type: string
        failed_at:
          description: ISO8601 datetime the instructions failed to be created at.
          format: date-time
          nullable: true
          type: string
        network_address:
          description: The network address to pay the invoice to.
          nullable: true
          type: string
        expected_payment_asset:
          description: "The asset the payor must pay the invoice in, e.g., BTC."
          nullable: true
          type: string
        expected_payment_amount:
          description: The amount to be paid in base units of expected_payment_asset.
          nullable: true
          type: integer
        failure_code:
          description: "The reason code explaining the failure; ond of invoice_paid,\
            \ invoice_cancelled, or invalid_amount."
          nullable: true
          type: string
        state:
          description: "The state of the payment instruction; one of storing, created,\
            \ expired, or failed."
          type: string
      type: object
    PaymentInstructionList:
      example:
        per_page: 0
        total: 0
        objects:
        - expected_payment_amount: 5
          failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          network_address: network_address
          invoice_guid: invoice_guid
          expired_at: 2000-01-23T04:56:07.000+00:00
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: state
          expected_payment_asset: expected_payment_asset
          customer_guid: customer_guid
        - expected_payment_amount: 5
          failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          network_address: network_address
          invoice_guid: invoice_guid
          expired_at: 2000-01-23T04:56:07.000+00:00
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: state
          expected_payment_asset: expected_payment_asset
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/PaymentInstruction'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    DepositBankAccount:
      example:
        counterparty_name: counterparty_name
        routing_details:
        - routing_number_type: routing_number_type
          routing_number: routing_number
        - routing_number_type: routing_number_type
          routing_number: routing_number
        created_at: 2000-01-23T04:56:07.000+00:00
        account_details:
        - account_number: account_number
        - account_number: account_number
        type: type
        labels:
        - labels
        - labels
        counterparty_address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        account_guid: account_guid
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        state: state
        parent_deposit_bank_account_guid: parent_deposit_bank_account_guid
        asset: asset
        unique_memo_id: unique_memo_id
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The account type; one of main or sub_account.
          type: string
        bank_guid:
          description: The address' bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The address' customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The address' account identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        state:
          description: The state of the address; one of storing or created.
          type: string
        unique_memo_id:
          description: The unique memo identifier for the address. This is used to
            identify the recipient when sending funds to the account. This value MUST
            be included in all wire transfers to this account.
          type: string
        counterparty_name:
          description: The name of the account holder.
          nullable: true
          type: string
        counterparty_address:
          $ref: '#/components/schemas/DepositBankAccount_counterparty_address'
        account_details:
          description: The account details for the bank account.
          items:
            $ref: '#/components/schemas/DepositBankAccount_account_details_inner'
          nullable: true
          type: array
        routing_details:
          description: The account details for the bank account.
          items:
            $ref: '#/components/schemas/DepositBankAccount_routing_details_inner'
          nullable: true
          type: array
        parent_deposit_bank_account_guid:
          description: The unique identifier for the bank-level deposit bank account.
            This is only set for sub-accounts.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      type: object
    DepositBankAccountState:
      enum:
      - storing
      - created
      type: string
    DepositBankAccountRoutingNumberType:
      enum:
      - CPA
      - ABA
      - SWIFT
      type: string
    DepositBankAccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - counterparty_name: counterparty_name
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          created_at: 2000-01-23T04:56:07.000+00:00
          account_details:
          - account_number: account_number
          - account_number: account_number
          type: type
          labels:
          - labels
          - labels
          counterparty_address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          state: state
          parent_deposit_bank_account_guid: parent_deposit_bank_account_guid
          asset: asset
          unique_memo_id: unique_memo_id
          bank_guid: bank_guid
          customer_guid: customer_guid
        - counterparty_name: counterparty_name
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          created_at: 2000-01-23T04:56:07.000+00:00
          account_details:
          - account_number: account_number
          - account_number: account_number
          type: type
          labels:
          - labels
          - labels
          counterparty_address:
            subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          account_guid: account_guid
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          state: state
          parent_deposit_bank_account_guid: parent_deposit_bank_account_guid
          asset: asset
          unique_memo_id: unique_memo_id
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/DepositBankAccount'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    DepositAddress:
      example:
        account_guid: account_guid
        address: address
        updated_at: 2000-01-23T04:56:07.000+00:00
        format: format
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        state: state
        tag: tag
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
        labels:
        - labels
        - labels
      properties:
        guid:
          description: Auto-generated unique identifier for the identity verification.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: The address' bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The address' customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        account_guid:
          description: The address' account identifier.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        state:
          description: The state of the address; one of storing or created.
          type: string
        address:
          description: The blockchain address.
          type: string
        format:
          description: The blockchain address format; one of standard or legacy.
          type: string
        tag:
          description: The blockchain address tag.
          type: string
        labels:
          description: The labels associated with the address.
          items:
            type: string
          nullable: true
          type: array
      type: object
    DepositAddressState:
      enum:
      - storing
      - created
      type: string
    DepositAddressFormat:
      enum:
      - standard
      - legacy
      type: string
    DepositAddressList:
      example:
        per_page: 0
        total: 0
        objects:
        - account_guid: account_guid
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          format: format
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          tag: tag
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        - account_guid: account_guid
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          format: format
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          tag: tag
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/DepositAddress'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    SymbolPrice:
      example:
        symbol: symbol
        country_code: country_code
        participants_type: participants_type
        route: route
        sell_price: 6
        sell_price_last_updated_at: 2000-01-23T04:56:07.000+00:00
        buy_price: 0
        buy_price_last_updated_at: 2000-01-23T04:56:07.000+00:00
        type: type
      properties:
        symbol:
          description: "The trade symbol the pricing is related to. Format is asset-counter_asset,\
            \ e.g., BTC-USD."
          maxLength: 16
          minLength: 1
          type: string
        type:
          description: The type of price; one of trading or payout.
          nullable: true
          type: string
        buy_price:
          description: The purchase price (in base units) for the asset denominated
            in the counter asset currency.
          nullable: true
          type: integer
        sell_price:
          description: The sale price (in base units) for the asset denominated in
            the counter asset currency.
          nullable: true
          type: integer
        buy_price_last_updated_at:
          description: ISO8601 datetime the purchase price was generated at.
          format: date-time
          nullable: true
          type: string
        sell_price_last_updated_at:
          description: ISO8601 datetime the sale price was generated at.
          format: date-time
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the price.
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
        participants_type:
          description: "The type of participants the price is for; one of C2C, C2B,\
            \ B2C, or B2B."
          nullable: true
          type: string
        route:
          description: The route the price is for; one of bank_account or mobile_wallet.
          nullable: true
          type: string
      type: object
    SymbolPriceResponse:
      description: Array of SymbolPrice entities
      items:
        $ref: '#/components/schemas/SymbolPrice'
      type: array
    PostQuote:
      description: Request body for quote creation.
      properties:
        product_type:
          default: trading
          description: The type of product the quote is for.
          enum:
          - trading
          - trading_exit
          - funding
          - crypto_transfer
          - inter_account
          - lightning_transfer
          - book_transfer
          nullable: true
          type: string
        bank_guid:
          description: The unique identifier for the bank.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell for trade quotes."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell for trade\
            \ quotes."
          nullable: true
          type: integer
        asset:
          description: "The asset code the quote was requested for. Required when\
            \ product_type is lightning_transfer, product_type is book_transfer, product_type\
            \ is funding, product_type is crypto_transfer, or product_type is inter_account."
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_address:
          description: The network address to pay the invoice to. Required when product_type
            is lightning_transfer.
          maxLength: 512
          nullable: true
          type: string
        fees:
          description: "The custom fees associated with the quote Optional when product_type\
            \ is lightning_transfer, product_type is funding, product_type is trading,\
            \ product_type is crypto_transfer, or product_type is trading_exit."
          items:
            $ref: '#/components/schemas/PostFee'
          maxItems: 2
          minItems: 0
          nullable: true
          type: array
        side:
          description: "The direction for trade quotes: either 'buy' or 'sell'. The\
            \ direction for funding quotes: either 'deposit' or 'withdrawal'. The\
            \ direction for crypto transfer quotes: 'withdrawal'. Book transfers do\
            \ not require a side. They are all 'deposit's.  Required when product_type\
            \ is funding, product_type is trading, or product_type is crypto_transfer."
          enum:
          - deposit
          - withdrawal
          - buy
          - sell
          nullable: true
          type: string
        symbol:
          description: Symbol the quote is being requested for. Format is "asset-counter_asset"
            in uppercase. See the Symbols API for a complete list of cryptocurrencies
            supported.  Required when product_type is trading.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        destination_accounts:
          description: Destination accounts for batch transactions Optional when product_type
            is crypto_transfer.
          items:
            $ref: '#/components/schemas/PostQuoteEntry'
          maxItems: 100
          minItems: 1
          nullable: true
          type: array
        reference_trade_guid:
          description: The guid of the related trade. Only present on `exit` trades.
            Required when product_type is trading_exit.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        source_account_guid:
          description: The source account's identifier. Required when product_type
            is inter_account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        destination_account_guid:
          description: The destination account's identifier. Required when product_type
            is inter_account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    PostQuoteEntry:
      description: Request body for quote account creation.
      properties:
        type:
          description: The type of account
          enum:
          - external_wallet
          type: string
        guid:
          description: The guid of the account
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell for trade quotes."
          nullable: true
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell for trade\
            \ quotes."
          nullable: true
          type: integer
      required:
      - guid
      - type
      type: object
    PostFee:
      description: Request body for fee creation.
      properties:
        type:
          description: The fee's type
          enum:
          - spread
          - fixed
          type: string
        spread_fee:
          description: "The percentage amount, in basis points, to apply when charging\
            \ a fee. Required when type is spread."
          nullable: true
          type: integer
        fixed_fee:
          description: "The fixed amount to apply when charging a fee; for trades,\
            \ the fiat asset is used. Required when type is fixed."
          nullable: true
          type: integer
      required:
      - type
      type: object
    Quote:
      example:
        symbol: symbol
        side: side
        trade_guid: trade_guid
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        network_fee: 7
        issued_at: 2000-01-23T04:56:07.000+00:00
        network_fee_asset: network_fee_asset
        deliver_amount: 5
        entries:
        - fee: 2
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          receive_amount: 9
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          deliver_amount: 3
        - fee: 2
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          receive_amount: 9
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          deliver_amount: 3
        transfer_guid: transfer_guid
        product_type: product_type
        expires_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        network_address: network_address
        receive_amount: 5
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the quote.
          maxLength: 32
          minLength: 32
          type: string
        product_type:
          description: "The type of product the quote is for; one of trading, trading_exit,\
            \ funding, crypto_transfer, inter_account, or lightning_transfer."
          type: string
        bank_guid:
          description: The unique identifier for the bank.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The unique identifier for the customer.
          maxLength: 32
          minLength: 32
          type: string
        symbol:
          description: Symbol the quote was requested for. Format is "asset-counter_asset"
            in uppercase. Populated for trade quotes.
          maxLength: 16
          minLength: 1
          nullable: true
          type: string
        side:
          description: "The direction of the quote; one of buy, sell, deposit, or\
            \ withdrawal."
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell for trade quotes."
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell for trade\
            \ quotes."
          type: integer
        fee:
          description: The fee associated with the trade. Denominated in "counter_asset"
            base units for trade quotes.
          type: integer
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        issued_at:
          description: ISO8601 datetime the quote was created at.
          format: date-time
          type: string
        expires_at:
          description: ISO8601 datetime the quote is expiring at. Populated for trading
            quotes.
          format: date-time
          nullable: true
          type: string
        asset:
          description: The asset code the quote was requested for. Populated for book
            transfer and funding quotes.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_fee:
          description: The network fee in base units of network_fee_asset. Only present
            on `crypto_transfer` quotes.
          nullable: true
          type: integer
        network_fee_asset:
          description: The asset code of the network fee.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_address:
          description: The network address to pay the invoice to. Populated for lightning_transfer
            quotes.
          nullable: true
          type: string
        entries:
          description: The quote entries for a batch transfer quote
          items:
            $ref: '#/components/schemas/QuoteEntry'
          nullable: true
          type: array
        trade_guid:
          description: The unique identifier for the trade.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        transfer_guid:
          description: The unique identifier for the transfer.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    QuoteEntry:
      example:
        fee: 2
        source_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        receive_amount: 9
        destination_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        deliver_amount: 3
      properties:
        source_account:
          $ref: '#/components/schemas/QuoteEntry_source_account'
        destination_account:
          $ref: '#/components/schemas/QuoteEntry_destination_account'
        receive_amount:
          description: The amount to be received in base units of the currency
          type: integer
        deliver_amount:
          description: The amount to be delivered in base units of the currency
          type: integer
        fee:
          description: The fee associated with the account entry.
          type: integer
      type: object
    QuoteType:
      enum:
      - trading
      - trading_exit
      - funding
      - crypto_transfer
      - inter_account
      - lightning_transfer
      type: string
    QuoteSide:
      enum:
      - buy
      - sell
      - deposit
      - withdrawal
      type: string
    QuoteList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          side: side
          trade_guid: trade_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          network_fee: 7
          issued_at: 2000-01-23T04:56:07.000+00:00
          network_fee_asset: network_fee_asset
          deliver_amount: 5
          entries:
          - fee: 2
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            receive_amount: 9
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            deliver_amount: 3
          - fee: 2
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            receive_amount: 9
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            deliver_amount: 3
          transfer_guid: transfer_guid
          product_type: product_type
          expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          network_address: network_address
          receive_amount: 5
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - symbol: symbol
          side: side
          trade_guid: trade_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          network_fee: 7
          issued_at: 2000-01-23T04:56:07.000+00:00
          network_fee_asset: network_fee_asset
          deliver_amount: 5
          entries:
          - fee: 2
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            receive_amount: 9
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            deliver_amount: 3
          - fee: 2
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            receive_amount: 9
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            deliver_amount: 3
          transfer_guid: transfer_guid
          product_type: product_type
          expires_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          network_address: network_address
          receive_amount: 5
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          items:
            $ref: '#/components/schemas/Quote'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Symbols:
      description: The list of symbols supported for trading.
      items:
        type: string
      type: array
    Workflow:
      example:
        failure_code: failure_code
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        state: state
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the workflow.
          maxLength: 32
          minLength: 32
          type: string
        bank_guid:
          description: The associated banks's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The associated customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        type:
          description: The type of workflow; one of plaid.
          type: string
        state:
          description: "The state of the workflow; one of storing, completed, or failed."
          type: string
        failure_code:
          description: The failure code for failed workflows.
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
      type: object
    WorkflowType:
      enum:
      - plaid
      type: string
    WorkflowState:
      enum:
      - storing
      - completed
      - failed
      type: string
    WorkflowWithDetails:
      allOf:
      - $ref: '#/components/schemas/Workflow'
      - $ref: '#/components/schemas/WorkflowWithDetails_allOf'
    Transfer:
      example:
        transfer_details: "{}"
        quote_guid: quote_guid
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        source_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        payment_rail: payment_rail
        network_fee_asset: network_fee_asset
        network_fee_liability_amount_asset: network_fee_liability_amount_asset
        updated_at: 2000-01-23T04:56:07.000+00:00
        txn_hash: txn_hash
        source_participants:
        - amount: 2
          guid: guid
          type: type
        - amount: 2
          guid: guid
          type: type
        state: state
        bank_guid: bank_guid
        destination_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        side: side
        failure_code: failure_code
        amount: 5
        network_fee_liability_amount: 3
        network_fee: 9
        reference_transfer_guid: reference_transfer_guid
        labels:
        - labels
        - labels
        entries:
        - amount: 4
          fee: 7
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
        - amount: 4
          fee: 7
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
        estimated_amount: 5
        guid: guid
        external_bank_account_guid: external_bank_account_guid
        destination_participants:
        - amount: 2
          guid: guid
          type: type
        - amount: 2
          guid: guid
          type: type
        transfer_type: transfer_type
        asset: asset
        return_code: return_code
        estimated_network_fee: 7
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer.
          maxLength: 32
          minLength: 32
          type: string
        transfer_type:
          description: "The type of transfer; one of funding, book, crypto, instant_funding,\
            \ funding_return, crypto_return, loss_recovery, inter_account, lightning,\
            \ or instant_funding_return."
          type: string
        bank_guid:
          description: The associated bank's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The associated customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        external_bank_account_guid:
          description: The associated external bank account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: "The asset the transfer is related to, e.g., USD."
          type: string
        side:
          description: The direction of the quote; one of deposit or withdrawal.
          type: string
        state:
          description: "The state of the transfer; one of storing, pending, reviewing,\
            \ completed, or failed."
          type: string
        failure_code:
          description: "The failure code for failed transfers; one of non_sufficient_funds,\
            \ refresh_required, party_name_invalid, payment_rail_invalid, compliance_rejection,\
            \ cancelled, reversed, limit_exceeded, network_fee_too_low, amount_too_low,\
            \ internal_error, or invalid_address."
          nullable: true
          type: string
        return_code:
          description: The return code for reversed transfers
          nullable: true
          type: string
        amount:
          description: The actual amount in base units of the asset.
          nullable: true
          type: integer
        estimated_amount:
          description: The estimated amount in base units of the asset.
          type: integer
        fee:
          description: The fee associated with the transfer.
          type: integer
        estimated_network_fee:
          description: The estimated network fee in base units of network_fee_asset.
            Only present on `crypto` transfers.
          nullable: true
          type: integer
        network_fee:
          description: The actual network fee in base units of network_fee_asset.
            Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: integer
        network_fee_asset:
          description: The asset code of the network fee. Only present on `crypto`
            transfers that have successfully completed.
          maxLength: 8
          minLength: 1
          nullable: true
          type: string
        network_fee_liability_amount:
          description: The equivalent fiat network fee in base units of network_fee_liability_amount_asset.
            Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: integer
        network_fee_liability_amount_asset:
          description: The fiat asset the network_fee_liability_amount is denominated
            in. Only present on `crypto` transfers that have successfully completed.
          nullable: true
          type: string
        txn_hash:
          description: The hash of the blockchain transaction
          nullable: true
          type: string
        reference_transfer_guid:
          description: The guid of the related transfer. Only present on return type
            transfers.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        source_account:
          $ref: '#/components/schemas/Transfer_source_account'
        source_participants:
          description: The participants in the source account.
          items:
            $ref: '#/components/schemas/TransferParticipant'
          nullable: true
          type: array
        destination_account:
          $ref: '#/components/schemas/Transfer_destination_account'
        destination_participants:
          description: The participants in the source account.
          items:
            $ref: '#/components/schemas/TransferParticipant'
          nullable: true
          type: array
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        transfer_details:
          description: The raw details on the transfer from the bank.
          nullable: true
          type: object
        payment_rail:
          description: "The rail the payment was done on. One of: ach, eft, wire,\
            \ rtp"
          nullable: true
          type: string
        labels:
          description: The labels associated with the transfer.
          items:
            type: string
          nullable: true
          type: array
        entries:
          description: Transfer entries associated with the batch transfer
          items:
            $ref: '#/components/schemas/TransferEntry'
          nullable: true
          type: array
      type: object
    TransferEntry:
      example:
        amount: 4
        fee: 7
        source_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        destination_account:
          guid: guid
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
      properties:
        amount:
          description: The actual amount in base units of the asset.
          nullable: true
          type: integer
        fee:
          description: The fee associated with the transfer entry.
          type: integer
        source_account:
          $ref: '#/components/schemas/QuoteEntry_source_account'
        destination_account:
          $ref: '#/components/schemas/TransferEntry_destination_account'
      required:
      - amount
      - destination_account
      - fee
      - source_account
      type: object
    TransferParticipant:
      example:
        amount: 2
        guid: guid
        type: type
      properties:
        type:
          description: "The type of participant; one of unknown, bank, customer, or\
            \ counterparty."
          type: string
        amount:
          description: The amount in base units of the asset.
          type: integer
        guid:
          description: The participant's identifier.
          maxLength: 32
          minLength: 32
          type: string
      required:
      - amount
      - type
      type: object
    TransferType:
      enum:
      - funding
      - book
      - crypto
      - instant_funding
      - funding_return
      - crypto_return
      - loss_recovery
      - inter_account
      - lightning
      - instant_funding_return
      type: string
    TransferSide:
      enum:
      - deposit
      - withdrawal
      type: string
    TransferState:
      enum:
      - storing
      - pending
      - reviewing
      - completed
      - failed
      type: string
    TransferAccountType:
      enum:
      - trading
      - fiat
      - external_bank_account
      - external_wallet
      - one_time_address
      - reserve
      - invoice_operations
      - fee
      - gas
      - storage
      type: string
    TransferFailureCode:
      enum:
      - non_sufficient_funds
      - refresh_required
      - party_name_invalid
      - payment_rail_invalid
      - compliance_rejection
      - cancelled
      - reversed
      - limit_exceeded
      - network_fee_too_low
      - amount_too_low
      - internal_error
      - invalid_address
      type: string
    Trade:
      example:
        symbol: symbol
        side: side
        failure_code: failure_code
        quote_guid: quote_guid
        fee: 2
        created_at: 2000-01-23T04:56:07.000+00:00
        deliver_amount: 5
        labels:
        - labels
        - labels
        updated_at: 2000-01-23T04:56:07.000+00:00
        guid: guid
        trade_type: trade_type
        receive_amount: 5
        state: state
        customer_guid: customer_guid
        reference_trade_guid: reference_trade_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the trade.
          maxLength: 32
          minLength: 32
          type: string
        trade_type:
          description: "The type of trade; one of platform, liquidation, or exit."
          type: string
        customer_guid:
          description: The associated customer's identifier.
          nullable: true
          type: string
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        symbol:
          description: "The trade symbol the pricing is related to. Format is asset-counter_asset,\
            \ e.g., BTC-USD."
          type: string
        side:
          description: The direction of the trade; one of buy or sell.
          type: string
        state:
          description: "The state of the trade; one of storing, pending, cancelled,\
            \ completed, settling, or failed."
          type: string
        failure_code:
          description: "The failure code for failed trades; one of non_sufficient_funds,\
            \ unsupported, limit_exceeded, expired_quote, or market_volatility."
          nullable: true
          type: string
        receive_amount:
          description: "The amount to be received in base units of the currency: currency\
            \ is \"asset\" for buy and \"counter_asset\" for sell."
          type: integer
        deliver_amount:
          description: "The amount to be delivered in base units of the currency:\
            \ currency is \"counter_asset\" for buy and \"asset\" for sell."
          type: integer
        fee:
          description: The fee associated with the trade. Denominated in "counter_asset"
            base units
          type: integer
        reference_trade_guid:
          description: The guid of the related trade. Only present on `exit` trades.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        labels:
          description: The labels associated with the trade.
          items:
            type: string
          nullable: true
          type: array
      type: object
    TradeType:
      enum:
      - platform
      - liquidation
      - exit
      type: string
    TradeSide:
      enum:
      - buy
      - sell
      type: string
    TradeState:
      enum:
      - storing
      - pending
      - cancelled
      - completed
      - settling
      - failed
      type: string
    TradeFailureCode:
      enum:
      - non_sufficient_funds
      - unsupported
      - limit_exceeded
      - expired_quote
      - market_volatility
      type: string
    ExternalWalletList:
      example:
        per_page: 0
        total: 0
        objects:
        - environment: environment
          failure_code: failure_code
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          tag: tag
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - environment: environment
          failure_code: failure_code
          address: address
          updated_at: 2000-01-23T04:56:07.000+00:00
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          tag: tag
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of external wallet entities
          items:
            $ref: '#/components/schemas/ExternalWallet'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ExternalBankAccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - failure_code: failure_code
          balance_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          account_kind: account_kind
          plaid_account_mask: plaid_account_mask
          plaid_account_name: plaid_account_name
          pii:
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
            routing_details:
            - routing_number_type: routing_number_type
              routing_number: routing_number
            - routing_number_type: routing_number_type
              routing_number: routing_number
            account_details:
            - account_number: account_number
            - account_number: account_number
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
            routing_details:
            - routing_number_type: routing_number_type
              routing_number: routing_number
            - routing_number_type: routing_number_type
              routing_number: routing_number
            account_details:
            - account_number: account_number
            - account_number: account_number
          environment: environment
          balances:
            current: 0
            available: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          plaid_institution_id: plaid_institution_id
          name: name
          guid: guid
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        - failure_code: failure_code
          balance_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          account_kind: account_kind
          plaid_account_mask: plaid_account_mask
          plaid_account_name: plaid_account_name
          pii:
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
            routing_details:
            - routing_number_type: routing_number_type
              routing_number: routing_number
            - routing_number_type: routing_number_type
              routing_number: routing_number
            account_details:
            - account_number: account_number
            - account_number: account_number
          - email_addresses:
            - email_addresses
            - email_addresses
            phone_numbers:
            - phone_numbers
            - phone_numbers
            addresses:
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            - subdivision: subdivision
              country_code: country_code
              city: city
              street: street
              street2: street2
              postal_code: postal_code
            names:
            - names
            - names
            routing_details:
            - routing_number_type: routing_number_type
              routing_number: routing_number
            - routing_number_type: routing_number_type
              routing_number: routing_number
            account_details:
            - account_number: account_number
            - account_number: account_number
          environment: environment
          balances:
            current: 0
            available: 0
          updated_at: 2000-01-23T04:56:07.000+00:00
          plaid_institution_id: plaid_institution_id
          name: name
          guid: guid
          state: state
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of external bank account entities
          items:
            $ref: '#/components/schemas/ExternalBankAccount'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    TransferList:
      example:
        per_page: 0
        total: 0
        objects:
        - transfer_details: "{}"
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          payment_rail: payment_rail
          network_fee_asset: network_fee_asset
          network_fee_liability_amount_asset: network_fee_liability_amount_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          txn_hash: txn_hash
          source_participants:
          - amount: 2
            guid: guid
            type: type
          - amount: 2
            guid: guid
            type: type
          state: state
          bank_guid: bank_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          side: side
          failure_code: failure_code
          amount: 5
          network_fee_liability_amount: 3
          network_fee: 9
          reference_transfer_guid: reference_transfer_guid
          labels:
          - labels
          - labels
          entries:
          - amount: 4
            fee: 7
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
          - amount: 4
            fee: 7
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
          estimated_amount: 5
          guid: guid
          external_bank_account_guid: external_bank_account_guid
          destination_participants:
          - amount: 2
            guid: guid
            type: type
          - amount: 2
            guid: guid
            type: type
          transfer_type: transfer_type
          asset: asset
          return_code: return_code
          estimated_network_fee: 7
          customer_guid: customer_guid
        - transfer_details: "{}"
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          source_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          payment_rail: payment_rail
          network_fee_asset: network_fee_asset
          network_fee_liability_amount_asset: network_fee_liability_amount_asset
          updated_at: 2000-01-23T04:56:07.000+00:00
          txn_hash: txn_hash
          source_participants:
          - amount: 2
            guid: guid
            type: type
          - amount: 2
            guid: guid
            type: type
          state: state
          bank_guid: bank_guid
          destination_account:
            guid: guid
            type: type
            bank_guid: bank_guid
            customer_guid: customer_guid
          side: side
          failure_code: failure_code
          amount: 5
          network_fee_liability_amount: 3
          network_fee: 9
          reference_transfer_guid: reference_transfer_guid
          labels:
          - labels
          - labels
          entries:
          - amount: 4
            fee: 7
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
          - amount: 4
            fee: 7
            source_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
            destination_account:
              guid: guid
              type: type
              bank_guid: bank_guid
              customer_guid: customer_guid
          estimated_amount: 5
          guid: guid
          external_bank_account_guid: external_bank_account_guid
          destination_participants:
          - amount: 2
            guid: guid
            type: type
          - amount: 2
            guid: guid
            type: type
          transfer_type: transfer_type
          asset: asset
          return_code: return_code
          estimated_network_fee: 7
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of trade entities
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    TradeList:
      example:
        per_page: 0
        total: 0
        objects:
        - symbol: symbol
          side: side
          failure_code: failure_code
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deliver_amount: 5
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          trade_type: trade_type
          receive_amount: 5
          state: state
          customer_guid: customer_guid
          reference_trade_guid: reference_trade_guid
        - symbol: symbol
          side: side
          failure_code: failure_code
          quote_guid: quote_guid
          fee: 2
          created_at: 2000-01-23T04:56:07.000+00:00
          deliver_amount: 5
          labels:
          - labels
          - labels
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          trade_type: trade_type
          receive_amount: 5
          state: state
          customer_guid: customer_guid
          reference_trade_guid: reference_trade_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of trade entities
          items:
            $ref: '#/components/schemas/Trade'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    WorkflowsList:
      example:
        per_page: 0
        total: 0
        objects:
        - failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        - failure_code: failure_code
          updated_at: 2000-01-23T04:56:07.000+00:00
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          state: state
          type: type
          bank_guid: bank_guid
          customer_guid: customer_guid
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of workflow entities
          items:
            $ref: '#/components/schemas/Workflow'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    Account:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        platform_available: 5
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        platform_balance: 5
        state: state
        type: type
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
        labels:
        - labels
        - labels
      properties:
        type:
          description: "The account type; one of trading, fee, fiat, gas, reserve,\
            \ invoice_operations, or storage."
          type: string
        guid:
          description: Auto-generated unique identifier for the account.
          maxLength: 32
          minLength: 32
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        bank_guid:
          description: The bank identifier associated with the account.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier associated with the account.
          maxLength: 32
          minLength: 32
          type: string
        platform_balance:
          description: "The amount of funds that are in the account, in base units\
            \ of the asset."
          type: integer
        platform_available:
          description: "The amount of funds that are in the account, in base units\
            \ of the asset, that are available for use on the platform."
          type: integer
        state:
          description: The state of the account; one of storing or created.
          type: string
        labels:
          description: The labels associated with the account.
          items:
            type: string
          nullable: true
          type: array
      type: object
    AccountType:
      enum:
      - trading
      - fee
      - fiat
      - gas
      - reserve
      - invoice_operations
      - storage
      type: string
    AccountState:
      enum:
      - storing
      - created
      type: string
    AccountList:
      example:
        per_page: 0
        total: 0
        objects:
        - updated_at: 2000-01-23T04:56:07.000+00:00
          platform_available: 5
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          platform_balance: 5
          state: state
          type: type
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        - updated_at: 2000-01-23T04:56:07.000+00:00
          platform_available: 5
          name: name
          guid: guid
          created_at: 2000-01-23T04:56:07.000+00:00
          platform_balance: 5
          state: state
          type: type
          asset: asset
          bank_guid: bank_guid
          customer_guid: customer_guid
          labels:
          - labels
          - labels
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of account entities
          items:
            $ref: '#/components/schemas/Account'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ListRequestCursor:
      description: The cursor used to retrieve the page.
      nullable: true
      type: string
    ListRequestPage:
      description: The page index to retrieve.
      minimum: 0
      type: integer
    ListRequestPerPage:
      description: The number of entities per page to return.
      maximum: 100
      minimum: 1
      type: integer
    ListRequestOwner:
      description: The owner of the entity; one of bank or customer.
      type: string
    ExternalBankAccount:
      example:
        failure_code: failure_code
        balance_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        account_kind: account_kind
        plaid_account_mask: plaid_account_mask
        plaid_account_name: plaid_account_name
        pii:
        - email_addresses:
          - email_addresses
          - email_addresses
          phone_numbers:
          - phone_numbers
          - phone_numbers
          addresses:
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          names:
          - names
          - names
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          account_details:
          - account_number: account_number
          - account_number: account_number
        - email_addresses:
          - email_addresses
          - email_addresses
          phone_numbers:
          - phone_numbers
          - phone_numbers
          addresses:
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          - subdivision: subdivision
            country_code: country_code
            city: city
            street: street
            street2: street2
            postal_code: postal_code
          names:
          - names
          - names
          routing_details:
          - routing_number_type: routing_number_type
            routing_number: routing_number
          - routing_number_type: routing_number_type
            routing_number: routing_number
          account_details:
          - account_number: account_number
          - account_number: account_number
        environment: environment
        balances:
          current: 0
          available: 0
        updated_at: 2000-01-23T04:56:07.000+00:00
        plaid_institution_id: plaid_institution_id
        name: name
        guid: guid
        state: state
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the account.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        account_kind:
          description: "The type of account; one of plaid, plaid_processor_token,\
            \ or raw_routing_details."
          type: string
        environment:
          description: The environment that the external bank account is operating
            in; one of sandbox or production.
          type: string
        bank_guid:
          description: The bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        plaid_institution_id:
          description: The Plaid institution ID for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_mask:
          description: The account number mask for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_name:
          description: The name for the account.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        state:
          description: "The state of the external bank account; one of storing, completed,\
            \ failed, refresh_required, unverified, deleting, or deleted."
          type: string
        failure_code:
          description: The failure code for failed transfers.
          nullable: true
          type: string
        balance_updated_at:
          description: The timestamp that the balance information was last updated
            at.
          format: date-time
          nullable: true
          type: string
        balances:
          $ref: '#/components/schemas/ExternalBankAccount_balances'
        pii:
          description: The account holder information.
          items:
            $ref: '#/components/schemas/ExternalBankAccount_pii_inner'
          nullable: true
          type: array
      type: object
    ExternalBankAccountKind:
      enum:
      - plaid
      - plaid_processor_token
      - raw_routing_details
      type: string
    ExternalBankAccountState:
      enum:
      - storing
      - completed
      - failed
      - refresh_required
      - unverified
      - deleting
      - deleted
      type: string
    IdentificationNumber:
      example:
        identification_number: identification_number
        issuing_country_code: issuing_country_code
        type: type
      properties:
        type:
          description: "The source of the identification number; one of drivers_license,\
            \ passport, passport_card, residence_card, visa, social_security_number,\
            \ tax_identification_number, identification_card, employer_identification_number,\
            \ or business_registration_number."
          type: string
        issuing_country_code:
          description: The ISO 3166 country 2-Alpha country code of the identification
            number issuer.
          nullable: true
          type: string
        identification_number:
          description: The identification number.
          type: string
      required:
      - identification_number
      - issuing_country_code
      - type
      type: object
    ExternalWallet:
      example:
        environment: environment
        failure_code: failure_code
        address: address
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        guid: guid
        created_at: 2000-01-23T04:56:07.000+00:00
        tag: tag
        state: state
        asset: asset
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the wallet.
          maxLength: 32
          minLength: 32
          type: string
        name:
          description: The name of the wallet.
          maxLength: 128
          minLength: 1
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        environment:
          description: The environment that the wallet is configured for; one of sandbox
            or production.
          type: string
        bank_guid:
          description: The bank identifier.
          maxLength: 32
          minLength: 32
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        address:
          description: The blockchain wallet address for the wallet.
          maxLength: 512
          type: string
        tag:
          description: The blockchain tag to use when transferring crypto to the wallet.
          maxLength: 512
          nullable: true
          type: string
        created_at:
          description: ISO8601 datetime the record was created at.
          format: date-time
          type: string
        updated_at:
          description: ISO8601 datetime the record was last updated at.
          format: date-time
          type: string
        state:
          description: "The state of the external wallet; one of storing, pending,\
            \ failed, completed, deleting, or deleted."
          type: string
        failure_code:
          description: The failure code of an external wallet (if any)
          nullable: true
          type: string
      type: object
    ExternalWalletEnvironment:
      enum:
      - sandbox
      - production
      type: string
    ExternalWalletState:
      enum:
      - storing
      - pending
      - failed
      - completed
      - deleting
      - deleted
      type: string
    PostBank:
      description: Request body for bank creation.
      properties:
        type:
          description: The type of bank.
          enum:
          - sandbox
          type: string
        name:
          description: The name of the bank.
          maxLength: 128
          minLength: 1
          type: string
        supported_trading_symbols:
          description: The trading symbols supported by the bank.
          items:
            type: string
          maxItems: 50
          type: array
        supported_payout_symbols:
          description: The payout symbols supported by the bank. This is not yet supported
            and should be nil or empty.
          items:
            $ref: '#/components/schemas/PostSupportedPayoutSymbols'
          maxItems: 50
          nullable: true
          type: array
        supported_fiat_account_assets:
          description: The fiat account assets supported by the bank.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        supported_country_codes:
          description: The country codes supported by the bank.
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        features:
          description: The features supported by the bank.
          items:
            enum:
            - attestation_identity_records
            - attestation_identity_records_v2
            - kyc_identity_verifications
            - business_customers
            - individual_customers
            type: string
          maxItems: 50
          type: array
        cors_allowed_origins:
          description: The list of allowed CORS origin URIs.
          items:
            type: string
          maxItems: 50
          nullable: true
          type: array
      required:
      - features
      - name
      - supported_country_codes
      - supported_fiat_account_assets
      - supported_trading_symbols
      - type
      type: object
    PatchBank:
      description: Request body for bank modification.
      properties:
        name:
          description: The name of the bank.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        supported_trading_symbols:
          description: The trading symbols supported by the bank.
          items:
            type: string
          maxItems: 50
          nullable: true
          type: array
        supported_payout_symbols:
          description: The payout symbols supported by the bank. This is not yet supported
            and should be nil or empty.
          items:
            $ref: '#/components/schemas/PostSupportedPayoutSymbols'
          maxItems: 50
          nullable: true
          type: array
        cors_allowed_origins:
          description: The list of allowed CORS origin URIs.
          items:
            type: string
          maxItems: 50
          nullable: true
          type: array
      type: object
    PostCustomer:
      description: Request body for customer creation.
      properties:
        type:
          description: The type of customer.
          enum:
          - business
          - individual
          type: string
        address:
          $ref: '#/components/schemas/PostCustomer_address'
        phone_number:
          description: The customer's phone number.
          nullable: true
          type: string
        email_address:
          description: The customer's email address.
          nullable: true
          type: string
        identification_numbers:
          description: The customer's identification numbers.
          items:
            $ref: '#/components/schemas/PostIdentificationNumber'
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
        name:
          $ref: '#/components/schemas/PostCustomer_name'
        date_of_birth:
          description: The customer's date of birth. Optional when type is individual.
          format: date
          nullable: true
          type: string
        aliases:
          description: The aliases of the customer. Optional when type is business.
          items:
            $ref: '#/components/schemas/PostCustomer_aliases_inner'
          maxItems: 1
          minItems: 0
          nullable: true
          type: array
        website:
          description: The customer's website. Optional when type is business.
          nullable: true
          type: string
        labels:
          description: The labels associated with the customer.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - type
      type: object
    PatchCustomer:
      description: Request body for customer modification.
      properties:
        state:
          description: The customer's state.
          enum:
          - unverified
          nullable: true
          type: string
      type: object
    PostCounterparty:
      description: Request body for counterparty creation.
      properties:
        type:
          description: The counterparty's type.
          enum:
          - business
          - individual
          type: string
        customer_guid:
          description: The owning customer's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/PostCounterparty_address'
        name:
          $ref: '#/components/schemas/PostCounterparty_name'
        aliases:
          description: The aliases of the counterparty. Optional when type is business.
          items:
            $ref: '#/components/schemas/PostCounterparty_aliases_inner'
          maxItems: 1
          minItems: 0
          nullable: true
          type: array
        date_of_birth:
          description: The counterparty's date of birth. Optional when type is individual.
          format: date
          nullable: true
          type: string
        labels:
          description: The labels associated with the counterparty.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - address
      - type
      type: object
    PostIdentityVerification:
      description: Request body for identity verification creation.
      properties:
        type:
          description: The type of identity verification.
          enum:
          - kyc
          - bank_account
          - counterparty
          type: string
        customer_guid:
          description: The customer's identifier. Required when type is kyc and method
            is attested_business_registration or type is kyc and method is attested_id_and_selfie.
          maxLength: 32
          nullable: true
          type: string
        expected_behaviours:
          description: The optional expected behaviour to simulate.
          items:
            enum:
            - passed_immediately
            - failed_immediately
            - tax_id_not_checked
            type: string
          maxItems: 50
          nullable: true
          type: array
        method:
          description: "The identity verification method. Required when type is counterparty,\
            \ type is kyc, or type is bank_account."
          enum:
          - watchlists
          - attested
          - document_submission
          - id_and_selfie
          - tax_id_and_selfie
          - business_registration
          - attested_id_and_selfie
          - attested_business_registration
          - attested_ownership
          - account_ownership
          nullable: true
          type: string
        counterparty_guid:
          description: The counterparty's identifier. Required when type is counterparty.
          nullable: true
          type: string
        country_code:
          description: "The ISO 3166 country 2-Alpha country the customer is being\
            \ verified in. If not present, will default to the Bank's configured country\
            \ code. Optional when type is kyc and method is id_and_selfie, type is\
            \ kyc and method is tax_id_and_selfie, or type is kyc and method is business_registration."
          nullable: true
          type: string
        name:
          $ref: '#/components/schemas/PostIdentityVerification_name'
        address:
          $ref: '#/components/schemas/PostIdentityVerification_address'
        date_of_birth:
          description: The customer's date of birth. Required when type is kyc and
            method is attested or type is kyc and method is attested_id_and_selfie.
          format: date
          nullable: true
          type: string
        identification_numbers:
          description: "The customer's identification numbers. Required when type\
            \ is kyc and method is attested, type is kyc and method is attested_business_registration,\
            \ or type is kyc and method is attested_id_and_selfie."
          items:
            $ref: '#/components/schemas/PostIdentificationNumber'
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
        aliases:
          description: The aliases of the customer. Optional when type is kyc and
            method is attested_business_registration.
          items:
            $ref: '#/components/schemas/PostIdentityVerification_aliases_inner'
          minItems: 0
          nullable: true
          type: array
        phone_number:
          description: The customer's phone number. Required when type is kyc and
            method is attested_business_registration or type is kyc and method is
            attested_id_and_selfie. Optional when type is bank_account and method
            is attested_ownership.
          nullable: true
          type: string
        email_address:
          description: The customer's email address. Required when type is kyc and
            method is attested_business_registration or type is kyc and method is
            attested_id_and_selfie. Optional when type is bank_account and method
            is attested_ownership.
          nullable: true
          type: string
        website:
          description: The customer's website. Required when type is kyc and method
            is attested_business_registration.
          nullable: true
          type: string
        nature_of_business:
          description: The customer's nature of business. Required when type is kyc
            and method is attested_business_registration.
          nullable: true
          type: string
        director_customer_guids:
          description: The customer guids of the directors of the business Required
            when type is kyc and method is attested_business_registration.
          items:
            type: string
          maxItems: 50
          minItems: 1
          nullable: true
          type: array
        ultimate_beneficial_owners:
          description: The ultimate beneficial owners of the business with 10% or
            more ownership Required when type is kyc and method is attested_business_registration.
          items:
            $ref: '#/components/schemas/PostUltimateBeneficialOwner'
          maxItems: 50
          minItems: 1
          nullable: true
          type: array
        supporting_file_guids:
          description: File guids supporting the verification Required when type is
            kyc and method is attested_business_registration or type is kyc and method
            is attested_id_and_selfie.
          items:
            type: string
          maxItems: 10
          minItems: 1
          nullable: true
          type: array
        occupation:
          description: The customer's occupation. Required when type is kyc and method
            is attested_id_and_selfie.
          nullable: true
          type: string
        external_bank_account_guid:
          description: The external bank account's identifier. Required when type
            is bank_account.
          nullable: true
          type: string
      required:
      - type
      type: object
    PostIdentificationNumber:
      description: Identification number details.
      properties:
        type:
          description: The source of the identification number.
          enum:
          - drivers_license
          - passport
          - passport_card
          - residence_card
          - visa
          - social_security_number
          - tax_identification_number
          - identification_card
          - employer_identification_number
          - business_registration_number
          type: string
        issuing_country_code:
          description: The ISO 3166 country 2-Alpha country code of the identification
            number issuer.
          type: string
        identification_number:
          description: The identification number.
          type: string
      required:
      - identification_number
      - issuing_country_code
      - type
      type: object
    PostUltimateBeneficialOwner:
      description: Identification number details.
      properties:
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          type: string
        ownership_percentage:
          description: The ownership percentage.
          type: number
      required:
      - customer_guid
      - ownership_percentage
      type: object
    PostFile:
      description: Request body for a new file.
      properties:
        type:
          description: The type of file.
          enum:
          - drivers_license_front
          - drivers_license_back
          - passport
          - visa
          - identification_card
          - residence_card
          - selfie
          - selfie_video
          - selfie_left
          - selfie_right
          - utility_bill
          - bank_statement
          - property_tax
          - tax_document
          - ein_letter
          - incorporation_certificate
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          type: string
        filename:
          description: The name of the file.
          maxLength: 128
          minLength: 1
          type: string
        content_type:
          description: The content type of the file.
          enum:
          - image/jpeg
          - image/png
          - application/pdf
          - video/mp4
          type: string
        data:
          description: Base64 encoded file content
          maxLength: 10485760
          nullable: true
          type: string
      required:
      - content_type
      - customer_guid
      - filename
      - type
      type: object
    PostDepositAddress:
      description: Request body for deposit address creation.
      properties:
        account_guid:
          description: The trading account guid.
          maxLength: 32
          minLength: 32
          type: string
        labels:
          description: The labels associated with the address.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - account_guid
      type: object
    PostSupportedPayoutSymbols:
      description: Supported payout symbols details.
      properties:
        primary_asset:
          description: "The primary asset of the payout symbol, e.g., MXN."
          type: string
        counter_asset:
          description: "The counter asset of the payout symbol, e.g., USD."
          type: string
        country_code:
          description: "The ISO 3166 country 2-Alpha country code is permitted in,\
            \ e.g., MX."
          maxLength: 2
          minLength: 2
          type: string
        participants_type:
          description: The participants the symbol is permitted for.
          enum:
          - C2C
          - C2B
          - B2C
          - B2B
          type: string
        route:
          description: The route the symbol is permitted for.
          enum:
          - bank_account
          - mobile_wallet
          type: string
      required:
      - counter_asset
      - country_code
      - participants_type
      - primary_asset
      - route
      type: object
    PostAccount:
      description: Request body for account creation.
      properties:
        type:
          description: The account type.
          enum:
          - trading
          - fiat
          - invoice_operations
          - storage
          type: string
        customer_guid:
          description: TThe customer identifier associated with the account.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        labels:
          description: The labels associated with the account.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - asset
      - name
      - type
      type: object
    PostWorkflow:
      description: Request body for workflow creation.
      properties:
        type:
          description: The workflow type.
          enum:
          - plaid
          type: string
        kind:
          description: The Plaid workflow kind. Required when type is plaid.
          enum:
          - link_token_create
          - link_token_update
          nullable: true
          type: string
        customer_guid:
          description: The customer identifier associated with the workflow. Optional
            when type is plaid and kind is link_token_create.
          maxLength: 32
          nullable: true
          type: string
        external_bank_account_guid:
          description: The external bank account identifier associated with the workflow.
            Required when type is plaid and kind is link_token_update.
          maxLength: 32
          nullable: true
          type: string
        language:
          description: The language to initialize Plaid link. Required when type is
            plaid.
          enum:
          - en
          - fr
          - es
          - nl
          - de
          nullable: true
          type: string
        link_customization_name:
          description: The customization name for Plaid link. Currently only supports
            the value "default". Required when type is plaid.
          maxLength: 128
          nullable: true
          type: string
        redirect_uri:
          description: The redirect URI for Plaid link. Optional when type is plaid.
          maxLength: 128
          nullable: true
          type: string
        android_package_name:
          description: The Android package name for Plaid link. Optional when type
            is plaid.
          maxLength: 128
          nullable: true
          type: string
      required:
      - type
      type: object
    PostTransfer:
      description: Request body for transfer creation.
      properties:
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        transfer_type:
          description: The type of transfer.
          enum:
          - funding
          - crypto
          - instant_funding
          - inter_account
          - lightning
          - book
          type: string
        external_bank_account_guid:
          description: The customer's 'plaid' or 'plaid_processor_token' external
            bank account's identifier. Required when transfer_type is funding or transfer_type
            is instant_funding.
          maxLength: 32
          nullable: true
          type: string
        fiat_account_guid:
          description: The identifier for the fiat account to use for the transfer.
            Required if the customer or bank has multiple fiat accounts. Optional
            when transfer_type is funding.
          maxLength: 32
          nullable: true
          type: string
        send_as_deposit_bank_account_guid:
          description: The deposit bank account's identifier. Only valid for withdrawals.
            The deposit bank account must be owned by the customer or bank initiating
            the transfer. Optional when transfer_type is funding.
          maxLength: 32
          nullable: true
          type: string
        payment_rail:
          description: The desired payment rail to initiate the transfer for. Optional
            when transfer_type is funding.
          enum:
          - ach
          - eft
          - wire
          - rtp
          nullable: true
          type: string
        beneficiary_memo:
          description: The memo to send to the counterparty. Optional when transfer_type
            is funding.
          nullable: true
          type: string
        source_participants:
          description: "The source participants for the transfer. Required when transfer_type\
            \ is funding, transfer_type is instant_funding, transfer_type is book,\
            \ transfer_type is crypto, or transfer_type is lightning."
          items:
            $ref: '#/components/schemas/PostTransferParticipant'
          maxItems: 100
          minItems: 0
          nullable: true
          type: array
        destination_participants:
          description: "The destination participants for the transfer. Required when\
            \ transfer_type is funding, transfer_type is instant_funding, transfer_type\
            \ is book, transfer_type is crypto, or transfer_type is lightning."
          items:
            $ref: '#/components/schemas/PostTransferParticipant'
          maxItems: 100
          minItems: 0
          nullable: true
          type: array
        bank_fiat_account_guid:
          description: The identifier for the fiat account to use for the transfer.
            Required if the bank has multiple fiat accounts. Optional when transfer_type
            is instant_funding or transfer_type is lightning.
          maxLength: 32
          nullable: true
          type: string
        customer_fiat_account_guid:
          description: The identifier for the fiat account to use for the transfer.
            Required if the customer has multiple fiat accounts. Optional when transfer_type
            is instant_funding or transfer_type is lightning.
          maxLength: 32
          nullable: true
          type: string
        source_account_guid:
          description: The source account's identifier. Required when transfer_type
            is book or transfer_type is inter_account.
          maxLength: 32
          nullable: true
          type: string
        destination_account_guid:
          description: The destination account's identifier. Required when transfer_type
            is book or transfer_type is inter_account.
          maxLength: 32
          nullable: true
          type: string
        external_wallet_guid:
          description: The customer's external wallet's identifier. Optional when
            transfer_type is crypto.
          maxLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The customer's identifier. Required when transfer_type is lightning.
          maxLength: 32
          nullable: true
          type: string
        network_fee_account_guid:
          description: "The network fee account's identifier. Required for network\
            \ fee transfers. Must be the identifier for the customer's or bank's fiat\
            \ or trading account. For customer's to pay the network fees, include\
            \ the customer's fiat or trading account guid. For bank's to pay the network\
            \ fees, include the bank's fiat or trading account guid. Required when\
            \ transfer_type is lightning."
          maxLength: 32
          nullable: true
          type: string
        expected_behaviours:
          description: The optional expected behaviour to simulate. Only applicable
            for transfers under sandbox banks. The force_review behaviour will force
            the transfer to be reviewed for funding and instant_funding transfers.
          items:
            enum:
            - force_review
            type: string
          maxItems: 50
          nullable: true
          type: array
        labels:
          description: The labels associated with the transfer.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - quote_guid
      - transfer_type
      type: object
    PostTransferParticipant:
      description: Request body for a transfer participant.
      properties:
        type:
          description: The type of participant.
          enum:
          - bank
          - customer
          - counterparty
          type: string
        amount:
          description: The amount in base units of the asset.
          type: integer
        guid:
          description: The participant's identifier.
          maxLength: 32
          minLength: 32
          type: string
      required:
      - amount
      - guid
      - type
      type: object
    PostTrade:
      description: Request body for trade creation.
      properties:
        trade_type:
          default: platform
          description: The type of trade.
          enum:
          - platform
          - exit
          nullable: true
          type: string
        quote_guid:
          description: The associated quote's identifier.
          maxLength: 32
          minLength: 32
          type: string
        fiat_account_guid:
          description: The identifier for the fiat account to use for the trade. Required
            if the customer or bank has multiple fiat accounts.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        expected_error:
          description: The optional expected error to simulate trade failure.
          enum:
          - expired_quote
          - non_sufficient_funds
          nullable: true
          type: string
        labels:
          description: The labels associated with the trade.
          items:
            maxLength: 64
            minLength: 1
            type: string
          maxItems: 8
          nullable: true
          type: array
      required:
      - quote_guid
      type: object
    PatchExternalBankAccount:
      description: Request body for external bank account modification.
      properties:
        state:
          description: "The state of the external bank account. If set to \"completed,\"\
            \ the returned state of the external bank account will be either \"completed\"\
            , if the bank account has been verified, or \"unverified\" if the bank\
            \ account has not been verified."
          enum:
          - completed
          - refresh_required
          type: string
      required:
      - state
      type: object
    PostExternalBankAccount:
      description: Request body for external bank account creation.
      properties:
        name:
          description: The name of the account.
          maxLength: 128
          minLength: 1
          type: string
        account_kind:
          description: The account type
          enum:
          - plaid
          - plaid_processor_token
          - raw_routing_details
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code. If not set will try and default to the Bank's
            configured fiat asset.
          nullable: true
          type: string
        plaid_public_token:
          description: The public token for the account. Required for 'plaid' accounts.
            Required when account_kind is plaid.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_id:
          description: The account identifier in plaid. Required for 'plaid' accounts.
            Required when account_kind is plaid.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_processor_token:
          description: The Plaid processor token used to access the account. Required
            when account_kind is plaid_processor_token.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_institution_id:
          description: Plaid's institution ID for the account's institution. Required
            when account_kind is plaid_processor_token.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_mask:
          description: The account mask for the account. Required when account_kind
            is plaid_processor_token.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        plaid_account_name:
          description: The name of the account. Required when account_kind is plaid_processor_token.
          maxLength: 128
          minLength: 1
          nullable: true
          type: string
        counterparty_guid:
          description: The counterparty identifier. Optional when account_kind is
            raw_routing_details.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        counterparty_bank_account:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_bank_account'
        counterparty_name:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_name'
        counterparty_address:
          $ref: '#/components/schemas/PostExternalBankAccount_counterparty_address'
        counterparty_email_address:
          description: The counterparty's email address on their checking account.
            Optional when account_kind is raw_routing_details and counterparty_guid
            is not present.
          nullable: true
          type: string
      required:
      - account_kind
      - name
      type: object
    PostExternalWallet:
      description: Request body for external wallet creation.
      properties:
        name:
          description: Name of the external wallet.
          maxLength: 128
          minLength: 1
          type: string
        customer_guid:
          description: The customer identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        counterparty_guid:
          description: The counterparty identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        asset:
          description: The asset code.
          maxLength: 8
          minLength: 1
          type: string
        address:
          description: The blockchain wallet address for the wallet.
          maxLength: 512
          type: string
        tag:
          description: The blockchain tag to use when transferring crypto to the wallet.
          maxLength: 512
          nullable: true
          type: string
      required:
      - address
      - asset
      - name
      type: object
    PlatformFile:
      example:
        completed_at: 2000-01-23T04:56:07.000+00:00
        failure_code: failure_code
        content_type: image/jpeg
        file_type: drivers_license_front
        guid: guid
        failed_at: 2000-01-23T04:56:07.000+00:00
        state: storing
      properties:
        guid:
          description: The unique identifier for the file.
          maxLength: 32
          minLength: 32
          type: string
        file_type:
          description: "The file type; one of drivers_license_front, drivers_license_back,\
            \ passport, visa, identification_card, residence_card, selfie, selfie_video,\
            \ selfie_left, selfie_right, utility_bill, bank_statement, property_tax,\
            \ tax_document, ein_letter, or incorporation_certificate."
          enum:
          - drivers_license_front
          - drivers_license_back
          - passport
          - visa
          - identification_card
          - residence_card
          - selfie
          - selfie_video
          - selfie_left
          - selfie_right
          - utility_bill
          - bank_statement
          - property_tax
          - tax_document
          - ein_letter
          - incorporation_certificate
          type: string
        content_type:
          description: "The media type; one of image/jpeg, image/png, application/pdf,\
            \ or video/mp4."
          enum:
          - image/jpeg
          - image/png
          - application/pdf
          - video/mp4
          type: string
        completed_at:
          description: The ISO8601 datetime the file was completed at.
          format: date-time
          type: string
        failed_at:
          description: The ISO8601 datetime the file failed at.
          format: date-time
          type: string
        state:
          description: "The state of the file. One of storing, completed, or failed."
          enum:
          - storing
          - completed
          - failed
          type: string
        failure_code:
          description: The failure code for failed files.
          nullable: true
          type: string
      type: object
    PlatformFileList:
      example:
        per_page: 0
        total: 0
        objects:
        - completed_at: 2000-01-23T04:56:07.000+00:00
          failure_code: failure_code
          content_type: image/jpeg
          file_type: drivers_license_front
          guid: guid
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: storing
        - completed_at: 2000-01-23T04:56:07.000+00:00
          failure_code: failure_code
          content_type: image/jpeg
          file_type: drivers_license_front
          guid: guid
          failed_at: 2000-01-23T04:56:07.000+00:00
          state: storing
        page: 0
      properties:
        total:
          description: The total number of records available.
          minimum: 0
          type: integer
        page:
          description: The page index to retrieve.
          minimum: 0
          type: integer
        per_page:
          description: The number of entities per page to return.
          minimum: 0
          type: integer
        objects:
          description: Array of file entities
          items:
            $ref: '#/components/schemas/PlatformFile'
          type: array
      required:
      - objects
      - page
      - per_page
      - total
      type: object
    ErrorResponse:
      properties:
        status:
          description: Status code for Http Request
          type: integer
        error_message:
          description: Error message
          type: string
        message_code:
          description: Message code for Error
          type: string
      required:
      - error_message
      - message_code
      - status
      type: object
    Bank_supported_payout_symbols_inner:
      example:
        symbol: symbol
        country_code: country_code
        participants_type: participants_type
        route: route
      properties:
        symbol:
          description: The payout symbol code.
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the payout symbol.
          type: string
        participants_type:
          description: "The participants type; one of C2C, C2B, B2C, or B2B."
          type: string
        route:
          description: The payout symbol route; one of bank_account or mobile_wallet.
          type: string
      type: object
    Counterparty_name:
      description: The counterparty's name. Only available for GET operations when
        'include_pii' is set.
      example:
        middle: middle
        last: last
        first: first
        full: full
      nullable: true
      properties:
        first:
          description: The counterparty's first name.
          nullable: true
          type: string
        middle:
          description: The counterparty's middle name.
          nullable: true
          type: string
        last:
          description: The counterparty's last name.
          nullable: true
          type: string
        full:
          description: The counterparty's full name.
          nullable: true
          type: string
      type: object
    Counterparty_address:
      description: The counterparty's address. Only available for GET operations when
        'include_pii' is set.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          nullable: true
          type: string
        subdivision:
          description: The ISO 3166-2 subdivision code of the address; not used by
            all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          nullable: true
          type: string
      type: object
    Counterparty_aliases_inner:
      example:
        middle: middle
        last: last
        first: first
        full: full
      properties:
        first:
          description: The counterparty's first name.
          nullable: true
          type: string
        middle:
          description: The counterparty's middle name.
          nullable: true
          type: string
        last:
          description: The counterparty's last name.
          nullable: true
          type: string
        full:
          description: The counterparty's full name.
          nullable: true
          type: string
      type: object
    Customer_name:
      description: The customer's name. Only available for GET operations when 'include_pii'
        is set.
      example:
        middle: middle
        last: last
        first: first
        full: full
      nullable: true
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
        full:
          description: The customer's full name.
          nullable: true
          type: string
      type: object
    Customer_address:
      description: The customer's address. Only available for GET operations when
        'include_pii' is set.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          nullable: true
          type: string
        subdivision:
          description: The ISO 3166-2 subdivision code of the address; not used by
            all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          nullable: true
          type: string
      type: object
    Customer_aliases_inner:
      example:
        middle: middle
        last: last
        first: first
        full: full
      properties:
        first:
          description: The customer's first name.
          nullable: true
          type: string
        middle:
          description: The customer's middle name.
          nullable: true
          type: string
        last:
          description: The customer's last name.
          nullable: true
          type: string
        full:
          description: The customer's full name.
          nullable: true
          type: string
      type: object
    IdentityVerificationWithDetails_pii_name:
      description: The attested name
      example:
        middle: middle
        last: last
        first: first
        full: full
      nullable: true
      properties:
        first:
          description: The attested first name.
          nullable: true
          type: string
        middle:
          description: The attested middle name.
          nullable: true
          type: string
        last:
          description: The attested last name.
          nullable: true
          type: string
        full:
          description: The attested full name.
          nullable: true
          type: string
      type: object
    IdentityVerificationWithDetails_pii_address:
      description: The attested address.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          nullable: true
          type: string
        subdivision:
          description: The ISO 3166-2 subdivision code of the address; not used by
            all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    IdentityVerificationWithDetails_pii:
      description: The personally identifiable information associated with the identity
        verification.
      example:
        address:
          subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        email_address: email_address
        date_of_birth: 2000-01-23
        name:
          middle: middle
          last: last
          first: first
          full: full
        phone_number: phone_number
      nullable: true
      properties:
        name:
          $ref: '#/components/schemas/IdentityVerificationWithDetails_pii_name'
        address:
          $ref: '#/components/schemas/IdentityVerificationWithDetails_pii_address'
        date_of_birth:
          description: The attested date of birth.
          format: date
          nullable: true
          type: string
        phone_number:
          description: The attested phone number.
          nullable: true
          type: string
        email_address:
          description: The attested email address.
          nullable: true
          type: string
      type: object
    DepositBankAccount_counterparty_address:
      description: The counterparty's address on the account.
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: The ISO 3166-2 subdivision code of the address; not used by
            all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    DepositBankAccount_account_details_inner:
      example:
        account_number: account_number
      properties:
        account_number:
          description: The account number.
          type: string
      required:
      - account_number
      type: object
    DepositBankAccount_routing_details_inner:
      example:
        routing_number_type: routing_number_type
        routing_number: routing_number
      properties:
        routing_number_type:
          description: "The type of routing number; one of CPA, ABA, or SWIFT."
          type: string
        routing_number:
          description: The routing number.
          type: string
      required:
      - routing_number
      - routing_number_type
      type: object
    QuoteEntry_source_account:
      description: The source account in the batch transfer entry.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: The type of transfer account; one of external_wallet.
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    QuoteEntry_destination_account:
      description: The destination account entry in the batch transfer.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, one_time_address, reserve, invoice_operations, fee,\
            \ gas, or storage."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    WorkflowWithDetails_allOf:
      properties:
        plaid_link_token:
          description: The Plaid link token generated by the workflow.
          nullable: true
          type: string
      type: object
    Transfer_source_account:
      description: The source account in the transfer. Can be omitted for crypto deposits.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, one_time_address, reserve, invoice_operations, fee,\
            \ gas, or storage."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    Transfer_destination_account:
      description: The destination account in the transfer.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, one_time_address, reserve, invoice_operations, fee,\
            \ gas, or storage."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    TransferEntry_destination_account:
      description: The destination account entry in the batch transfer.
      example:
        guid: guid
        type: type
        bank_guid: bank_guid
        customer_guid: customer_guid
      nullable: true
      properties:
        guid:
          description: Auto-generated unique identifier for the transfer account.
          maxLength: 32
          minLength: 32
          type: string
        type:
          description: "The type of transfer account; one of trading, fiat, external_bank_account,\
            \ external_wallet, one_time_address, reserve, invoice_operations, fee,\
            \ gas, or storage."
          type: string
        bank_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
        customer_guid:
          description: The account's identifier.
          maxLength: 32
          minLength: 32
          nullable: true
          type: string
      type: object
    ExternalBankAccount_balances:
      description: Balance information for the account.
      example:
        current: 0
        available: 0
      nullable: true
      properties:
        available:
          description: The available balance in the account.
          minimum: 0
          nullable: true
          type: integer
        current:
          description: The current balance in the account including pending transactions.
          minimum: 0
          nullable: true
          type: integer
      type: object
    ExternalBankAccount_pii_inner_addresses_inner:
      example:
        subdivision: subdivision
        country_code: country_code
        city: city
        street: street
        street2: street2
        postal_code: postal_code
      properties:
        street:
          description: The first line of the address.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          nullable: true
          type: string
        subdivision:
          description: The ISO 3166-2 subdivision code of the address; not used by
            all countries.
          nullable: true
          type: string
        postal_code:
          description: The postal/post/zip code of the address; not used by all countries.
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          nullable: true
          type: string
      type: object
    ExternalBankAccount_pii_inner_routing_details_inner:
      example:
        routing_number_type: routing_number_type
        routing_number: routing_number
      properties:
        routing_number_type:
          description: The type of routing number; one of CPA or ABA.
          type: string
        routing_number:
          description: The routing number.
          type: string
      required:
      - routing_number
      - routing_number_type
      type: object
    ExternalBankAccount_pii_inner:
      example:
        email_addresses:
        - email_addresses
        - email_addresses
        phone_numbers:
        - phone_numbers
        - phone_numbers
        addresses:
        - subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        - subdivision: subdivision
          country_code: country_code
          city: city
          street: street
          street2: street2
          postal_code: postal_code
        names:
        - names
        - names
        routing_details:
        - routing_number_type: routing_number_type
          routing_number: routing_number
        - routing_number_type: routing_number_type
          routing_number: routing_number
        account_details:
        - account_number: account_number
        - account_number: account_number
      properties:
        names:
          description: Array of names on the account
          items:
            type: string
          nullable: true
          type: array
        addresses:
          description: Array of addresses associated to the account
          items:
            $ref: '#/components/schemas/ExternalBankAccount_pii_inner_addresses_inner'
          nullable: true
          type: array
        email_addresses:
          description: Array of email addresses associated to the account
          items:
            type: string
          nullable: true
          type: array
        phone_numbers:
          description: Array of phone numbers associated to the account
          items:
            type: string
          nullable: true
          type: array
        account_details:
          description: The account details for the bank account.
          items:
            $ref: '#/components/schemas/DepositBankAccount_account_details_inner'
          nullable: true
          type: array
        routing_details:
          description: The routing details for the bank account.
          items:
            $ref: '#/components/schemas/ExternalBankAccount_pii_inner_routing_details_inner'
          nullable: true
          type: array
      type: object
    PostCustomer_address:
      description: The customer's address.
      nullable: true
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: "The ISO 3166-2 subdivision code of the address. Applicable\
            \ only for countries that use subnational states, provinces, lands, oblasts\
            \ or regions."
          maxLength: 3
          minLength: 1
          nullable: true
          type: string
        postal_code:
          description: "The postal, zip or post code of the address. Applicable only\
            \ for countries that use postal, zip or post codes."
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    PostCustomer_name:
      description: The customer's name. Optional when type is individual or type is
        business.
      nullable: true
      properties:
        first:
          description: The customer's first name. Required when type is individual.
          nullable: true
          type: string
        middle:
          description: The customer's middle name. Optional when type is individual.
          nullable: true
          type: string
        last:
          description: The customer's last name. Required when type is individual.
          nullable: true
          type: string
        full:
          description: The customer's full name. Required when type is business.
          nullable: true
          type: string
      type: object
    PostCustomer_aliases_inner:
      properties:
        full:
          description: The customer's full name. Required when type is business.
          nullable: true
          type: string
      type: object
    PostCounterparty_address:
      description: The address of the counterparty.
      properties:
        street:
          description: The first line of the address.
          type: string
        street2:
          description: The optional second line of the address.
          nullable: true
          type: string
        city:
          description: The city of the address.
          type: string
        subdivision:
          description: "The ISO 3166-2 subdivision code of the address. Applicable\
            \ only for countries that use subnational states, provinces, lands, oblasts\
            \ or regions."
          maxLength: 3
          minLength: 1
          nullable: true
          type: string
        postal_code:
          description: "The postal, zip or post code of the address. Applicable only\
            \ for countries that use postal, zip or post codes."
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address.
          maxLength: 2
          minLength: 2
          type: string
      required:
      - city
      - country_code
      - street
      type: object
    PostCounterparty_name:
      description: The name of the counterparty. Required when type is business or
        type is individual.
      nullable: true
      properties:
        full:
          description: The counterparty's full name. Required when type is business.
          nullable: true
          type: string
        first:
          description: The counterparty's first name. Required when type is individual.
          nullable: true
          type: string
        middle:
          description: The counterparty's middle name. Optional when type is individual.
          nullable: true
          type: string
        last:
          description: The counterparty's last name. Required when type is individual.
          nullable: true
          type: string
      type: object
    PostCounterparty_aliases_inner:
      properties:
        full:
          description: The counterparty's full name. Required when type is business.
          nullable: true
          type: string
      type: object
    PostIdentityVerification_name:
      description: "The customer's name. Required when type is kyc and method is attested,\
        \ type is kyc and method is attested_business_registration, type is kyc and\
        \ method is attested_id_and_selfie, or type is bank_account and method is\
        \ attested_ownership."
      nullable: true
      properties:
        first:
          description: The customer's first name. Required when type is kyc and method
            is attested or type is kyc and method is attested_id_and_selfie. Optional
            when type is bank_account and method is attested_ownership.
          nullable: true
          type: string
        middle:
          description: "The customer's middle name. Optional when type is kyc and\
            \ method is attested, type is kyc and method is attested_id_and_selfie,\
            \ or type is bank_account and method is attested_ownership."
          nullable: true
          type: string
        last:
          description: The customer's last name. Required when type is kyc and method
            is attested or type is kyc and method is attested_id_and_selfie. Optional
            when type is bank_account and method is attested_ownership.
          nullable: true
          type: string
        full:
          description: The customer's full name. Required when type is kyc and method
            is attested_business_registration or type is bank_account and method is
            attested_ownership. Optional when type is kyc and method is attested or
            type is kyc and method is attested_id_and_selfie.
          nullable: true
          type: string
      type: object
    PostIdentityVerification_address:
      description: "The customer's address. Required when type is kyc and method is\
        \ attested, type is kyc and method is attested_business_registration, or type\
        \ is kyc and method is attested_id_and_selfie. Optional when type is bank_account\
        \ and method is attested_ownership."
      nullable: true
      properties:
        street:
          description: "The first line of the address. Required when type is kyc and\
            \ method is attested, type is kyc and method is attested_business_registration,\
            \ type is kyc and method is attested_id_and_selfie, or type is bank_account\
            \ and method is attested_ownership."
          nullable: true
          type: string
        street2:
          description: "The optional second line of the address. Optional when type\
            \ is kyc and method is attested, type is kyc and method is attested_business_registration,\
            \ type is kyc and method is attested_id_and_selfie, or type is bank_account\
            \ and method is attested_ownership."
          nullable: true
          type: string
        city:
          description: "The city of the address. Required when type is kyc and method\
            \ is attested, type is kyc and method is attested_business_registration,\
            \ type is kyc and method is attested_id_and_selfie, or type is bank_account\
            \ and method is attested_ownership."
          nullable: true
          type: string
        subdivision:
          description: "The ISO 3166-2 subdivision code of the address. Applicable\
            \ only for countries that use subnational states, provinces, lands, oblasts\
            \ or regions. Optional when type is kyc and method is attested, type is\
            \ kyc and method is attested_business_registration, type is kyc and method\
            \ is attested_id_and_selfie, or type is bank_account and method is attested_ownership."
          maxLength: 3
          minLength: 1
          nullable: true
          type: string
        postal_code:
          description: "The postal, zip or post code of the address. Applicable only\
            \ for countries that use postal, zip or post codes. Optional when type\
            \ is kyc and method is attested, type is kyc and method is attested_business_registration,\
            \ type is kyc and method is attested_id_and_selfie, or type is bank_account\
            \ and method is attested_ownership."
          nullable: true
          type: string
        country_code:
          description: "The ISO 3166 country 2-Alpha country code of the address.\
            \ Required when type is kyc and method is attested, type is kyc and method\
            \ is attested_business_registration, type is kyc and method is attested_id_and_selfie,\
            \ or type is bank_account and method is attested_ownership."
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
      type: object
    PostIdentityVerification_aliases_inner:
      properties:
        full:
          description: The customer's full name. Required when type is kyc and method
            is attested_business_registration.
          nullable: true
          type: string
      type: object
    PostExternalBankAccount_counterparty_bank_account:
      description: The counterparty's checking bank account information. Required
        when account_kind is raw_routing_details.
      nullable: true
      properties:
        routing_number_type:
          description: The type of routing number. Required when account_kind is raw_routing_details.
          enum:
          - CPA
          - ABA
          nullable: true
          type: string
        routing_number:
          description: The routing number. Required when account_kind is raw_routing_details.
          nullable: true
          type: string
        account_number:
          description: The account number. Required when account_kind is raw_routing_details.
          nullable: true
          type: string
      type: object
    PostExternalBankAccount_counterparty_name:
      description: The counterparty's name on their checking account. Required when
        account_kind is raw_routing_details and counterparty_guid is not present.
      nullable: true
      properties:
        first:
          description: The counterparty's first name; used for individuals. Optional
            when account_kind is raw_routing_details and counterparty_guid is not
            present.
          nullable: true
          type: string
        middle:
          description: The counterparty's middle name; used for individuals. Optional
            when account_kind is raw_routing_details and counterparty_guid is not
            present.
          nullable: true
          type: string
        last:
          description: The counterparty's last name; used for individuals. Optional
            when account_kind is raw_routing_details and counterparty_guid is not
            present.
          nullable: true
          type: string
        full:
          description: The counterparty's full name; used for businesses. Optional
            when account_kind is raw_routing_details and counterparty_guid is not
            present.
          nullable: true
          type: string
      type: object
    PostExternalBankAccount_counterparty_address:
      description: The counterparty's address on their checking account. Required
        when account_kind is raw_routing_details and counterparty_guid is not present.
      nullable: true
      properties:
        street:
          description: The first line of the address. Required when account_kind is
            raw_routing_details and counterparty_guid is not present.
          nullable: true
          type: string
        street2:
          description: The optional second line of the address. Optional when account_kind
            is raw_routing_details and counterparty_guid is not present.
          nullable: true
          type: string
        city:
          description: The city of the address. Required when account_kind is raw_routing_details
            and counterparty_guid is not present.
          nullable: true
          type: string
        subdivision:
          description: "The ISO 3166-2 subdivision code of the address. Applicable\
            \ only for countries that use subnational states, provinces, lands, oblasts\
            \ or regions. Optional when account_kind is raw_routing_details and counterparty_guid\
            \ is not present."
          maxLength: 3
          minLength: 1
          nullable: true
          type: string
        postal_code:
          description: "The postal, zip or post code of the address. Applicable only\
            \ for countries that use postal, zip or post codes. Optional when account_kind\
            \ is raw_routing_details and counterparty_guid is not present."
          nullable: true
          type: string
        country_code:
          description: The ISO 3166 country 2-Alpha country code of the address. Required
            when account_kind is raw_routing_details and counterparty_guid is not
            present.
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
      type: object
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes:
            banks:read: banks read
            banks:write: banks write
            bank_applications:execute: bank_applications execute
            accounts:read: accounts read
            accounts:execute: accounts execute
            counterparties:read: counterparties read
            counterparties:write: counterparties write
            counterparties:execute: counterparties execute
            customers:read: customers read
            customers:write: customers write
            customers:execute: customers execute
            prices:read: prices read
            quotes:execute: quotes execute
            quotes:read: quotes read
            trades:execute: trades execute
            trades:read: trades read
            transfers:execute: transfers execute
            transfers:read: transfers read
            external_bank_accounts:read: external_bank_accounts read
            external_bank_accounts:write: external_bank_accounts write
            external_bank_accounts:execute: external_bank_accounts execute
            external_wallets:read: external_wallets read
            external_wallets:execute: external_wallets execute
            workflows:read: workflows read
            workflows:execute: workflows execute
            deposit_addresses:read: deposit_addresses read
            deposit_addresses:execute: deposit_addresses execute
            deposit_bank_accounts:read: deposit_bank_accounts read
            deposit_bank_accounts:execute: deposit_bank_accounts execute
            invoices:read: invoices read
            invoices:write: invoices write
            invoices:execute: invoices execute
            identity_verifications:read: identity_verifications read
            identity_verifications:write: identity_verifications write
            identity_verifications:execute: identity_verifications execute
            files:read: files read
            files:execute: files execute
          tokenUrl: https://id.production.cybrid.app/oauth/token
      type: oauth2
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

